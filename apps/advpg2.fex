SET ASNAMES=ON
-*SET TEMPERASE = OFF

JOIN AIR_KEY IN AYMETX TO ALL AIR_KEY IN SYMETX AS J1
END

DEFINE FILE AYMETX
FARE_PAID/D12.2 = SEG_AMT + SEG_TAX;
MX_ADV_PUR/A8       = IF (ADV_PURCH LT 7) THEN '0 - 6' ELSE
                        IF (ADV_PURCH LT 14) THEN '07 - 13' ELSE
                        IF (ADV_PURCH LT 21) THEN '14 - 20' ELSE '21 +';
NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
ADV_NTA/P12 = IF MX_ADV_PUR EQ '0 - 6' THEN NET_TKT_CNT ELSE 0;
ADV_NTB/P12 = IF MX_ADV_PUR EQ '07 - 13' THEN NET_TKT_CNT ELSE 0;
ADV_NTC/P12 = IF MX_ADV_PUR EQ '14 - 20' THEN NET_TKT_CNT ELSE 0;
ADV_NTD/P12 = IF MX_ADV_PUR EQ '21 +' THEN NET_TKT_CNT ELSE 0;
ADV_FPA/P12.2CS = IF MX_ADV_PUR EQ '0 - 6' THEN FARE_PAID ELSE 0;
ADV_FPB/P12.2CS = IF MX_ADV_PUR EQ '07 - 13' THEN FARE_PAID ELSE 0;
ADV_FPC/P12.2CS = IF MX_ADV_PUR EQ '14 - 20' THEN FARE_PAID ELSE 0;
ADV_FPD/P12.2CS = IF MX_ADV_PUR EQ '21 +' THEN FARE_PAID ELSE 0;
END
-RUN


TABLE FILE AYMETX
SUM ADV_NTA ADV_NTB ADV_NTC ADV_NTD ADV_FPA ADV_FPB ADV_FPC ADV_FPD
NET_TKT_CNT
COMPUTE ATPA/P12 = ADV_FPA/ADV_NTA;
COMPUTE ATPB/P12 = ADV_FPB/ADV_NTB;
COMPUTE ATPC/P12 = ADV_FPC/ADV_NTC;
COMPUTE ATPD/P12 = ADV_FPD/ADV_NTD;                   
BY MX_ADV_PUR
ON TABLE HOLD AS COMP2
END
-RUN

DEFINE FILE COMP2
FLAG/A1 = 'A';
END
-RUN

TABLE FILE COMP2
-* SUM ADV_NTA ADV_NTB ADV_NTC ADV_NTD ADV_FPA ADV_FPB ADV_FPC ADV_FPD
SUM 
COMPUTE MOVE10A/P12 = (ADV_NTA * .10); 
COMPUTE MOVE10AA/P12 = ADV_NTA - MOVE10A;
COMPUTE MOVE10B/P12 = (ADV_NTB * .10); 
COMPUTE MOVE10BA/P12 = ADV_NTB + MOVE10A;
COMPUTE MOVE10C/P12 = (ADV_NTC * .10); 
COMPUTE MOVE10CA/P12 = ADV_NTC + MOVE10B;
COMPUTE MOVE10DA/P12 = ADV_NTD + MOVE10C;
COMPUTE MOVE25A/P12 = (ADV_NTA * .25); 
COMPUTE MOVE25AA/P12 = ADV_NTA - MOVE25A;
COMPUTE MOVE25B/P12 = (ADV_NTB * .25); 
COMPUTE MOVE25BA/P12 = ADV_NTB + MOVE25A;
COMPUTE MOVE25C/P12 = (ADV_NTC * .25); 
COMPUTE MOVE25CA/P12 = ADV_NTC + MOVE25B;
COMPUTE MOVE25DA/P12 = ADV_NTD + MOVE25C;
COMPUTE MOVE50A/P12 = (ADV_NTA * .50); 
COMPUTE MOVE50AA/P12 = ADV_NTA - MOVE50A;
COMPUTE MOVE50B/P12 = (ADV_NTB * .50); 
COMPUTE MOVE50BA/P12 = ADV_NTB + MOVE50A;
COMPUTE MOVE50C/P12 = (ADV_NTC * .50);
COMPUTE MOVE50CA/P12 = ADV_NTC + MOVE50B;
COMPUTE MOVE50DA/P12 = ADV_NTD + MOVE50C;
COMPUTE SAVE10A/P12 = ATPA * MOVE10A;
COMPUTE SAVE10B/P12 = ((ATPA-ATPB) * MOVE10A);
COMPUTE SAVE10C/P12 = ((ATPB-ATPC) * MOVE10B);
COMPUTE SAVE10D/P12 = ((ATPC-ATPD) * MOVE10C);
COMPUTE SAVE25A/P12 = ATPA * MOVE25A;
COMPUTE SAVE25B/P12 = ((ATPA-ATPB) * MOVE25A);
COMPUTE SAVE25C/P12 = ((ATPB-ATPC) * MOVE25B);
COMPUTE SAVE25D/P12 = ((ATPC-ATPD) * MOVE25C);
COMPUTE SAVE50A/P12 = ATPA * MOVE50A;
COMPUTE SAVE50B/P12 = ((ATPA-ATPB) * MOVE50A);
COMPUTE SAVE50C/P12 = ((ATPB-ATPC) * MOVE50B);
COMPUTE SAVE50D/P12 = ((ATPC-ATPD) * MOVE50C);
BY FLAG
ON TABLE HOLD AS COMP2A
END
-RUN

DEFINE FILE COMP2
FLAG/A1 = 'A';
END
-RUN

TABLE FILE COMP2
PRINT MX_ADV_PUR
BY FLAG
ON TABLE HOLD AS COMPM
END
-RUN

MATCH FILE COMP2A
SUM MOVE10AA MOVE10BA MOVE10CA MOVE10DA MOVE25AA MOVE25BA MOVE25CA MOVE25DA
    MOVE50AA MOVE50BA MOVE50CA MOVE50DA SAVE10A SAVE10B SAVE10C SAVE10D
    SAVE25A SAVE25B SAVE25C SAVE25D SAVE50A SAVE50B SAVE50C SAVE50D
BY FLAG
ON TABLE HOLD
RUN
FILE COMPM
PRINT MX_ADV_PUR
BY FLAG
AFTER MATCH HOLD AS COMP3 OLD-AND-NEW
END
-RUN

DEFINE FILE COMP2
FLAG/A1 = 'A';
END
-RUN

TABLE FILE COMP2
SUM NET_TKT_CNT AS 'NTKT'
BY FLAG
ON TABLE HOLD AS COMP4
END
-RUN

MATCH FILE COMP3
PRINT MOVE10AA MOVE10BA MOVE10CA MOVE10DA MOVE25AA MOVE25BA MOVE25CA MOVE25DA
      MOVE50AA MOVE50BA MOVE50CA MOVE50DA SAVE10A SAVE10B SAVE10C SAVE10D
      SAVE25A SAVE25B SAVE25C SAVE25D SAVE50A SAVE50B SAVE50C SAVE50D MX_ADV_PUR
BY FLAG
ON TABLE HOLD
RUN
FILE COMP4
SUM NTKT
BY FLAG
AFTER MATCH HOLD AS COMP5 OLD-AND-NEW
END
-RUN

DEFINE FILE COMP5
M10/P12 = IF MX_ADV_PUR EQ '0 - 6' THEN MOVE10AA ELSE 
          IF MX_ADV_PUR EQ '07 - 13' THEN MOVE10BA ELSE
          IF MX_ADV_PUR EQ '14 - 20' THEN MOVE10CA ELSE MOVE10DA;
M25/P12 = IF MX_ADV_PUR EQ '0 - 6' THEN MOVE25AA ELSE 
          IF MX_ADV_PUR EQ '07 - 13' THEN MOVE25BA ELSE
          IF MX_ADV_PUR EQ '14 - 20' THEN MOVE25CA ELSE MOVE25DA;           
M50/P12 = IF MX_ADV_PUR EQ '0 - 6' THEN MOVE50AA ELSE 
          IF MX_ADV_PUR EQ '07 - 13' THEN MOVE50BA ELSE
          IF MX_ADV_PUR EQ '14 - 20' THEN MOVE50CA ELSE MOVE50DA;   
S10/P12 = IF MX_ADV_PUR EQ '0 - 6' THEN SAVE10A ELSE 
          IF MX_ADV_PUR EQ '07 - 13' THEN SAVE10B ELSE
          IF MX_ADV_PUR EQ '14 - 20' THEN SAVE10C ELSE SAVE10D;
S25/P12 = IF MX_ADV_PUR EQ '0 - 6' THEN SAVE25A ELSE 
          IF MX_ADV_PUR EQ '07 - 13' THEN SAVE25B ELSE
          IF MX_ADV_PUR EQ '14 - 20' THEN SAVE25C ELSE SAVE25D;           
S50/P12 = IF MX_ADV_PUR EQ '0 - 6' THEN SAVE50A ELSE 
          IF MX_ADV_PUR EQ '07 - 13' THEN SAVE50B ELSE
          IF MX_ADV_PUR EQ '14 - 20' THEN SAVE50C ELSE SAVE50D;  
END
-RUN

TABLE FILE COMP5
SUM S10 S25 S50 M10 M25 M50 NTKT
COMPUTE M10A/P4% = ((M10/NTKT)*100);
COMPUTE M25A/P4% = ((M25/NTKT)*100);
COMPUTE M50A/P4% = ((M50/NTKT)*100);
BY MX_ADV_PUR
ON TABLE HOLD AS COMP6
END
-RUN

GRAPH FILE COMP6
PRINT M10A/P4% AS '10% Move %' M25A/P4% AS '25% Move %' M50A/P4% AS '50% Move %'
      S10 AS '10% Move Svgs' S25 AS '25% Move Svgs' S50 AS '50% Move Svgs'
ACROSS MX_ADV_PUR AS ' '
ON GRAPH SET GRAPHEDIT SERVER
ON GRAPH SET LOOKGRAPH VBAR2AX
ON GRAPH SET BARNUMB OFF
ON GRAPH SET 3D OFF
ON GRAPH SET VZERO ON
ON GRAPH SET GRID ON
ON GRAPH SET GRAPHSTYLE *
setO1LabelRotate(0);
setAutofit(getO1Label(),false);
setFontSizeAbsolute(getO1Label(),true); 
setFontStyle(getO1Label(),2);
setFontSize(getDataText(),12);
setMarkerDisplay(true);
setConnectLineMarkers(true);
setConnectScatterMarkers(true);
setO1LabelDisplay(true);
setO1LabelRotate(0);
setAxisAssignment(0,1);
setSeriesType(0,1);
setAxisAssignment(1,1);
setSeriesType(0,1);
setAxisAssignment(2,1);
setSeriesType(0,1);
setAxisAssignment(3,0);
setSeriesType(3,2);
setAxisAssignment(4,0);
setSeriesType(4,2);
setAxisAssignment(5,0);
setSeriesType(5,2);
setO1MajorGridDisplay(false);
setO1MinorGridDisplay(false);
setY1MajorGridDisplay(false);
setY1MinorGridDisplay(false);
setSeriesDefaultTransparentBorderColor(true);
setUseSeriesBorderDefaults(true);
setLegendDisplay(true);
setLegendMarkersPerRow(3);
setSubtitleString(" ");
setY1LabelDisplay(true);
setY1LabelFormat(6);
setAutofit(getY1Label(),true);
setFontSizeAbsolute(getY1Label(),true); 
setY2LabelDisplay(true);
setY2LabelFormat(1);
setAutofit(getY2Label(),true);
setFontSizeAbsolute(getY2Label(),true); 
setAutofit(getTitle(),true);
setTextJustHoriz(getTitle(),1);
setFontSizeAbsolute(getTitle(),true); 
setFontStyle(getTitle(),0);
setFontSize(getTitle(),12);
-* setPlace(true);
setDataTextDisplay(false);
ENDSTYLE
-* ON TABLE HOLD AS STEVE FORMAT SVG
-* ON TABLE ONLINE-FMT PDF
ON GRAPH SET STYLE *
     PAGESIZE='Letter',
     LEFTMARGIN=0.250000,
     RIGHTMARGIN=0.250000,
     TOPMARGIN=0.250000,
     BOTTOMMARGIN=0.250000,
     SQUEEZE=ON,
     ORIENTATION=PORTRAIT,
$
TYPE=REPORT,
     GRID=OFF,
     FONT='TIMES NEW ROMAN',
     SIZE=10,
     BACKCOLOR='NONE',
     STYLE=NORMAL,
$
TYPE=DATA,
     ACROSSCOLUMN=N1,
     FOCEXEC=DRILLTOREP5(MX_ADV_PUR=A1),
$
TYPE=DATA,
     ACROSSCOLUMN=N2,
     FOCEXEC=DRILLTOREP5(MX_ADV_PUR=A1),
$
ENDSTYLE
END
