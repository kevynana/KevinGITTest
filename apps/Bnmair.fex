-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* STEVE - 05/23/2003 - CHANGED CADVTP TO CADVTPX - DEFINED TWICE
-* JOY   - 08/05/2003 - CHANGED TO DEFINE/TABLE OFF OF SR_50
-* DEB   - 06/16/2004 - CHANGED CPMILE DEFINE TO MATCH QTRLY REVIEW
-* DEB   - 12/21/2004 - CHANGED CONL CDONL CONGONL DEFINE TO INCLUDE ADDTL
-*                      DOD_TYPES
-* DEB   - 1/24/2005 - ADDED CODE FOR GLOBAL CURRENCY
-* DEB  - 10/11/2005 - ADDED DOD_TYPE H TO CDONL CONL AND CONGONL DEFINES
-* ADDED TRANTYPE INCLUDE - JK 12/16/14 STORY ID S-06492
-*12/29/15 - JEM - S-13286 Updated to allow reports to sort/subtotal by id-levels
-*4/20/2017-JEM-S-33318-updated logic for no records report


SET ASNAMES = ON
-SET HOLDATTR = ON;

-SET &&IDLEVELBREAK = '';

-INCLUDE IDLEVROLLDEF
-RUN

DEFINE FILE &&EXTRACT
  
  CARD/A8 = EDIT (CREDIT_CARD, '99999999$$$$$$$$$$');
  CCARD2/A6 =EDIT(CREDIT_CARD, '$$999999$$$$$$$$$$');
  CGADV/A8 = IF (ADV_PURCH LT 7) THEN '0-6' ELSE 
             IF (ADV_PURCH GE 7) AND (ADV_PURCH LE 13) THEN '7-13' ELSE
             IF (ADV_PURCH GE 14) AND (ADV_PURCH LE 20) THEN '14-20' ELSE
                '21+';   
  CRD_CRD/A2=EDIT(CREDIT_CARD, '99$$$$$$$$$$$$$$$'); 
  LEVEL_DESC1/A80 = &&LDESC;
-*   LEVEL_DESC/A60 = AROLL_LEV3;

  FARE_PAID/D12 = SEG_AMT + SEG_TAX;
  FLAG/A1 = 'A';
  KILO/D9      = CITYPAIR.SEG_MILES * 1.60934 ;  
  NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;
  NEW_SEG_MILES/D9 = SEG_MILES;
  TKT_AMOUNT/D12.2CS = TICKET_AMT + TAX_AMT;
  TKT_PURCH/D8.2CS      = IF (TICKET_CODE EQ '1') AND
                             (SEG_NBR EQ '01') AND
                             (FARE_PAID GE 0) AND
                             (SEG_COUNT EQ 1) AND 
                             (CONJ_REL EQ 1) THEN 1 ELSE 0;
EXMCOS/D9 = IF (EX_FLAG NE ' ') AND (DOC_TYPE EQ '1') THEN 1 ELSE 0;
TRAN_MY/MTYY = TRN_DATE;
-* Defines on Previous Defines
  DISSAVINGS/D12 = IF EMBARK EQ 'DT1' THEN 0 ELSE
                   FARE_PAID-SEG_LOWEST;
  DECLINE_AMT/D12.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         TKT_AMOUNT - LOWEST_AMT;
  VASAVINGS/D12 = SEG_DISCOUNT - FARE_PAID;
-* Defines on Previously Defined Defines
-INCLUDE TRANTYPE  
-INCLUDE IDLEVDEFINE 

END
-RUN

TABLEF FILE &&EXTRACT
PRINT AROLL_DSC3
  AROLL_LEV3
  AROLL_LEV4
  AROLL_DSC4
  BR_CL_IDX
  CARD
  CCARD2
  CGADV
  CRD_CRD
  CREDIT_CARD
  DECLINE_AMT
  DISSAVINGS
  DOC_TYPE	
  DOD_TYPE
  DPT_DATE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE
  AIR_MAIN.INTL_DOM AS 'INTDOM'
  CITYPAIR.INTL_DOM AS 'ITDOM'
  FARE_PAID
  FLAG
  KILO	
  LEVEL_DESC
  NET_TKT_CNT
  NEW_SEG_MILES
  NONREF_FLAG
  REFUSE_CODE
  RF_FLAG
  SAVINGS
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX
  TKT_DATE 
  TKT_NUM
  TKT_PURCH	
  TRN_DATE
  TRAN_MY
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS 	

WHERE (TRN_DATE GE &&FROMDT.EVAL) AND (TRN_DATE LE &&TODT.EVAL) OR
      (TRN_DATE GE &&FXDATE.EVAL) AND (TRN_DATE LE &&TXDATE.EVAL)
WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
-*&&WHERE7
-*&&WHERE8
-*&&WHERE9
-*&&WHERE10

-INCLUDE RPTPARMS
ON TABLE HOLD AS BNMAHOLD
END
-RUN



TABLE FILE BNMAHOLD
PRINT AROLL_DSC3
  BR_CL_IDX
  CARD
  CCARD2
  CGADV
  CRD_CRD
  CREDIT_CARD
  DECLINE_AMT
  DISSAVINGS
  DOC_TYPE	
  DOD_TYPE
  DPT_DATE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE
  INTDOM
  ITDOM
  FARE_PAID
  FLAG
  KILO	
  LEVEL_DESC
  NET_TKT_CNT
  NEW_SEG_MILES
  NONREF_FLAG
  REFUSE_CODE
  RF_FLAG
  SAVINGS
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX
  TKT_NUM
  TKT_PURCH	
  TRN_DATE
  TRAN_MY
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS
BY TKT_DATE
ON TABLE HOLD AS BNMAHLD FORMAT FOCUS INDEX TKT_DATE
END
-RUN


-* Global Reporting JOIN
JOIN BNMAHLD.TKT_DATE IN BNMAHLD TO GLOBAL.DATE IN GLOBAL AS J1


DEFINE FILE BNMAHLD
NAMEC/A30 = CNAME;

-******************************************************************************
-*                         Global Currency Conversion Defines
-******************************************************************************
CURR1X/D20.6 = 1 / USDPU ;

-* DEFINES ON PREVIOUS DEFINES
PAID_FAREX/D20.6 = FARE_PAID * CURR1X;
VASAVEX/D20.6 = VASAVINGS * CURR1X;
SAVEX/D20.6 = SAVINGS * CURR1X;
AMT_DECLINEX/D20.6 = DECLINE_AMT * CURR1X;
DISSAVEX/D20.6 = DISSAVINGS * CURR1X;

END
-RUN 

TABLE FILE BNMAHLD
PRINT AROLL_DSC3
  BR_CL_IDX
  CARD
  CCARD2
  CGADV
  CRD_CRD
  CREDIT_CARD
  DECLINE_AMT
  DISSAVINGS
  DOC_TYPE	
  DOD_TYPE
  DPT_DATE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE
  INTDOM
  ITDOM
  FARE_PAID
  FLAG
  KILO	
  LEVEL_DESC
  NET_TKT_CNT
  NEW_SEG_MILES
  NONREF_FLAG
  REFUSE_CODE
  RF_FLAG
  SAVINGS
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX
  TKT_NUM
  TKT_PURCH	
  TRN_DATE
  TRAN_MY
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS
  NAMEC
  PAID_FAREX/D16.2CS
  VASAVEX/D16.2CS
  SAVEX/D16.2CS
  AMT_DECLINEX/D16.2CS
  DISSAVEX/D16.2CS
WHERE GLOBAL.COUNTRYCODE EQ '&&CURRENCY'
ON TABLE HOLD AS BNMAIR
END
-RUN   	


DEFINE FILE BNMAIR
CURRENT/A1 = IF TRN_DATE GE &&FROMDT.EVAL AND
                TRN_DATE LE &&TODT.EVAL THEN 'Y' ELSE 'N';
PRIOR/A1 =  IF TRN_DATE GE &&FXDATE.EVAL AND
               TRN_DATE LE &&TXDATE.EVAL THEN 'Y' ELSE 'N';
END

TABLE FILE BNMAIR
PRINT AMT_DECLINEX/D16.2CS
  BR_CL_IDX
  CARD
  CCARD2
  CGADV
  CRD_CRD
  CREDIT_CARD
  DECLINE_AMT
  DISSAVEX/D16.2CS
  DISSAVINGS
  CURRENT
  DOC_TYPE	
  DOD_TYPE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE	
  FARE_PAID
  FLAG
  INTDOM
  ITDOM
  KILO
  LEVEL_DESC
  NAMEC
  NET_TKT_CNT
  NEW_SEG_MILES
  NONREF_FLAG
  PAID_FAREX/D16.2CS
  PRIOR	
  REFUSE_CODE
  RF_FLAG
  SAVEX/D16.2CS
  SAVINGS
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX 	
  TKT_NUM
  TKT_PURCH
  TRN_DATE
-*   TRAN_MY
  VASAVEX/D16.2CS
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS 
-* BY TRAN_MY
BY LEVEL_DESC	
ON TABLE HOLD AS TRANONE 
END
-RUN


DEFINE FILE TRANONE
CAVOL/D12.2CS = IF CURRENT EQ 'Y' THEN FARE_PAID ELSE 0;
GCAVOL/D16.2CS = IF CURRENT EQ 'Y' THEN PAID_FAREX ELSE 0;
CDAVOL/D12.2CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'D') THEN FARE_PAID ELSE 0;
CIAVOL/D12.2CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'I') THEN FARE_PAID ELSE 0;

GCDAVOL/D16.2CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'D') 
                    THEN PAID_FAREX ELSE 0;
CMILES/D9 = IF CURRENT EQ 'Y' THEN NEW_SEG_MILES ELSE 0;
CKILO/D9 = IF CURRENT EQ 'Y' THEN KILO ELSE 0;
PAVOL/D12.2CS = IF PRIOR EQ 'Y' THEN FARE_PAID ELSE 0;
GPAVOL/D12.2CS = IF PRIOR EQ 'Y' THEN PAID_FAREX ELSE 0;
PDAVOL/D12.2CS = IF (PRIOR EQ 'Y') AND (INTDOM EQ 'D') THEN FARE_PAID ELSE 0;
GPDAVOL/D16.2CS = IF (PRIOR EQ 'Y') AND (INTDOM EQ 'D') THEN PAID_FAREX ELSE 0;
CVSAV/D12.2CS = IF CURRENT EQ 'Y' THEN VASAVINGS ELSE 0;
GCVSAV/D16.2CS = IF CURRENT EQ 'Y' THEN VASAVEX ELSE 0;
CNTKT/D8CS = IF CURRENT EQ 'Y' THEN NET_TKT_CNT ELSE 0;
CNTKT1/D8CS = IF (CURRENT EQ 'Y') AND (ITDOM EQ 'D') THEN
                 NET_TKT_CNT ELSE 0;
CDNTKT/D8CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'D') THEN NET_TKT_CNT ELSE 0;
CINTKT/D8CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'I') THEN NET_TKT_CNT ELSE 0;

CNTP/D8CS = IF CURRENT EQ 'Y' THEN TKT_PURCH ELSE 0;
CNTP1/D8CS = IF (CURRENT EQ 'Y') AND (RF_FLAG EQ ' ') AND (EX_FLAG EQ ' ') THEN
                NET_TKT_CNT ELSE 0;
CLSAV/D12.2CS = IF CURRENT EQ 'Y' THEN DISSAVINGS ELSE 0;
GCLSAV/D16.2CS = IF CURRENT EQ 'Y' THEN DISSAVEX ELSE 0;
CDLSAV/D12.2CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'D') THEN 
                    DISSAVINGS ELSE 0;
GCDLSAV/D16.2CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'D') THEN 
                    DISSAVEX ELSE 0;
CNVSA1/D12.2CS=IF (CURRENT EQ 'Y') AND (RF_FLAG EQ ' ') AND (EX_FLAG EQ ' ')
                 THEN FARE_PAID ELSE 0;
GCNVSA1/D16.2CS=IF (CURRENT EQ 'Y') AND (RF_FLAG EQ ' ') AND (EX_FLAG EQ ' ')
                 THEN PAID_FAREX ELSE 0;
CNVSA/D12.2CS= IF (CREDIT_CARD CONTAINS '424604' OR '473077' OR 'TP') OR
                  (BR_CL_IDX EQ 'RF892075' OR 'RF740019' OR 'RF891788') 
                  THEN 0 ELSE CNVSA1; 
GCNVSA/D16.2CS= IF (CREDIT_CARD CONTAINS '424604' OR '473077' OR 'TP') OR
                  (BR_CL_IDX EQ 'RF892075' OR 'RF740019' OR 'RF891788') 
                  THEN 0 ELSE GCNVSA1;
CDFARE/D12.2CS = IF (CURRENT EQ 'Y') THEN FARE_PAID ELSE 0;
GCDFARE/D16.2CS = IF (CURRENT EQ 'Y') THEN PAID_FAREX ELSE 0;
CDTKT/D8CS = IF (CURRENT EQ 'Y') THEN NET_TKT_CNT ELSE 0;
CDLS/D12.2CS = IF (CURRENT EQ 'Y') THEN DISSAVINGS ELSE 0;
GCDLS/D16.2CS = IF (CURRENT EQ 'Y') THEN DISSAVEX ELSE 0;
PDFARE/D12.2CS = IF (PRIOR EQ 'Y') THEN FARE_PAID ELSE 0;
GPDFARE/D16.2CS = IF (PRIOR EQ 'Y') THEN PAID_FAREX ELSE 0;
PDTKT/D8CS = IF (PRIOR EQ 'Y') THEN NET_TKT_CNT ELSE 0;
PDNTKT/D8CS = IF (PRIOR EQ 'Y') AND (INTDOM EQ 'D') THEN NET_TKT_CNT ELSE 0;
CADVT/D8CS = IF (CURRENT EQ 'Y') AND 
                (CGADV EQ '0-6') THEN NET_TKT_CNT ELSE 0;
CADVTP/D8CS = IF (CURRENT EQ 'Y') AND 
                (CGADV EQ '0-6') THEN TKT_PURCH ELSE 0;
CADVT1/D8CS = IF (CURRENT EQ 'Y') AND
                 (CGADV EQ '7-13') THEN NET_TKT_CNT ELSE 0;
CADVT2/D8CS = IF (CURRENT EQ 'Y') AND
                 (CGADV EQ '14-20') THEN NET_TKT_CNT ELSE 0;
CADVT3/D8CS = IF (CURRENT EQ 'Y') AND
                 (CGADV EQ '21+') THEN NET_TKT_CNT ELSE 0;
CADVTPX/D8CS = IF (CURRENT EQ 'Y') AND
                 (CGADV EQ '7-13') THEN TKT_PURCH ELSE 0;
CLS1/D12.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'CX') THEN
                  DISSAVINGS ELSE 0;
GCLS1/D16.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'CX') THEN
                  DISSAVEX ELSE 0;
CLS2/D12.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'TS') THEN
                  DISSAVINGS ELSE 0;
GCLS2/D12.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'TS') THEN
                  DISSAVEX ELSE 0;
GCLS1/D16.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'CX') THEN
                  DISSAVEX ELSE 0;
CLS3/D12.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'AS') THEN
                  DISSAVINGS ELSE 0;
GCLS3/D16.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'AS') THEN
                  DISSAVEX ELSE 0;
CLS4/D12.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'NR') THEN
                  DISSAVINGS ELSE 0;
GCLS4/D16.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'NR') THEN
                  DISSAVEX ELSE 0;
CLS5/D12.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'SS') THEN
                  DISSAVINGS ELSE 0;
GCLS5/D16.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'SS') THEN
                  DISSAVEX ELSE 0;
CSAV1/D12.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'NF') THEN 
                  SAVINGS ELSE 0;
GCSAV1/D16.2CS = IF (CURRENT EQ 'Y') AND (REFUSE_CODE EQ 'NF') THEN 
                  SAVEX ELSE 0;
CSAV/D12.2CS = IF (CURRENT EQ 'Y') THEN SAVINGS ELSE 0;
GCSAV/D16.2CS = IF (CURRENT EQ 'Y') THEN SAVEX ELSE 0;
CLS200/D12.2CS = IF ((DECLINE_AMT GE 200) OR (DECLINE_AMT LE (-200))) THEN
                    CLS1 ELSE 0;
GCLS200/D16.2CS = IF ((DECLINE_AMT GE 200) OR (DECLINE_AMT LE (-200))) THEN
                    GCLS1 ELSE 0;
CLS2001/D12.2CS = IF ((DECLINE_AMT GE 200) OR (DECLINE_AMT LE (-200))) THEN
                    CLSAV ELSE 0;
GCLS2001/D16.2CS = IF ((DECLINE_AMT GE 200) OR (DECLINE_AMT LE (-200))) THEN
                    GCLSAV ELSE 0;
CONL/D8CS = IF (CURRENT EQ 'Y') AND (DOD_TYPE EQ 'H' OR 'I' OR 'J') THEN 
            NET_TKT_CNT ELSE 0;
CDONL/D8CS = IF (CURRENT EQ 'Y') AND (DOD_TYPE EQ 'H' OR 'I' OR 'J') AND
                (INTDOM EQ 'D') THEN NET_TKT_CNT ELSE 0;
CONGONL/D8CS = IF (CURRENT EQ 'Y') AND (DOD_TYPE EQ 'H' OR 'I' OR 'J' ) AND
                  (RF_FLAG EQ ' ') AND (EX_FLAG EQ ' ') AND (ITDOM EQ 'D')
                  THEN NET_TKT_CNT ELSE 0;
CNR/D8CS = IF (CURRENT EQ 'Y') AND (NONREF_FLAG EQ 'N') THEN 
              NET_TKT_CNT ELSE 0;        
END
-RUN


TABLE FILE TRANONE
SUM CAVOL
    CDAVOL
    CDNTKT
    CIAVOL
    CINTKT
    CDLS
    CLSAV
    CLS1
    CLS2
    CLS3
    CLS4
    CLS5
    CKILO
    CMILES
    CSAV
    CSAV1
    CNTKT
    CNVSA
    CVSAV
    GCAVOL
    GCDAVOL
    GPDAVOL
    GCVSAV
    GCLSAV
    GCDLSAV
    GCNVSA1
    GCNVSA
    GCDFARE
    GCDLS
    GPDFARE
    GCLS1
    GCLS3
    GCLS4
    GCLS5
    GCSAV1
    GCSAV
    GCLS200
    GCLS2001
    PAVOL  
    CLS200  
    CDNTKT
    CDAVOL
    PDAVOL
    CDLSAV
    NAMEC    
COMPUTE CAVAR/D12.2CS = CAVOL - PAVOL;
        GCAVAR/D16.2CS = GCAVOL - GPAVOL; 
        CAVAR1/D12.2CS = IF ((PAVOL LT 1) AND (PAVOL GT (-1))) THEN 0 ELSE
                           (((CAVOL-PAVOL)/PAVOL)*100);
        GCAVAR1/D16.2CS = IF ((GPAVOL LT 1) AND (GPAVOL GT (-1))) THEN 0 ELSE
                           (((GCAVOL-GPAVOL)/GPAVOL)*100);
        CAVGT/D12.2CS = IF ((CDTKT LT 1) AND (CDTKT GT (-1))) THEN 0 ELSE
                           (CDFARE/CDTKT);
        CDAVGT/D12.2CS = IF ((CDNTKT LT 1) AND (CDNTKT GT (-1))) THEN 0 ELSE
                           (CDAVOL/CDNTKT); 
        CIAVGT/D12.2CS = IF ((CINTKT LT 1) AND (CINTKT GT (-1))) THEN 0 ELSE
                           (CIAVOL/CINTKT);                           
        GCAVGT/D16.2CS = IF ((CDTKT LT 1) AND (CDTKT GT (-1))) THEN 0 ELSE
                           (GCDFARE/CDTKT);
        PAVGT/D12.2CS = IF ((PDTKT LT 1) AND (PDTKT GT (-1))) THEN 0 ELSE
                           (PDFARE/PDTKT);
        GPAVGT/D16.2CS = IF ((PDTKT LT 1) AND (PDTKT GT (-1))) THEN 0 ELSE
                           (GPDFARE/PDTKT);
        AAVGV/D12.2CS = CAVGT - PAVGT;
        GAAVGV/D16.2CS = GCAVGT - GPAVGT;
        AAVGV1/D12.2CS = IF ((PAVGT LT 1) AND (PAVGT GT (-1))) THEN 0 ELSE
                           (((CAVGT-PAVGT)/PAVGT)*100);
        GAAVGV1/D12.2CS = IF ((GPAVGT LT 1) AND (GPAVGT GT (-1))) THEN 0 ELSE
                           (((GCAVGT-GPAVGT)/GPAVGT)*100);        
        CADVP1/P12.2 = IF ((CNTKT LT 1) AND (CNTKT GT (-1))) THEN 0
                          ELSE ((CADVT/CNTKT)*100);
        CADVP2/P12.2 = IF ((CNTKT LT 1) AND (CNTKT GT (-1))) THEN 0
                          ELSE ((CADVT1/CNTKT)*100);
        CADVP3/P12.2 = IF ((CNTP LT 1) AND (CNTP GT (-1))) THEN 0
                          ELSE ((CADVTP/CNTP)*100);
        CADVP4/P12.2 = IF ((CNTP LT 1) AND (CNTP GT (-1))) THEN 0
                          ELSE ((CADVTPX/CNTP)*100);
        CADVP5/P12.2 = IF ((CNTKT LT 1) AND (CNTKT GT (-1))) THEN 0
                          ELSE ((CADVT2/CNTKT)*100);
        CADVP6/P12.2 = IF ((CNTKT LT 1) AND (CNTKT GT (-1))) THEN 0
                          ELSE ((CADVT3/CNTKT)*100);
        CLSP/P12.2 = IF ((CLS2001 LT 1) AND (CLS2001 GT (-1))) THEN 0
                         ELSE ((CLS200/CLS2001)*100);
        GCLSP/P12.2 = IF ((GCLS2001 LT 1) AND (GCLS2001 GT (-1))) THEN 0
                         ELSE ((GCLS200/GCLS2001)*100);        
        CONLP/P12.2 = IF ((CNTKT1 LT 1) AND (CNTKT1 GT (-1))) THEN 0 
                         ELSE ((CONL/CNTKT1)*100);
        CDONLP/P12.2 = IF ((CDNTKT LT 1) AND (CDNTKT GT (-1))) THEN 0 
                         ELSE ((CDONL/CDNTKT)*100);
        CONLP1/P12.2 = IF ((CNTP1 LT 1) AND (CNTP1 GT (-1))) THEN 0 
                         ELSE ((CONGONL/CNTP1)*100);
        CNRP/P12.2 = IF ((CNTKT LT 1) AND (CNTKT GT (-1))) THEN 0
                         ELSE ((CNR/CNTKT)*100);
        CNFSV/P12.2 = IF ((CSAV LT 1) AND (CSAV GT (-1))) THEN 0
                         ELSE ((CSAV1/CSAV)*100);
        GCNFSV/P16.2 = IF ((GCSAV LT 1) AND (GCSAV GT (-1))) THEN 0
                         ELSE ((GCSAV1/GCSAV)*100);
        CTLS/P12.2 =  IF ((CAVOL LT 1) AND (CAVOL GT (-1))) THEN 0
                         ELSE ((CLSAV/CAVOL)*100);
        GCTLS/P16.2 =  IF ((GCAVOL LT 1) AND (GCAVOL GT (-1))) THEN 0
                         ELSE ((GCLSAV/GCAVOL)*100);
        CCLS1/P12.2 = IF ((CLSAV LT 1) AND (CLSAV GT (-1))) THEN 0 
                         ELSE ((CLS1/CLSAV)*100);
        GCCLS1/P16.2 = IF ((GCLSAV LT 1) AND (GCLSAV GT (-1))) THEN 0 
                         ELSE ((GCLS1/GCLSAV)*100);
        CCLS2/P12.2 = IF ((CLSAV LT 1) AND (CLSAV GT (-1))) THEN 0 
                         ELSE ((CLS2/CLSAV)*100);
        GCCLS2/P16.2 = IF ((GCLSAV LT 1) AND (GCLSAV GT (-1))) THEN 0 
                         ELSE ((GCLS2/GCLSAV)*100);
        CCLS3/P12.2 = IF ((CLSAV LT 1) AND (CLSAV GT (-1))) THEN 0 
                         ELSE ((CLS3/CLSAV)*100);
        GCCLS3/P16.2 = IF ((GCLSAV LT 1) AND (GCLSAV GT (-1))) THEN 0 
                         ELSE ((GCLS3/GCLSAV)*100);
        CCLS4/P12.2 = IF ((CLSAV LT 1) AND (CLSAV GT (-1))) THEN 0 
                         ELSE ((CLS4/CLSAV)*100);
        GCCLS4/P16.2 = IF ((GCLSAV LT 1) AND (GCLSAV GT (-1))) THEN 0 
                         ELSE ((GCLS4/GCLSAV)*100);
        CCLS5/P12.2 = IF ((CLSAV LT 1) AND (CLSAV GT (-1))) THEN 0 
                         ELSE ((CLS5/CLSAV)*100);
        GCCLS5/P16.2 = IF ((GCLSAV LT 1) AND (GCLSAV GT (-1))) THEN 0 
                         ELSE ((GCLS5/GCLSAV)*100);
        CPMILE/D12.2CS = IF ((CMILES LT 1) AND (CMILES GT (-1))) THEN 0
                          ELSE (CAVOL/CMILES);
        CPKILO/D16.2CS = IF ((CKILO LT 1) AND (CKILO GT (-1))) THEN 0
                           ELSE (GCAVOL/CKILO);
        CTLSV/P12.2 = IF ((CDAVOL LT 1) AND (CDAVOL GT (-1))) THEN 0 ELSE
                          ((CDLSAV/CDAVOL)*100);
        CDTLSV/P12.2 = IF ((CLSAV LT 1) AND (CLSAV GT (-1))) THEN 0 ELSE
                          ((CDLSAV/CLSAV)*100); 
        GCDTLSV/P16.2 = IF ((GCLSAV LT 1) AND (GCLSAV GT (-1))) THEN 0 ELSE
                          ((GCDLSAV/GCLSAV)*100);                    
        GCTLSV/P16.2 = IF ((GCDAVOL LT 1) AND (GCDAVOL GT (-1))) THEN 0 ELSE
                          ((GCDLSAV/GCDAVOL)*100);        
        CDATKT/D12.2 = IF ((CDNTKT LT 1) AND (CDNTKT GT (-1))) THEN 0 ELSE
                          (CDAVOL/CDNTKT);
        GCDATKT/D6.2 = IF ((CDNTKT LT 1) AND (CDNTKT GT (-1))) THEN 0 ELSE
                          (GCDAVOL/CDNTKT);
-* BY TRAN_MY
BY LEVEL_DESC
-* ON TABLE HOLD AS TRANTWO FORMAT FOCUS INDEX TRAN_MY
ON TABLE HOLD AS TRANTWO FORMAT FOCUS INDEX LEVEL_DESC
END
-RUN


-SET &&AIRREC=IF &RECORDS EQ 0 THEN 'N' ELSE 'Y';



-XXIT;



















