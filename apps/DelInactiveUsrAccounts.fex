-**************************************************************************************************
-* DelInactiveUsrAccounts.fex
-* This fex program will delete all the reports in the users/rollups provided in the excel file
-* if the user is not active in that account in the past 90 days.
-*
-* The csv file name used: DelUsersRollups.csv (DelUsersRollups.mas) located at system\data, the
-* file must contain 2 columns, user_name and rollup_code in CSV format to meet WebFOCUS requirements.
-*
-* This program should be called from RunInteractiveFex_LS.fex in system\apps folders to have 
-* output to a file in d:\temp folder. check if RunInteractiveFex_LS.fex needs to be updated for 
-* the task.
-*
-* If the list of active users and accounts to be printed, comment out -GOTO STEP2; in the program.
-*
-* Story 14126 to remove users/rollups from report sets/repourts/push/burst/adhoc specified in
-* DelUsersRollups.cvs file
-*
-* 01/18/2016 LSI
-**************************************************************************************************
-SET &ECHO=ALL;
-DEFAULT &MODIFYDEL = 'Y';
-*-SET &WHERE = 'WHERE USER_NAME EQ ''lusheng1'' OR USER_NAME EQ ''steve'''; 
-SET &WHERE = ' '; 

SET PAGE-NUM = OFF
SET YRTHRESH=30
SET DEFCENT=19
SET HOLDLIST = PRINTONLY
SET ASNAME = ON

-**********************************************************************************************
-* step 1: get the list of active users/rollup codes
-**********************************************************************************************
DEFINE FILE DelUsersRollups
  USERROLL1/A30=USER_NAME || ';' || ROLLUP_CODE;
END
TABLE FILE DelUsersRollups
PRINT USERROLL1
ON TABLE HOLD AS HOLD1B FORMAT FOCUS INDEX USERROLL
&WHERE
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDOFJOB;

-GOTO STEP2;


DEFINE FILE USRROLL
  LAST_ACCESS_DATE/A10 = EDIT(LAST_SESSION_DATETIME, '9999999999');
  ALAST_DATE/A8MDYY=EDIT(LAST_ACCESS_DATE,'$$$$$99') || 
     EDIT(LAST_ACCESS_DATE,'$$$$$$$$99') || 
     EDIT(LAST_ACCESS_DATE,'9999'); 
  SLAST_DATE/MDY = ALAST_DATE;
  CDATE/YYMD=SLAST_DATE;
 
  THISDATE/MDY ='&MDY';
  THEDAY/YYMD = THISDATE;
  AGE/I4 = THEDAY - CDATE;
  PRINTDATE/MDYY = THISDATE;
  USERROLL2/A30=USER_NAME || ';' || CLIENT_ID_ROLLUP;
END
TABLE FILE USRROLL
PRINT USER_NAME CLIENT_ID_ROLLUP USERROLL2 CDATE THEDAY AGE LAST_ACCESS_DATE LAST_SESSION_DATETIME PRINTDATE
WHERE AGE LT 90
ON TABLE HOLD AS HOLD1A FORMAT FOCUS
END
-RUN


JOIN CLEAR *
JOIN USERROLL2 IN HOLD1A TO ALL USERROLL1 IN HOLD1B AS J1
END

TABLE FILE HOLD1A
HEADING CENTER 
"LIST OF ACITVE USERS IN PAST 90 DAYS"
"TODAY'S DATE: <PRINTDATE "
""
-*LIST USER_NAME CLIENT_ID_ROLLUP USERROLL2 USERROLL1 CDATE THEDAY AGE LAST_ACCESS_DATE LAST_SESSION_DATETIME
LIST USER_NAME CLIENT_ID_ROLLUP AS 'ROLLUP' AGE AS 'No. Of Days,Since Last,Access Date' LAST_ACCESS_DATE AS 'Last Access,Date'
WHERE USERROLL1 EQ USERROLL2
-*ON TABLE SET ONLINE-FMT PDF
ON TABLE HOLD AS 'LISTACTIVEUSERS' FORMAT PDF
END
-RUN


-STEP2
-**********************************************************************************************
-* step 2: get the list of Inactive users/rollup codes
-**********************************************************************************************
 -* USE HOLD FILE HOLD1B in step 1.

DEFINE FILE USRROLL
  LAST_ACCESS_DATE/A10 = EDIT(LAST_SESSION_DATETIME, '9999999999');
  ALAST_DATE/A8MDYY=EDIT(LAST_ACCESS_DATE,'$$$$$99') || 
     EDIT(LAST_ACCESS_DATE,'$$$$$$$$99') || 
     EDIT(LAST_ACCESS_DATE,'9999'); 
  SLAST_DATE/MDY = ALAST_DATE;
  CDATE/YYMD=SLAST_DATE;
 
  THISDATE/MDY ='&MDY';
  THEDAY/YYMD = THISDATE;
  AGE/I7 = THEDAY - CDATE;
  PRINTDATE/MDYY = THISDATE;
  USERROLL2/A30=USER_NAME || ';' || CLIENT_ID_ROLLUP;
END
TABLE FILE USRROLL
LIST USER_NAME CLIENT_ID_ROLLUP USERROLL2 CDATE THEDAY AGE LAST_ACCESS_DATE LAST_SESSION_DATETIME PRINTDATE
WHERE AGE GE 90
ON TABLE HOLD AS HOLD2A FORMAT FOCUS
END
-RUN


JOIN CLEAR *
JOIN USERROLL2 IN HOLD2A TO ALL USERROLL1 IN HOLD1B AS J1
END

TABLE FILE HOLD2A
HEADING CENTER 
"LIST OF INACITVE USERS TO BE DELETED"
"TODAY'S DATE: <PRINTDATE "
""
-*LIST USER_NAME CLIENT_ID_ROLLUP AS 'ROLLUP' AGE AS 'No. Of Days,Since Last,Access Date' LAST_ACCESS_DATE AS 'Last Access,Date'
PRINT USER_NAME CLIENT_ID_ROLLUP
BY USER_NAME NOPRINT
BY CLIENT_ID_ROLLUP NOPRINT
WHERE USERROLL1 EQ USERROLL2
-*ON TABLE SET ONLINE-FMT PDF
-*ON TABLE HOLD AS 'INACTIVEUSERS' FORMAT PDF
ON TABLE SAVE AS INACTIVEUSERS
END
-RUN

-SET &LOOPS = &LINES;

-**********************************************************************************************
-* step 3: delete all reports/report sets/push reports/bust reports
-*         if the user and rollup code are in the inactive list.
-*
-**********************************************************************************************
-REPEAT ENDLOOP &LOOPS TIMES
-READ INACTIVEUSERS NOCLOSE &USERNAME.20. &ROLLUP.8.

-SET &LEN=ARGLEN(20, &USERNAME, 'I2');
-SET &USERNAME = SUBSTR(20, &USERNAME, 1, &LEN, &LEN, 'A&LEN.EVAL');

-SET &LEN=ARGLEN(8, &ROLLUP, 'I1');
-SET &ROLLUP = SUBSTR(8, &ROLLUP, 1, &LEN, &LEN, 'A&LEN.EVAL');

-*get the user's report set keys in the specified rollup_code
TABLE FILE RPT_SET
PRINT SET_KEY
WHERE USER_NAME EQ '&USERNAME.EVAL' AND ROLLUP_CODE EQ '&ROLLUP.EVAL'
ON TABLE HOLD AS HSETKEYS
END
-RUN
-SET &RPTSETS = &LINES;

-IF &RPTSETS EQ 0 THEN SKIPREPORTS;

-*SET_KEY is I7 format in rpt_inst and rpt_flds
TABLE FILE HSETKEYS
BY SET_KEY
ON TABLE SAVE AS SETKEYS
END
-RUN

DEFINE FILE HSETKEYS
 KEYS7/I7 = SET_KEY;
END
TABLE FILE HSETKEYS
BY KEYS7 AS 'SET_KEY'
ON TABLE SAVE AS SETKEYS7
END
-RUN

-*get the report instance keys in the above selected report sets, and hold instance keys
TABLE FILE RPT_INST
PRINT INST_KEY
WHERE SET_KEY IN FILE SETKEYS7
ON TABLE HOLD AS INSTKEYS
END
-RUN
-SET &RPTINSTKEYS = &LINES;

-IF &RPTINSTKEYS EQ 0 THEN SKIPREPORTS;
DEFINE FILE INSTKEYS
  INSTKEY11/I11 = INST_KEY;
END
TABLE FILE INSTKEYS
BY INSTKEY11 AS 'INST_KEY'
ON TABLE HOLD AS HINSTKEYS11
END
-RUN

DEFINE FILE INSTKEYS
  INSTKEY11/I11 = INST_KEY;
END
TABLE FILE INSTKEYS
BY INSTKEY11 AS 'INST_KEY'
ON TABLE SAVE AS INSTKEYS11
END
-RUN


-*check push reports and burst reports for those REPORT INSTANCES
TABLE FILE BURST_GROUPS
BY BREAK_KEY
WHERE OWNER EQ '&USERNAME.EVAL' AND ROLLUP_CODE EQ '&ROLLUP.EVAL'
ON TABLE HOLD AS HBURSTKEYS
END
-RUN
-SET &BURSTKEYS = &LINES;

-IF &BURSTKEYS EQ 0 THEN GOTO DONEBURST;
TABLE FILE HBURSTKEYS
BY BREAK_KEY
ON TABLE SAVE AS BURSTKEYS
END
-RUN



-*burst report hierarchy table

TABLE FILE BURST_REPORT_HIERS
PRINT BREAK_KEY BREAK2NDKEY
BY BREAK_KEY NOPRINT
BY BREAK2NDKEY NOPRINT
WHERE BREAK_KEY IN FILE BURSTKEYS
ON TABLE HOLD AS HBURSTHIER
END
-RUN

-IF '&MODIFYDEL.EVAL' EQ 'N' THEN GOTO SKIPMOD01;
MODIFY FILE BURST_REPORT_HIERS
FIXFORM FROM HBURSTHIER
MATCH BREAK_KEY BREAK2NDKEY
  ON MATCH DELETE
DATA ON HBURSTHIER
END
-RUN
-SKIPMOD01
-*burst_report_keys table

TABLE FILE BURST_REPORT_KEYS
PRINT BREAK_KEY INST_KEY SET_KEY
BY BREAK_KEY NOPRINT
WHERE BREAK_KEY IN FILE BURSTKEYS
ON TABLE HOLD AS HBURSTKEYS
END
-RUN

-IF '&MODIFYDEL.EVAL' EQ 'N' THEN GOTO SKIPMOD02;
MODIFY FILE BURST_REPORT_KEYS
FIXFORM FROM HBURSTKEYS
MATCH BREAK_KEY INST_KEY SET_KEY
  ON MATCH DELETE
DATA ON HBURSTKEYS
END
-RUN

TABLE FILE HBURSTKEYS
BY BREAK_KEY 
ON TABLE HOLD AS HBKEYSONLY
END
-RUN


MODIFY FILE BURST_GROUPS
FIXFORM FROM HBKEYSONLY
MATCH BREAK_KEY
  ON MATCH DELETE
DATA ON HBKEYSONLY
END
-RUN
-SKIPMOD02

-DONEBURST

-STARTPUSH
-* based on SCHED_OWNER and SET_KEY for push reports

TABLE FILE PUSH_GROUPS
BY GROUP_KEY
WHERE SET_KEY IN FILE SETKEYS
ON TABLE HOLD AS HGROUPKEYS
END
-RUN

-IF &LINES EQ 0 THEN GOTO PUSHRPTS;
-IF '&MODIFYDEL.EVAL' EQ 'N' THEN GOTO SKIPMOD03;

TABLE FILE HGROUPKEYS
BY GROUP_KEY
ON TABLE SAVE AS GROUPKEYS
END
-RUN

-PUSHRPTS
-SKIPMOD03

TABLE FILE PUSH_REPORTS_KEYS
BY GROUP_KEY
BY INST_KEY
WHERE GROUP_KEY IN FILE GROUPKEYS
ON TABLE HOLD AS PUSHKEYS
END
-RUN

-IF &LINES EQ 0 THEN GOTO PUSHRPTKEYS;
-IF '&MODIFYDEL.EVAL' EQ 'N' THEN GOTO SKIPMOD04;
MODIFY FILE PUSH_REPORTS_KEYS
FIXFORM FROM PUSHKEYS
MATCH GROUP_KEY INST_KEY
  ON MATCH DELETE
DATA ON PUSHKEYS
END
-RUN
-PUSHRPTKEYS

-* PUSH_REPORTS tabel
MODIFY FILE PUSH_GROUPS
FIXFORM FROM HGROUPKEYS
MATCH GROUP_KEY 
  ON MATCH DELETE
DATA ON HGROUPKEYS
END
-RUN
-SKIPMOD04

-*check adhoc reports and adhoc report fields
TABLE FILE ADHOCREPORTFIELDS
PRINT INST_KEY COLUMN_ORDER
WHERE INST_KEY IN FILE INSTKEYS11
ON TABLE HOLD AS ADFLDKEYS
END
-RUN
-SET &ADFLDKEYS = &LINES;

-IF &ADFLDKEYS EQ 0 THEN GOTO DONEADHOC;
-IF '&MODIFYDEL.EVAL' EQ 'N' THEN GOTO SKIPMOD05;
-*delete from adhocreportfields table
MODIFY FILE ADHOCREPORTFIELDS
FIXFORM FROM ADFLDKEYS
MATCH INST_KEY COLUMN_ORDER
  ON MATCH DELETE
DATA ON ADFLDKEYS
END
-RUN

-*delete from adhocreports table
TABLE FILE ADHOCREPORTS
PRINT INST_KEY
WHERE INST_KEY IN FILE INSTKEYS11
ON TABLE HOLD AS ADHOCKEYS
END
-RUN

MODIFY FILE ADHOCREPORTS
FIXFORM FROM ADHOCKEYS
MATCH INST_KEY
  ON MATCH DELETE
DATA ON ADHOCKEYS
END
-RUN

-DONEADHOC

MODIFY FILE RPT_FLDS
FIXFORM FROM INSTKEYS
MATCH INST_KEY
  ON MATCH DELETE
DATA ON INSTKEYS
END
-RUN

MODIFY FILE RPT_INST
FIXFORM FROM INSTKEYS
MATCH INST_KEY
  ON MATCH DELETE
DATA ON INSTKEYS
END
-RUN

MODIFY FILE RPT_SET
FIXFORM FROM HSETKEYS
MATCH SET_KEY
  ON MATCH DELETE
DATA ON HSETKEYS
END
-RUN

-SKIPREPORTS

MODIFY FILE USRROLL
FREEFORM USER_NAME CLIENT_ID_ROLLUP
MATCH USER_NAME CLIENT_ID_ROLLUP
  ON MATCH DELETE
DATA
&USERNAME, &ROLLUP, $
END
-RUN

MODIFY FILE USERCNTL
FREEFORM USER_NAME ROLLUP_CODE
MATCH USER_NAME
  ON MATCH CONTINUE
  MATCH ROLLUP_CODE
    ON MATCH DELETE
DATA 
&USERNAME, &ROLLUP, $
END
-RUN
-SKIPMOD05;

-*check if the user should be deleted from usrtbl
TABLE FILE USRROLL
PRINT *
WHERE USER_NAME EQ '&USERNAME.EVAL'
ON TABLE SAVE
END
-RUN
-IF &LINES GT 0 THEN GOTO SKIPUSRTBL;

-* delete from usrtbl
-IF '&MODIFYDEL.EVAL' EQ 'N' THEN GOTO SKIPMOD06;
MODIFY FILE USRTBL
FREEFORM USER_NAME 
MATCH USER_NAME 
  ON MATCH DELETE
DATA
&USERNAME,$
END
-RUN

-* delete from botuprof
MODIFY FILE BOTUPROF
FREEFORM CASTER_USER 
MATCH CASTER_USER 
  ON MATCH DELETE
DATA
&USERNAME,$
END
-RUN
-SKIPUSRTBL
-SKIPMOD06


-ENDLOOP
-CLOSE INACTIVEUSERS
-RUN
-ENDOFJOB
