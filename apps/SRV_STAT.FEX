MAINTAIN FILES RPT_INST AND RPT_SET AND RPT_QUE AND CONTROL

COMPUTE Cnt1/I5 = ;
COMPUTE Que_OK/A1 = ;

INFER CONTROL.CONTROL_ID INTO Ctl_Stack
INFER RPT_INST.INST_KEY INTO RC_Stack
INFER RPT_INST.INST_KEY INTO RQ_Stack
INFER RPT_SET.SET_KEY INTO RS_Stack
INFER RPT_QUE.INST_KEY INTO Q_Stack

REPOSITION CONTROL.CONTROL_ID
STACK CLEAR Ctl_Stack
NEXT CONTROL.CONTROL_ID INTO Ctl_Stack

PERFORM Chk_Queue
PERFORM Disp_Queue
PERFORM Clr_Queue
GOTO END

CASE Clr_Queue
  REPOSITION RPT_QUE.INST_KEY
  STACK CLEAR Q_Stack
  FOR ALL NEXT RPT_QUE.INST_KEY INTO Q_Stack
  FOR ALL DELETE RPT_QUE.INST_KEY FROM Q_Stack
  COMMIT
endcase

CASE Chk_Queue
  REPOSITION RPT_QUE.INST_KEY
  STACK CLEAR Q_Stack
  FOR ALL NEXT RPT_QUE.INST_KEY INTO Q_Stack
  IF Q_Stack.FocCount EQ 0 THEN
    COMPUTE Que_OK = 'Y';
  ELSE
    COMPUTE Que_OK = 'N';
endcase

CASE Disp_Queue
  REPOSITION RPT_INST.INST_KEY
  STACK CLEAR RC_Stack
  NEXT RPT_INST.INST_KEY INTO RC_Stack WHERE
    RPT_INST.EXECUTE_FLAG EQ 'E'

  REPOSITION RPT_INST.INST_KEY
  STACK CLEAR RQ_Stack
  FOR ALL NEXT RPT_INST.INST_KEY INTO RQ_Stack
    WHERE RPT_INST.EXECUTE_FLAG EQ 'Y'

  STACK CLEAR Q_Stack
  COMPUTE Cnt1 = 1;
  REPEAT WHILE Cnt1 LE RQ_Stack.FocCount
    REPOSITION RPT_SET.SET_KEY
    NEXT RPT_SET.SET_KEY INTO RS_Stack
      WHERE RPT_SET.SET_KEY EQ RQ_Stack(Cnt1).SET_KEY
    COMPUTE Q_Stack(Cnt1).Que_User = Ctl_Stack(1).USER_ID;
    COMPUTE Q_Stack(Cnt1).Roll = RQ_Stack(Cnt1).ROLLUP_CODE;
    COMPUTE Q_Stack(Cnt1).Ex_Flag = RQ_Stack(Cnt1).EXECUTE_FLAG;
    COMPUTE Q_Stack(Cnt1).Rpt_Seq = RQ_Stack(Cnt1).RUN_SEQ;
    COMPUTE Q_Stack(Cnt1).Set_Seq = RS_Stack.RUN_SEQ;
    COMPUTE Q_Stack(Cnt1).Inst_Key = RQ_Stack(Cnt1).INST_KEY;
    COMPUTE Q_Stack(Cnt1).Rpt_Stream = RQ_Stack(Cnt1).RPT_STREAM;
    COMPUTE Q_Stack(Cnt1).Global_Parm = RQ_Stack(Cnt1).GLOBAL_PARM;
    COMPUTE Q_Stack(Cnt1).Rpt_Type = RQ_Stack(Cnt1).RPT_TYPE;
    COMPUTE Q_Stack(Cnt1).Rpt_Name = RQ_Stack(Cnt1).RPT_NAME;
    COMPUTE Q_Stack(Cnt1).Set_Name = RS_Stack.SET_NAME;
    REPOSITION RPT_QUE.INST_KEY
    INCLUDE RPT_QUE.INST_KEY FROM Q_Stack(Cnt1)
    COMMIT
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDREPEAT

  STACK SORT Q_Stack BY Set_Seq BY Rpt_Seq

  WINFORM SHOW_INACTIVE ServQueue
  IF Que_OK EQ 'Y' THEN
  BEGIN
    WINFORM SET ServQueue.Busy.VISIBLE TO NO
    WINFORM SET ServQueue.Upd.VISIBLE TO YES
  ENDBEGIN
  ELSE BEGIN
    WINFORM SET ServQueue.Busy.VISIBLE TO YES
    WINFORM SET ServQueue.Upd.VISIBLE TO NO
  ENDBEGIN
  WINFORM SHOW ServQueue
endcase
case Winform_ServQueue
   Winform show ServQueue
endcase




END
