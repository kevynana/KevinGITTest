-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
 
-* 04/13/2015 - DEB - S-07573 - CREATED FOR BIOTBNM 
-* 05/14/2015 - DEB - S-07573 - increased AP svgs to 12.2 
-* 06/15/2015 - DEB - S-09473 - Added total ticket period2 - subtotal prior 
-*                              to ALL OTHER 
-*                              total amount change tickets period1 vs period2
-*                              total amount change spend period1 vs period2
-*04/21/2016 - JEM - S-17947 - adding logic for report be single date and compute YTD date range for period 2
-*06/07/2016 - JEM - S-18938 - Added logic to compute ATP for period1 and YTD
-*4/20/2017-JEM-S-33318-updated logic for no records report

-INCLUDE SETECHO
SET ASNAMES = ON
-SET HOLDATTR = ON;
-RUN
 



DEFINE FILE &&EXTRACT
  ADDCOLLECT/D12.2CS = EXCH_NET_FARE + EXCH_NET_TAX;
  
  CARD/A8 = EDIT (CREDIT_CARD, '99999999$$$$$$$$$$');
  CCARD2/A6 =EDIT(CREDIT_CARD, '$$999999$$$$$$$$$$');
  CGADV/A8 = IF (ADV_PURCH LT 7) THEN '0-6' ELSE 
             IF (ADV_PURCH GE 7) AND (ADV_PURCH LE 13) THEN '7-13' ELSE
             IF (ADV_PURCH GE 14) AND (ADV_PURCH LE 20) THEN '14-20' ELSE
                '21+';   

  CRD_CRD/A2=EDIT(CREDIT_CARD, '99$$$$$$$$$$$$$$$'); 
  LEVEL_DESC/A60 = &&LDESC;
  FARE_PAID/P12.2CS = SEG_AMT + SEG_TAX;
  FLAG/A1 = 'A';
  KILO/D9      = CITYPAIR.SEG_MILES * 1.60934 ;  

  NET_TKT_CNT/D8C    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;


  NEW_EXCH_CNT/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 0 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN 1 ELSE 0;
-*                        IF (TICKET_CODE EQ '1') AND
-*                           (SEG_NBR EQ '01') AND
-*                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;
  NEW_SEG_MILES/D9 = SEG_MILES;
  TKT_AMOUNT/D12.2CS = TICKET_AMT + TAX_AMT;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                            (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                          IF (SEG_COUNT LE 0) AND 
                            (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                          IF (SEG_COUNT LE 0) AND 
                            (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                          IF (SEG_COUNT LE 0) AND 
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TKT_PURCH/D8.2CS      = IF (TICKET_CODE EQ '1') AND
                             (SEG_NBR EQ '01') AND
                             (FARE_PAID GE 0) AND
                             (SEG_COUNT EQ 1) AND 
                             (CONJ_REL EQ 1) THEN 1 ELSE 0;
EXMCOS/D9 = IF (EX_FLAG NE ' ') AND (DOC_TYPE EQ '1') THEN 1 ELSE 0;
TRAN_MY/MTYY = TRN_DATE;
  XPSNGR_NM/A17        =
  EDIT(PASSNGR_NAME,'99999999999999999$$$$$$$$$$$$$$$$');
  XTRAN_DT/MDYY        = TRN_DATE;
-* Defines on Previous Defines



  DISSAVINGS/D12 = IF EMBARK EQ 'DT1' THEN 0 ELSE
                   FARE_PAID-SEG_LOWEST;
  DECLINE_AMT/D12.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         TKT_AMOUNT - LOWEST_AMT;
  LS_TKT/D8 = IF REFUSE_CODE NE 'LE' OR 'NF' OR 'SD' OR 'FR' THEN NET_TKT_CNT ELSE 0;

-* NEW_ADV_PURCH/D9    = IF (TKT_TYPE EQ 'F-EX' OR TKT_TYPE EQ 'F-RF') THEN (ADV_PURCH*(-1))
-* ELSE IF RF_FLAG EQ ' ' THEN ADV_PURCH
-* ELSE IF EX_FLAG EQ ' ' THEN ADV_PURCH
-* ELSE (ADV_PURCH*(-1));
NEW_ADV_PURCH/D9 = ADV_PURCH;


   NEW_ADV_PURCH1/D9    = IF SEG_NBR EQ '01' THEN ADV_PURCH ELSE 0;

 VASAVINGS/D12 = SEG_DISCOUNT - FARE_PAID;
-****** Added code for Month vs YTD date range
-*  Set Dates
TDATE1/YYMD=&&TODT.EVAL;
P_MONTH/MDYY=TDATE1;
P_EOM/MDYY=DATEMOV(P_MONTH, 'EOM');
-* RUN_EOM is the End of Month we are executing.
RUN_EOM/M=P_EOM;
-* Determine End of Quarters for Rollups
RFY/M=IF ROLL_FY EQ '' OR '1' OR '01' OR 'X' THEN 1 ELSE EDIT(ROLL_FY);
Q1B/M=RFY;
Q1E/M=IF (RFY + 3) - 1 LT 12 THEN (RFY + 3) - 1 ELSE (RFY + 3) - 1 - 12;
Q2B/M=IF (RFY + 3) GT 12 THEN (RFY + 3) - 12 ELSE (RFY + 3);
Q2E/M=IF (RFY + 6) - 1 LT 12 THEN (RFY + 6) - 1 ELSE (RFY + 6) - 1 - 12;
Q3B/M=IF (RFY + 6) GT 12 THEN (RFY + 6) - 12 ELSE (RFY + 6);
Q3E/M=IF (RFY + 9) - 1 LT 12 THEN (RFY + 9) - 1 ELSE (RFY + 9) - 1 - 12;
Q4B/M=IF (RFY + 9) GT 12 THEN (RFY + 9) - 12 ELSE (RFY + 9);
Q4E/M=IF (RFY + 12) - 1 LT 12 THEN (RFY + 12) - 1 ELSE (RFY + 12) - 1 - 12;
-* Determine End of Year Month for Rollups
ANNUAL/M=Q4E;
ANNUAL_YY/YY=P_EOM;
ANNUAL_YY1/YY=IF RUN_EOM GT Q4E THEN ANNUAL_YY + 1 ELSE ANNUAL_YY;
ANNUAL_A8MDYY/A8MDYY=EDIT(Q4E) | '01' | EDIT(ANNUAL_YY1);
ANNUAL_MONTH/MDYY=ANNUAL_A8MDYY;
ANNUAL_END/MDYY=DATEMOV(ANNUAL_MONTH, 'EOM');
Q4_END/MDYY=ANNUAL_END;
Q4_BEGIN/MDYY=DATEMOV(DATEADD(Q4_END, 'M', (-2)), 'BOM');
Q3_END/MDYY=Q4_BEGIN - 1;
Q3_BEGIN/MDYY=DATEMOV(DATEADD(Q3_END, 'M', (-2)), 'BOM');
Q2_END/MDYY=Q3_BEGIN - 1;
Q2_BEGIN/MDYY=DATEMOV(DATEADD(Q2_END, 'M', (-2)), 'BOM');
Q1_END/MDYY=Q2_BEGIN - 1;
Q1_BEGIN/MDYY=DATEMOV(DATEADD(Q1_END, 'M', (-2)), 'BOM');

P_BOM/MDYY=DATEMOV(P_MONTH, 'BOM');
P_BOQ/MDYY=DATEMOV(P_MONTH, 'BOQ');
P_BOY/MDYY=DATEMOV(P_MONTH, 'BOY');


FDATE/YYMD=&&FROMDT.EVAL;
EDATE/YYMD=&&TODT.EVAL;
BOM_DATE/YYMD=DATEMOV(EDATE,'BOM');
EOM_DATE/YYMD=DATEMOV(EDATE,'EOM');
EOM_DATE1/MDYY=DATEMOV(EDATE,'EOM');
ANNUAL_BEGIN/MDYY=Q1_BEGIN;

-* MD/A1 = IF (TRN_DATE GE BOM_DATE) AND
-*            (TRN_DATE LE EOM_DATE)
-*             THEN 'Y' ELSE 'N';

MD/A1 = IF (TRN_DATE GE &&FROMDT.EVAL) AND
           (TRN_DATE LE &&TODT.EVAL) THEN 'Y' ELSE 'N';
 
YD/A1 = IF (TRN_DATE GE ANNUAL_BEGIN) AND
           (TRN_DATE LE EOM_DATE) THEN 'Y' ELSE 'N';
           


-INCLUDE TRANTYPE  
END
-RUN

TABLEF FILE &&EXTRACT
PRINT ADDCOLLECT
  AIR_KEY
  AROLL_DSC3
  AROLL_LEV3
  AROLL_LEV4
  AROLL_DSC4
  BR_CL_IDX
  CARD
  CCARD2
  CGADV
  CRD_CRD
  CREDIT_CARD
  DECLINE_AMT
  DISSAVING
  DOC_NUMBER
  DOC_TYPE	
  DOD_TYPE
  DPT_DATE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE
  AIR_MAIN.INTL_DOM AS 'INTDOM'
  CITYPAIR.INTL_DOM AS 'ITDOM'
  FARE_PAID
  FLAG
  INVOICE_NUM
  KILO	
  LEVEL_DESC
  LS_TKT
  NET_TKT_CNT
  NEW_ADV_PURCH 
  NEW_ADV_PURCH1
  NEW_EXCH_CNT
  NEW_SEG_MILES
  NONREF_FLAG
  PASSNGR_NAME
  REFUSE_CODE
  RF_FLAG
  SAVINGS
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX
  TKT_DATE 
  TKT_NUM
  TKT_PURCH
  TKT_SORT
  TKT_TYPE
  TRN_DATE
  TRAN_MY
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS 	
  XPSNGR_NM
  XTRAN_DT 
  MD
  YD
  ANNUAL_BEGIN
  EOM_DATE1

-* WHERE (TRN_DATE GE &&FROMDT.EVAL) AND (TRN_DATE LE &&TODT.EVAL) OR
-*       (TRN_DATE GE &&FXDATE.EVAL) AND (TRN_DATE LE &&TXDATE.EVAL)
WHERE MD EQ 'Y' OR YD EQ 'Y'
WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
-*&&WHERE7
-*&&WHERE8
-*&&WHERE9
-*&&WHERE10

-INCLUDE RPTPARMS
ON TABLE HOLD AS BNMAHLD
END
-RUN

 

TABLE FILE BNMAHLD
PRINT AIR_KEY
  AROLL_DSC3
  BR_CL_IDX
  CARD
  CCARD2
  CGADV
  CRD_CRD
  CREDIT_CARD
  DECLINE_AMT
  DISSAVINGS
  DOC_TYPE	
  DOD_TYPE
  DPT_DATE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE
  INTDOM
  ITDOM
  FARE_PAID
  FLAG
  KILO	
  LEVEL_DESC
  LS_TKT
  NET_TKT_CNT
  NEW_ADV_PURCH
  NEW_ADV_PURCH1
  NEW_EXCH_CNT
  NEW_SEG_MILES
  NONREF_FLAG
  PASSNGR_NAME
  REFUSE_CODE
  RF_FLAG
  SAVINGS
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX
  TKT_NUM
  TKT_PURCH
  TKT_SORT
  TKT_TYPE
  TRN_DATE
  TRAN_MY
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS
  XPSNGR_NM
  MD
  YD
  ANNUAL_BEGIN
  EOM_DATE1
ON TABLE HOLD AS BNMAIR
END
-RUN   	


DEFINE FILE BNMAIR
 CURRENT/A1 = MD;
 PRIOR/A1 =  YD;

ADVF1/A1 = IF CGADV EQ '0-6' THEN 'Y' ELSE 'N';
ADVF2/A1 = IF CGADV EQ '7-13' THEN 'Y' ELSE 'N';
ADVF3/A1 = IF CGADV EQ '14-20' THEN 'Y' ELSE 'N';
ADVF4/A1 = IF CGADV EQ  '21+' THEN 'Y'  ELSE 'N'; 

END

TABLE FILE BNMAIR
PRINT ADVF1 AIR_KEY
  ADVF2
  ADVF3
  ADVF4
  AROLL_DSC3
  BR_CL_IDX
  CARD
  CCARD2
  CGADV
  CRD_CRD
  CREDIT_CARD
  DECLINE_AMT
  DISSAVINGS
  CURRENT
  DOC_TYPE	
  DOD_TYPE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE	
  FARE_PAID
  FLAG
  INTDOM
  ITDOM
  KILO
  LEVEL_DESC
  LS_TKT
  NET_TKT_CNT
  NEW_ADV_PURCH
  NEW_ADV_PURCH1
  NEW_EXCH_CNT
  NEW_SEG_MILES
  NONREF_FLAG
  PASSNGR_NAME
  PRIOR	
  REFUSE_CODE
  RF_FLAG
  SAVINGS
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX 	
  TKT_NUM
  TKT_PURCH
  TKT_TYPE
  TRN_DATE
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS 
  XPSNGR_NM
  MD
  YD
  ANNUAL_BEGIN
  EOM_DATE1
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
ON TABLE HOLD AS TRANONE 
END
-RUN

-* This extracts add collect amount for current period only

-*
DEFINE FILE BNMAHLD
CURRENT/A1 = IF TRN_DATE GE &&FROMDT.EVAL AND
                TRN_DATE LE &&TODT.EVAL THEN 'Y' ELSE 'N';
END               
TABLE FILE BNMAHLD
PRINT ADDCOLLECT BR_CL_IDX XPSNGR_NM XTRAN_DT INVOICE_NUM TKT_NUM DOC_NUMBER EX_FLAG EXCHG_SALE SEG_COUNT 
BY LEVEL_DESC
BY PASSNGR_NAME
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
BY BR_CL_IDX NOPRINT
BY XPSNGR_NM NOPRINT
BY XTRAN_DT NOPRINT
BY INVOICE_NUM NOPRINT
BY TKT_NUM NOPRINT
BY DOC_NUMBER NOPRINT
WHERE EX_FLAG NE 'F' OR 'P'
WHERE (((EXCHG_SALE NE ' ') AND (SEG_COUNT GE 0)) OR
         ((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0)))
  
WHERE CURRENT EQ 'Y'
ON TABLE HOLD AS BNMHLD2
END
-RUN


DEFINE FILE BNMHLD2
  ADD_AMT/D12.2CS = IF TKT_NUM NE LAST TKT_NUM AND EX_FLAG EQ ' ' THEN ADDCOLLECT ELSE 0;
END
TABLE FILE BNMHLD2
SUM ADD_AMT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_NUM
ON TABLE HOLD AS BNMHLD3
END
-RUN

TABLE FILE BNMHLD3
SUM ADD_AMT AS 'P_ADDAMT'
BY LEVEL_DESC 
BY XPSNGR_NM
ON TABLE HOLD AS BNMHLD4
END
-RUN


-* Determine ATP for hierarchy selection
DEFINE FILE TRANONE
CADV1_TKT/P12 = IF ((CURRENT EQ 'Y') AND (ADVF1 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
CADV2_TKT/P12 = IF ((CURRENT EQ 'Y') AND (ADVF2 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
CADV3_TKT/P12 = IF ((CURRENT EQ 'Y') AND (ADVF3 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
CADV4_TKT/P12 = IF ((CURRENT EQ 'Y')  AND (ADVF4 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
 
CADV1_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF1 EQ 'Y')) THEN FARE_PAID ELSE 0;
CADV2_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF2 EQ 'Y')) THEN FARE_PAID ELSE 0;
CADV3_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF3 EQ 'Y')) THEN FARE_PAID ELSE 0;
CADV4_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF4 EQ 'Y')) THEN FARE_PAID ELSE 0;
END
TABLE FILE TRANONE
SUM CADV1_TKT
    CADV2_TKT
    CADV3_TKT
    CADV4_TKT
    CADV1_FARE
    CADV2_FARE
    CADV3_FARE
    CADV4_FARE
COMPUTE CATP1/P12.2 = IF ((CADV1_TKT LT 1) AND (CADV1_TKT GT (-1))) THEN 0 ELSE (CADV1_FARE/CADV1_TKT);
COMPUTE CATP2/P12.2 = IF ((CADV2_TKT LT 1) AND (CADV2_TKT GT (-1))) THEN 0 ELSE (CADV2_FARE/CADV2_TKT);
COMPUTE CATP3/P12.2 = IF ((CADV3_TKT LT 1) AND (CADV3_TKT GT (-1))) THEN 0 ELSE (CADV3_FARE/CADV3_TKT);
COMPUTE CATP4/P12.2 = IF ((CADV4_TKT LT 1) AND (CADV4_TKT GT (-1))) THEN 0 ELSE (CADV4_FARE/CADV4_TKT);
BY LEVEL_DESC
ON TABLE HOLD AS TRANTWO
END
-RUN



DEFINE FILE TRANONE
PADV1_TKT/P12 = IF ((CURRENT EQ 'Y') AND (ADVF1 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
PADV2_TKT/P12 = IF ((CURRENT EQ 'Y') AND (ADVF2 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
PADV3_TKT/P12 = IF ((CURRENT EQ 'Y') AND (ADVF3 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
PADV4_TKT/P12 = IF ((CURRENT EQ 'Y')  AND (ADVF4 EQ 'Y')) THEN NET_TKT_CNT ELSE 0;
 
PADV1_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF1 EQ 'Y')) THEN FARE_PAID ELSE 0;
PADV2_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF2 EQ 'Y')) THEN FARE_PAID ELSE 0;
PADV3_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF3 EQ 'Y')) THEN FARE_PAID ELSE 0;
PADV4_FARE/P12.2CS = IF ((CURRENT EQ 'Y') AND (ADVF4 EQ 'Y')) THEN FARE_PAID ELSE 0;
PAVOL/P12.2CS = IF PRIOR EQ 'Y' THEN FARE_PAID ELSE 0;
CAVOL/D12.2CS = IF CURRENT EQ 'Y' THEN FARE_PAID ELSE 0;
CLS_TKT/D8CS = IF CURRENT EQ 'Y' THEN LS_TKT ELSE 0;

CNTKT/D8CS = IF CURRENT EQ 'Y' THEN NET_TKT_CNT ELSE 0;
CDNTKT/D8CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'D') THEN NET_TKT_CNT ELSE 0;
CINTKT/D8CS = IF (CURRENT EQ 'Y') AND (INTDOM EQ 'I') THEN NET_TKT_CNT ELSE 0;

CNTP/D8CS = IF CURRENT EQ 'Y' THEN TKT_PURCH ELSE 0;
CNTP1/D8CS = IF (CURRENT EQ 'Y') AND (RF_FLAG EQ ' ') AND (EX_FLAG EQ ' ') THEN
                NET_TKT_CNT ELSE 0;
CLSAV/D12.2C = IF CURRENT EQ 'Y' THEN DISSAVINGS ELSE 0;
CDFARE/D12.2CS = IF (CURRENT EQ 'Y') THEN FARE_PAID ELSE 0;
CDTKT/D8CS = IF (CURRENT EQ 'Y') THEN NET_TKT_CNT ELSE 0;
PCEXCH/D8C = IF CURRENT EQ 'Y' THEN NEW_EXCH_CNT ELSE 0;
PNTKT/D8C  = IF PRIOR EQ 'Y' THEN NET_TKT_CNT ELSE 0;

END
-RUN


TABLE FILE TRANONE
SUM CAVOL 
  PADV1_TKT 
  PADV2_TKT 
  PADV3_TKT 
  PADV4_TKT 
  PADV1_FARE 
  PADV2_FARE 
  PADV3_FARE 
  PADV4_FARE 
  CLS_TKT 
  CNTKT 
  CDNTKT 
  CINTKT 
  CLSAV 
  NEW_ADV_PURCH
  PCEXCH
  PASSNGR_NAME
  PAVOL/D12.2C
  PNTKT
  ANNUAL_BEGIN
  EOM_DATE1
COMPUTE PATP1/P12.2CS = IF ((PADV1_TKT LT 1) AND (PADV1_TKT GT (-1))) THEN 0 ELSE (PADV1_FARE/PADV1_TKT);
COMPUTE PATP2/P12.2CS= IF ((PADV2_TKT LT 1) AND (PADV2_TKT GT (-1))) THEN 0 ELSE (PADV2_FARE/PADV2_TKT);
COMPUTE PATP3/P12.2CS = IF ((PADV3_TKT LT 1) AND (PADV3_TKT GT (-1))) THEN 0 ELSE (PADV3_FARE/PADV3_TKT);
COMPUTE PATP4/P12.2CS = IF ((PADV4_TKT LT 1) AND (PADV4_TKT GT (-1))) THEN 0 ELSE (PADV4_FARE/PADV4_TKT);

BY LEVEL_DESC
BY XPSNGR_NM
ON TABLE HOLD AS TRANTHREE
END
-RUN

DEFINE FILE TRANONE
 REC_CNT/D8CS = IF NET_TKT_CNT EQ 1 THEN 1 ELSE 0;
  TTLDAYS/D8 = NEW_ADV_PURCH1*NET_TKT_CNT;
END                    
TABLE FILE TRANONE
SUM NET_TKT_CNT AS 'PTTKT'
REC_CNT
TTLDAYS
BY LEVEL_DESC 
BY XPSNGR_NM
BY TKT_NUM
WHERE CURRENT EQ 'Y'
ON TABLE HOLD AS PHOLDADV
END 
-RUN


TABLE FILE PHOLDADV
SUM PTTKT REC_CNT TTLDAYS
BY LEVEL_DESC 
BY XPSNGR_NM
ON TABLE HOLD AS PHOLDTWO
END
-RUN




MATCH FILE TRANTHREE
PRINT CAVOL 
  PADV1_TKT 
  PADV2_TKT 
  PADV3_TKT 
  PADV4_TKT 
  PADV1_FARE 
  PADV2_FARE 
  PADV3_FARE 
  PADV4_FARE 
  PATP1
  PATP2
  PATP3
  PATP4
  PCEXCH
  CLS_TKT 
  CNTKT 
  CDNTKT 
  CINTKT 
  CLSAV 
  NEW_ADV_PURC
  XPSNGR_NM
  PASSNGR_NAME
  PAVOL
  PNTKT
  ANNUAL_BEGIN
  EOM_DATE1
BY LEVEL_DESC
ON TABLE HOLD
RUN
FILE TRANTWO
SUM CATP1
    CATP2
    CATP3
    CATP4
BY LEVEL_DESC
AFTER MATCH HOLD AS XONE OLD-OR-NEW
END
-RUN

MATCH FILE XONE
PRINT CAVOL 
  PADV1_TKT 
  PADV2_TKT 
  PADV3_TKT 
  PADV4_TKT 
  PADV1_FARE 
  PADV2_FARE 
  PADV3_FARE 
  PADV4_FARE 
  PATP1
  PATP2
  PATP3
  PATP4
  PCEXCH
  CLS_TKT 
  CNTKT 
  CDNTKT 
  CINTKT 
  CLSAV 
  NEW_ADV_PURC
  XPSNGR_NM
  PASSNGR_NAME
  PAVOL
  PNTKT
  CATP1
  CATP2
  CATP3
  CATP4
  ANNUAL_BEGIN
  EOM_DATE1
BY LEVEL_DESC
BY XPSNGR_NM
ON TABLE HOLD
RUN
FILE PHOLDTWO
SUM TTLDAYS PTTKT
BY LEVEL_DESC
BY XPSNGR_NM
AFTER MATCH HOLD AS XTWO OLD-OR-NEW
END
-RUN


MATCH FILE XTWO
PRINT CAVOL 
  PADV1_TKT 
  PADV2_TKT 
  PADV3_TKT 
  PADV4_TKT 
  PADV1_FARE 
  PADV2_FARE 
  PADV3_FARE 
  PADV4_FARE 
  PATP1
  PATP2
  PATP3
  PATP4
  PCEXCH
  CLS_TKT 
  CNTKT 
  CDNTKT 
  CINTKT 
  CLSAV 
  NEW_ADV_PURC
  XPSNGR_NM
  PASSNGR_NAME
  PAVOL
  PNTKT
  CATP1
  CATP2
  CATP3
  CATP4
  TTLDAYS
  PTTKT
  ANNUAL_BEGIN
  EOM_DATE
BY LEVEL_DESC
BY XPSNGR_NM
ON TABLE HOLD
RUN
FILE BNMHLD4
SUM P_ADDAMT
BY LEVEL_DESC
BY XPSNGR_NM
AFTER MATCH HOLD AS XTHREE OLD-OR-NEW
END
-RUN





DEFINE FILE XTHREE
PADV1_FLAG/A1 = IF (PADV1_TKT LT 1) AND (PADV1_TKT GT (-1)) THEN 'Y' ELSE 'N';
PADV2_FLAG/A1 = IF (PADV2_TKT LT 1) AND (PADV2_TKT GT (-1)) THEN 'Y' ELSE 'N';
END
TABLE FILE XTHREE
SUM CAVOL 
  PADV1_TKT 
  PADV2_TKT 
  PADV3_TKT 
  PADV4_TKT 
  PADV1_FARE 
  PADV2_FARE 
  PADV3_FARE 
  PADV4_FARE 
  PATP1
  PATP2
  PATP3
  PATP4
  PAVOL
  PNTKT
  PCEXCH
  CLS_TKT 
  CNTKT 
  CDNTKT 
  CINTKT 
  CLSAV 
  CATP1
  CATP2
  CATP3
  CATP4
  TTLDAYS
  PASSNGR_NAME
  PTTKT
  P_ADDAMT
  PADV1_FLAG
  PADV2_FLAG
  ANNUAL_BEGIN
  EOM_DATE1
BY LEVEL_DESC
BY XPSNGR_NM
ON TABLE HOLD AS XFOUR
END
-RUN

TABLE FILE XFOUR
SUM CAVOL 
  PADV1_TKT 
  PADV2_TKT 
  PADV3_TKT 
  PADV4_TKT 
  PADV1_FARE 
  PADV2_FARE     
  PADV3_FARE 
  PADV4_FARE 
  PATP1
  PATP2
  PATP3
  PATP4
  PAVOL 
  PNTKT
  PCEXCH
  CLS_TKT 
  CNTKT 
  CDNTKT 
  CINTKT 
  CLSAV 
  CATP1
  CATP2
  CATP3
  CATP4
  TTLDAYS
  PASSNGR_NAME
  PTTKT
  P_ADDAMT
  PADV1_FLAG
  PADV2_FLAG
  ANNUAL_BEGIN
  EOM_DATE1
COMPUTE MOV1/P12.2 = CATP1 - CATP2;
COMPUTE MOV2/P12.2 = CATP2 - CATP3;
COMPUTE PMOVEA/P12.2 = IF (PADV1_TKT LT 1) AND (PADV1_TKT GT (-1))  THEN 0 ELSE 
                     IF (MOV1 LT 1)  THEN 0 ELSE
                        (MOV1*100/100) * PADV1_TKT; 
COMPUTE PMOVEB/P12.2 = IF (PADV2_TKT LT 1) AND (PADV2_TKT GT (-1)) THEN 0 ELSE 
                     IF (MOV2 LT 1) THEN 0 ELSE
                     (MOV2*100/100) * PADV2_TKT;  
MOVEAX/D12.2M = PMOVEA;
MOVEBX/D12.2M = PMOVEB;

COMPUTE AP_SVG/D12.2CM = MOVEAX + MOVEBX;
BY LEVEL_DESC
BY XPSNGR_NM
ON TABLE HOLD AS BIOTONE
END
-RUN
 



TABLE FILE BIOTONE
PRINT CAVOL
      CNTKT/D9C
      CLS_TKT
      CLSAV
      PAVOL
      PNTKT/D9C
      P_ADDAMT
      PCEXCH
      AP_SVG
      PAVOL/D12.2C
      TTLDAYS
      PTTKT
      PASSNGR_NAME
      LEVEL_DESC
      ANNUAL_BEGIN
      EOM_DATE1
RANKED BY HIGHEST CAVOL
BY XPSNGR_NM
ON TABLE HOLD AS RNKHLD
END
-RUN


DEFINE FILE RNKHLD 
  DRANK/D9 = RANK;
  ARANKX/A11 = FTOA(DRANK, '(D9)', 'A11');
  ARANK/A9 = EDIT(ARANKX,'$$999999999');
  LIST/D9 = (LAST LIST + 1);
  CRANKX/A11 = FTOA(LIST, '(D9)', 'A11');
  CRANK/A9 = EDIT(CRANKX,'$$999999999');
  RANK_VALUE/A9 = IF &&RANK_LIMIT EQ 0 THEN ARANK ELSE 
                  IF LIST GT &&RANK_LIMIT THEN 'ALL OTHER' ELSE 
                  CRANK;
  RANK_VAL/A9 = IF &&RANK_LIMIT EQ 0 THEN ARANK ELSE
                IF RANK GT &&RANK_LIMIT THEN 'ALL OTHER' ELSE
                ARANK;
  
  RANK_LABEL/A17 = IF RANK_VALUE NE 'ALL OTHER' THEN XPSNGR_NM ELSE ' '; 
 PAX_NAME/A33 = IF RANK_VALUE NE 'ALL OTHER' THEN PASSNGR_NAME ELSE ' ';
NOWTOD/A8 WITH RANK = HHMMSS (NOWTOD);
END
-RUN


TABLE FILE RNKHLD
SUM CAVOL
      CLS_TKT
      CLSAV/D12.2C
      CNTKT
      PTTKT
      P_ADDAMT/D12.2C
       
      PCEXCH
      AP_SVG  
      PAVOL 
      PNTKT/D8C
      PAX_NAME
      PTTKT
      TTLDAYS
      ANNUAL_BEGIN
      EOM_DATE1
 COMPUTE PADV/P8 = IF ((PTTKT LT 1) AND (PTTKT GT (-1))) THEN 0 ELSE 
                    (TTLDAYS/PTTKT); 

BY RANK_VALUE
BY LEVEL_DESC
BY RANK_LABEL
ON TABLE HOLD AS FINALHLD
END    
-RUN

-SET &&AIRREC=IF &RECORDS EQ 0 THEN 'N' ELSE 'Y';




-GOTO XXIT;
 

DEFINE FILE FINALHLD
NOWTOD/A8 WITH CAVOL = HHMMSS (NOWTOD);
-*CAVAR/P8.1%CS = CAVAR1;
FLAG/A1 = IF RANK_VALUE NE 'ALL OTHER' THEN 'A' ELSE 'B'; 
FLAG1/A1 = IF FLAG EQ 'A' THEN ' ' ELSE FLAG;
BLANK/A1 = ' ';
END
-RUN
    

 
TABLE FILE FINALHLD
SUM 
CNTKT AS 'Total Tickets,Period 1'
    CAVOL/D12CM AS 'Total Amount,Spend Period 1'
    CLS_TKT/D8S  AS '# Tickets Issued, with Lost Savings'
    CLSAV/D12CM AS '  Total,Lost Savings'
    PADV AS 'Average Advance Purchase'
    AP_SVG/D12CSM AS 'Adv Purchase Savings'
    PCEXCH AS '# of Exchanges'
    P_ADDAMT/D12CM AS 'Exchange Fees,Including Add,Collect'
    PNTKT AS 'Total Tickets,Period 2'
    PAVOL/D12CM AS 'Total Amount,Spend Period 2'
 COMPUTE CAVAR1/D12.2C = IF ((PAVOL LT 1) AND (PAVOL GT (-1))) THEN 0 ELSE
                           (((CAVOL-PAVOL)/PAVOL)*100); NOPRINT
   

COMPUTE CAVAR/P8.1%C = CAVAR1; AS 'Change % of,Total Spend'
COMPUTE SPVAR/D12.2CSM = CAVOL - PAVOL; AS 'Change Total Spend,Period 1 v. Period 2' 
COMPUTE TVAR/D8CS = CNTKT - PNTKT; AS 'Change Total Tickets,Period 1 v. Period 2' 

BY FLAG NOPRINT
BY FLAG1 NOPRINT
BY RANK_VALUE AS 'Rank'
  
BY PAX_NAME AS ' '
ON FLAG1 RECOMPUTE  CNTKT CAVOL CLS_TKT CLSAV AP_SVG PCEXCH  P_ADDAMT PNTKT PAVOL CAVAR SPVAR TVAR AS 'SubTotal'
ON PAX_NAM RECOMPUTE MULTILINES CNTKT CAVOL CLS_TKT CLSAV AP_SVG PCEXCH  P_ADDAMT PNTKT PAVOL CAVAR SPVAR TVAR AS 'TOTAL FOR'
-*ON TABLE SET ONLINE-FMT EXL2K
END
-RUN
-QUIT
-XXIT
