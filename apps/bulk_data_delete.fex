-*======================================================================
-*  PROGRAM : BULK_DATA_DELETE.FEX
-*======================================================================
-*  DESCRIPTION: This program will find records for a Rollup based on
-*               provided parameters and delete those records from the
-*               FOCUS data files.
-*
-*  PROGRAMMER: GSE                               REQUESTOR: STEVE CORDS
-*  DATE        PROGRAMMER  CHANGE
-*  ----        ----------  ---------------------------------
-*  12/30/2014  GSE         S-06760 Added &ORGSYS as a run-time
-*                          parameter to delete records based on ORIG_SYS
-*                          &ORGSYS can only be entered by itself.
-*                          Added delete of PF File MISC_KEY records, but
-*                          only for &CLINUM and &CATEGORY runs.
-*  01/07/2015  GSE         S-06760 Added TnXXXXXX files to Air deletes.
-*  03/12/2015  GSE         S-07915 Reordered Seg/Mkt/Dst deletes so
-*                          that they are processed even when no Air
-*                          records are found due to having data both
-*                          within and without date range.
-*  01/09/2017  GSE         S-26630 Added &ORGSYS to PF file processing
-*                          logic as this field is now available.
-*  03/24/2017  GSE         S-32051 Changed to use ROLLQTR_SQL to
-*                          determine Quarter and changed ROLLUP
-*                          reference to ROLLUP_SQL.
-*  06/14/2017  GSE         S-35928 Added -DEFAULT for &QTR to not error
-*                          on &QTR when running for a non-quartered
-*                          Rollup.
-*======================================================================
-DEFAULT &ROLL = ' ';
-*DEFAULT &ROLL = 'MANIFS-R';
-DEFAULT &CLINUM = ' ';
-*DEFAULT &CLINUM = 'CO559419';
-DEFAULT &CATEGORY = ' ';
-*DEFAULT &CATEGORY = 'GLOBAL';
-DEFAULT &ORGSYS = ' ';
-*DEFAULT &ORGSYS = 'V2';
-DEFAULT &FRDATE = ' ';
-DEFAULT &TODATE = ' ';
-SET &LOOPSTART = 0;
-SET &LOOPEND = 11;
-SET &SKIP3 = 'N';
-DEFAULT &QTR = '_';
-*
SET HOLDLIST = PRINTONLY
SET ASNAMES = ON
SET PCOMMA = ON
SET FIXFRMINPUT = NONCOND
SET MESSAGE = OFF
-RUN
-*
-IF &ROLL LE ' ' GOTO ERRORS;
-IF &CLINUM GT ' ' AND &CATEGORY GT ' ' GOTO ERRORS;
-IF &CLINUM GT ' ' AND &ORGSYS GT ' ' GOTO ERRORS;
-IF &CATEGORY GT ' ' AND &ORGSYS GT ' ' GOTO ERRORS;
-IF &CLINUM LE ' ' AND &CATEGORY LE ' ' AND &ORGSYS LE ' ' GOTO ERRORS;
-IF &FRDATE LE ' ' OR &TODATE LE ' ' GOTO ERRORS;
-*
-SET &SEL_FRDATE = EDIT('&FRDATE.EVAL','$$$$99/99/') | EDIT('&FRDATE.EVAL','9999');
-SET &SEL_TODATE = EDIT('&TODATE.EVAL','$$$$99/99/') | EDIT('&TODATE.EVAL','9999');
-RUN
-*
TABLE FILE ROLLQTR_SQL
PRINT
      FROMDATE NOPRINT
      TODATE NOPRINT
BY ROLLUP_CODE NOPRINT
BY QUARTER AS QTR
WHERE ROLLUP_CODE EQ '&ROLL.EVAL'
WHERE '&SEL_FRDATE.EVAL' GE FROMDATE AND
      '&SEL_TODATE.EVAL' LE TODATE
ON TABLE HOLD AS REQ_QTRS
END
-RUN
-IF &RECORDS GT 1 GOTO DATEERROR;
-*
-READFILE REQ_QTRS
-TYPE QTR &QTR
-*
-SET &SEL_CLINUM = IF '&CLINUM.EVAL' LE ' ' THEN FOC_NONE ELSE '&CLINUM.EVAL';
-SET &SEL_CATEGORY = IF '&CATEGORY.EVAL' LE ' ' THEN FOC_NONE ELSE '&CATEGORY.EVAL';
-SET &SEL_ORGSYS = IF '&ORGSYS.EVAL' LE ' ' THEN FOC_NONE ELSE '&ORGSYS.EVAL';
-*
-* CHECK FOR BACKUP DIRECTORY AND CREATE IF NOT FOUND
-*
DOS STATE &&DATASRV.EVAL\DATA\delete_backups
-RUN
-*TYPE &RETCODE
-IF &RETCODE EQ 0 GOTO SKIPUPRMD;
-*
DOS MD &&DATASRV.EVAL\DATA\delete_backups
-SKIPUPRMD
-*
-* CHECK FOR ROLLUP DIRECTORY AND CREATE IF NOT FOUND
-*
DOS STATE &&DATASRV.EVAL\DATA\delete_backups\&ROLL.EVAL
-RUN
-IF &RETCODE EQ 0 GOTO SKIPLOWMD;
-*
DOS MD &&DATASRV.EVAL\DATA\delete_backups\&ROLL.EVAL
-SKIPLOWMD
-*
-* CHECK FOR DATE/TIME DIRECTORY WITHIN ROLLUP DIRECTORY AND CREATE IF NOT FOUND
-*
-SET &D_T=&YYMD || '_' || EDIT(HHMMSS('A8'),'99$99$99');
-SET &ROLLD_T = '&ROLL.EVAL' || '\' || '&D_T.EVAL';
-*
DOS STATE &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL
-RUN
-IF &RETCODE EQ 0 GOTO SKIPDTSMD;
-*
DOS MD &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL
-SKIPDTSMD
-*
FILEDEF SEGRECS DISK SEGRECS (APPEND
FILEDEF SEGORNG DISK SEGORNG (APPEND
-RUN
-*
TABLE FILE ROLLUP_SQL
PRINT COMP QTR_ENABLE
BY ROLLUP_CODE
WHERE ROLLUP_CODE EQ '&ROLL'
WHERE ROLLUP_CODE NE 'ABCD2-R' OR 'ABCD3-R' OR 'TOTAL-R'
WHERE UPD_ENABLE EQ 'X'
WHERE COMP NE ' '
ON TABLE HOLD AS ROLLLIST
END
-RUN
-*
-IF &RECORDS GT 0 GOTO ROLLFND;
-TYPE ROLLUP &ROLL NOT FOUND OR NOT ACTIVE
-ROLLFND
-*
-READFILE ROLLLIST
-RUN
-IF &IORETURN NE 0 GOTO XXIT;
-*
-TYPE BACKUP DATA FILES FOR &ROLL
-RUN
-*
-SET &QTRCOMPFOC = IF '&QTR_ENABLE.EVAL' EQ 'X' THEN '&QTR.EVAL' || '&COMP.EVAL' || '.foc' ELSE
-                                                    '_' || '&COMP.EVAL' || '.foc';
-SET &COMPFOC = '&COMP.EVAL' || '.foc';
-RUN
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\A&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\S&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\M&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\D&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\H&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\C&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\L&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\T&QTRCOMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\UA&COMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\UH&COMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\UC&COMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\UL&COMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
COPY &&DATASRV.EVAL\TNT\TTRACKER\DATA\PF&COMPFOC.EVAL &&DATASRV.EVAL\DATA\delete_backups\&ROLLD_T.EVAL > NULL
-RUN
-*
-*** Gather Air Keys from Segment
-*
-*SET &QTRCTR = &LOOPSTART.EVAL;
-*SET &ENDCTR = IF &QTR_ENABLE NE 'X' THEN 1 ELSE (&LOOPEND.EVAL - &LOOPSTART.EVAL + 1);
-*REPEAT SEGGET &ENDCTR TIMES;
-SET &QTR = IF &QTR_ENABLE NE 'X' THEN '_' ELSE &QTR;
-SET &SMODFILE = 'S' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &AMODFILE = 'A' | '&QTR.EVAL' | '&COMP.EVAL';
-*SET &QTRCTR = &QTRCTR + 1;
-*
JOIN AIR_KEY IN &SMODFILE TO UNIQUE AIR_KEY IN &AMODFILE AS J0
JOIN BR_CL_IDX IN &SMODFILE TO UNIQUE BR_CL_IDX IN CLIENT AS J1
-*
TABLE FILE &SMODFILE
SUM
      BR_CL_IDX
	  CATEGORY
	  ORIG_SYS
BY AIR_KEY
BY TRN_DATE
WHERE BR_CL_IDX EQ '&SEL_CLINUM';
WHERE CATEGORY EQ '&SEL_CATEGORY';
WHERE ORIG_SYS EQ '&SEL_ORGSYS';
WHERE TRN_DATE GE '&FRDATE.EVAL' AND TRN_DATE LE '&TODATE.EVAL'
-****
-*WHERE TKT_NUM EQ &TKTNUM.EVAL
-*ON TABLE SET MESSAGE ON
-****
ON TABLE HOLD AS SEGRECS
END
-RUN
-*
-SEGGET
-*
JOIN CLEAR J0
JOIN CLEAR J1
-*
-*** Find unique Air Keys
-*
TABLE FILE SEGRECS
BY AIR_KEY
ON TABLE HOLD AS SKEYS FORMAT ALPHA
END
-RUN
-IF &LINES EQ 0 GOTO NOAIR;
-*
-*** Find matching Seg Keys outside entered date range
-*
-*SET &QTRCTR = &LOOPSTART.EVAL;
-*SET &ENDCTR = IF &QTR_ENABLE NE 'X' THEN 1 ELSE (&LOOPEND.EVAL - &LOOPSTART.EVAL + 1);
-*REPEAT SEGFLTR &ENDCTR TIMES;
-SET &QTR = IF &QTR_ENABLE NE 'X' THEN '_' ELSE &QTR;
-SET &SMODFILE = 'S' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &AMODFILE = 'A' | '&QTR.EVAL' | '&COMP.EVAL';
-*SET &QTRCTR = &QTRCTR + 1;
-*
TABLE FILE &SMODFILE
BY AIR_KEY
WHERE TRN_DATE LT '&FRDATE.EVAL' OR TRN_DATE GT '&TODATE.EVAL'
WHERE AIR_KEY EQ (SKEYS)
ON TABLE HOLD AS SEGORNG
END
-RUN
-*
-SEGFLTR
-*
-*** List only those Air Keys that ONLY have data within entered date range
-*
MATCH FILE SKEYS
BY AIR_KEY
RUN
FILE SEGORNG
BY AIR_KEY
AFTER MATCH HOLD AS MTCH1 OLD-NOT-NEW
END
-RUN
-*
TABLE FILE MTCH1
BY AIR_KEY
ON TABLE HOLD AS ONLYIRNG
END
-RUN
-IF &LINES EQ 0 GOTO ONLYSEG;
-*
-*** Delete keys from Air files
-*
-*SET &QTRCTR = &LOOPSTART.EVAL;
-*SET &ENDCTR = IF &QTR_ENABLE NE 'X' THEN 1 ELSE (&LOOPEND.EVAL - &LOOPSTART.EVAL + 1);
-*REPEAT DELAIR &ENDCTR TIMES;
-SET &AMODFILE = 'A' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &AFOCFILE = &AMODFILE || '.foc';
-SET &TMODFILE = 'T' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &TFOCFILE = &TMODFILE || '.foc';
-SET &AUDIDFIL = 'UA' | '&COMP.EVAL';
-SET &AUDIDFOC = &AUDIDFIL || '.foc';
-SET &PFEEFILE = 'PF' | '&COMP.EVAL';
-SET &PFEEFFOC = &PFEEFILE || '.foc';
-*SET &QTRCTR = &QTRCTR + 1;
-*
TABLE FILE &AMODFILE
BY AIR_KEY
WHERE AIR_KEY EQ (ONLYIRNG)
ON TABLE HOLD AS AIRDELS
END
-IF &RECORDS EQ 0 GOTO DELAIR;
-*
-TYPE &AMODFILE DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &AMODFILE
FIXFORM FROM AIRDELS
MATCH AIR_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON AIRDELS
END
SET MESSAGE = OFF
-RUN
-*
TABLE FILE &TMODFILE
BY AIR_KEY
WHERE AIR_KEY EQ (ONLYIRNG)
ON TABLE HOLD AS TKTDELS
END
-RUN
-*
-TYPE &TMODFILE DELETE &LINES
-*
SET MESSAGE = ON
MODIFY FILE &TMODFILE
FIXFORM FROM TKTDELS
MATCH AIR_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON TKTDELS
END
SET MESSAGE = OFF
-RUN
-*
TABLE FILE &AUDIDFIL
BY AIR_KEY
WHERE AIR_KEY EQ (ONLYIRNG)
ON TABLE HOLD AS AUDDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOAUDID;
-*
-TYPE &AUDIDFIL DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &AUDIDFIL
FIXFORM FROM AUDDELS
MATCH AIR_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON AUDDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOAUDID
-*
TABLE FILE &PFEEFILE
PRINT
      AIR_KEY
BY SEQNBR
WHERE AIR_KEY EQ (ONLYIRNG)
ON TABLE HOLD AS APFDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOAIRFEE;
-*
-TYPE &PFEEFILE DELETE &LINES AIR KEYS
-*
SET MESSAGE = ON
MODIFY FILE &PFEEFILE
FIXFORM FROM APFDELS
MATCH SEQNBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON APFDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOAIRFEE
-*
-DELAIR
-*
-ONLYSEG
-*
-SET &QTR = IF &QTR_ENABLE NE 'X' THEN '_' ELSE &QTR;
-SET &SMODFILE = 'S' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &SFOCFILE = &SMODFILE || '.foc';
-SET &MMODFILE = 'M' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &MFOCFILE = &MMODFILE || '.foc';
-SET &DMODFILE = 'D' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &DFOCFILE = &DMODFILE || '.foc';
-*
TABLE FILE &SMODFILE
BY AIR_KEY
BY EMBARK
BY ROUTE
BY TKT_SORT
BY SEG_NBR
BY TRN_DATE
WHERE AIR_KEY EQ (SKEYS)
WHERE TRN_DATE GE '&FRDATE.EVAL' AND TRN_DATE LE '&TODATE.EVAL'
ON TABLE HOLD AS SEGDELS
END
-RUN
-*
-TYPE &SMODFILE DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &SMODFILE
FIXFORM FROM SEGDELS
MATCH AIR_KEY EMBARK ROUTE TKT_SORT SEG_NBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON SEGDELS
END
SET MESSAGE = OFF
-RUN
-*
TABLE FILE &MMODFILE
BY AIR_KEY
BY EMBARK
BY ROUTE
BY TKT_SORT
BY SEG_NBR
BY TRN_DATE
WHERE AIR_KEY EQ (SKEYS)
WHERE TRN_DATE GE '&FRDATE.EVAL' AND TRN_DATE LE '&TODATE.EVAL'
ON TABLE HOLD AS MKTDELS
END
-RUN
-*
-TYPE &MMODFILE DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &MMODFILE
FIXFORM FROM MKTDELS
MATCH AIR_KEY EMBARK ROUTE TKT_SORT SEG_NBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON MKTDELS
END
SET MESSAGE = OFF
-RUN
-*
TABLE FILE &DMODFILE
BY AIR_KEY
BY EMBARK
BY ROUTE
BY TKT_SORT
BY SEG_NBR
BY TRN_DATE
WHERE AIR_KEY EQ (SKEYS)
WHERE TRN_DATE GE '&FRDATE.EVAL' AND TRN_DATE LE '&TODATE.EVAL'
ON TABLE HOLD AS DSTDELS
END
-RUN
-*
-TYPE &DMODFILE DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &DMODFILE
FIXFORM FROM DSTDELS
MATCH AIR_KEY EMBARK ROUTE TKT_SORT SEG_NBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON DSTDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOAIR
-*
-*** Process Htl deletes
-*
-*SET &QTRCTR = &LOOPSTART.EVAL;
-*SET &ENDCTR = IF &QTR_ENABLE NE 'X' THEN 1 ELSE (&LOOPEND.EVAL - &LOOPSTART.EVAL + 1);
-*
-*REPEAT HTLDEL &ENDCTR TIMES;
-SET &QTR = IF &QTR_ENABLE NE 'X' THEN '_' ELSE &QTR;
-SET &HMODFILE = 'H' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &HFOCFILE = &HMODFILE || '.foc';
-SET &HUDIDFIL = 'UH' | '&COMP.EVAL';
-SET &HUDIDFOC = &HUDIDFIL || '.foc';
-SET &PFEEFILE = 'PF' | '&COMP.EVAL';
-SET &PFEEFFOC = &PFEEFILE || '.foc';
-*SET &QTRCTR = &QTRCTR + 1;
-*
JOIN BR_CL_IDX IN &HMODFILE TO UNIQUE BR_CL_IDX IN CLIENT AS J1
-*
TABLE FILE &HMODFILE
SUM
      BR_CL_IDX
	  CATEGORY
BY HTL_KEY
BY INVOICE_DATE
WHERE BR_CL_IDX EQ '&SEL_CLINUM';
WHERE CATEGORY EQ '&SEL_CATEGORY';
WHERE ORIG_SYS EQ '&SEL_ORGSYS';
WHERE INVOICE_DATE GE '&FRDATE.EVAL' AND INVOICE_DATE LE '&TODATE.EVAL'
ON TABLE HOLD AS HTLDELS FORMAT ALPHA
END
-RUN
-IF &RECORDS EQ 0 GOTO HTLDEL;
-*
-TYPE &HMODFILE DELETE &LINES KEYS
-*
JOIN CLEAR J0
-RUN
-*
SET MESSAGE = ON
MODIFY FILE &HMODFILE
FIXFORM FROM HTLDELS
MATCH HTL_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON HTLDELS
END
SET MESSAGE = OFF
-RUN
-*
TABLE FILE &HUDIDFIL
BY HTL_KEY
WHERE HTL_KEY EQ (HTLDELS)
ON TABLE HOLD AS HUDDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOHUDID;
-*
-TYPE &HUDIDFIL DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &HUDIDFIL
FIXFORM FROM HUDDELS
MATCH HTL_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON HUDDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOHUDID
-*
TABLE FILE &PFEEFILE
PRINT
      HTL_KEY
BY SEQNBR
WHERE HTL_KEY EQ (HTLDELS)
ON TABLE HOLD AS HPFDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOHTLFEE;
-*
-TYPE &PFEEFILE DELETE &LINES HTL KEYS
-*
SET MESSAGE = ON
MODIFY FILE &PFEEFILE
FIXFORM FROM HPFDELS
MATCH SEQNBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON HPFDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOHTLFEE
-*
-HTLDEL
-*
-*** Process Car deletes
-*
-*SET &QTRCTR = &LOOPSTART.EVAL;
-*SET &ENDCTR = IF &QTR_ENABLE NE 'X' THEN 1 ELSE (&LOOPEND.EVAL - &LOOPSTART.EVAL + 1);
-*
-*REPEAT CARDEL &ENDCTR TIMES;
-SET &QTR = IF &QTR_ENABLE NE 'X' THEN '_' ELSE &QTR;
-SET &CMODFILE = 'C' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &CFOCFILE = &CMODFILE || '.foc';
-SET &CUDIDFIL = 'UC' | '&COMP.EVAL';
-SET &CUDIDFOC = &CUDIDFIL || '.foc';
-SET &PFEEFILE = 'PF' | '&COMP.EVAL';
-SET &PFEEFFOC = &PFEEFILE || '.foc';
-*SET &QTRCTR = &QTRCTR + 1;
-*
JOIN BR_CL_IDX IN &CMODFILE TO UNIQUE BR_CL_IDX IN CLIENT AS J1
-*
TABLE FILE &CMODFILE
SUM
      BR_CL_IDX
	  CATEGORY
BY CAR_KEY
BY INVOICE_DATE
WHERE BR_CL_IDX EQ '&SEL_CLINUM';
WHERE CATEGORY EQ '&SEL_CATEGORY';
WHERE ORIG_SYS EQ '&SEL_ORGSYS';
WHERE INVOICE_DATE GE '&FRDATE.EVAL' AND INVOICE_DATE LE '&TODATE.EVAL'
ON TABLE HOLD AS CARDELS FORMAT ALPHA
END
-RUN
-IF &RECORDS EQ 0 GOTO CARDEL;
-*
-TYPE &CMODFILE DELETE &LINES KEYS
-*
JOIN CLEAR J0
-RUN
-*
SET MESSAGE = ON
MODIFY FILE &CMODFILE
FIXFORM FROM CARDELS
MATCH CAR_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON CARDELS
END
SET MESSAGE = OFF
-RUN
-*
TABLE FILE &CUDIDFIL
BY CAR_KEY
WHERE CAR_KEY EQ (CARDELS)
ON TABLE HOLD AS CUDDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOCUDID;
-*
-TYPE &CUDIDFIL DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &CUDIDFIL
FIXFORM FROM CUDDELS
MATCH CAR_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON CUDDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOCUDID
-*
TABLE FILE &PFEEFILE
PRINT
      CAR_KEY
BY SEQNBR
WHERE CAR_KEY EQ (CARDELS)
ON TABLE HOLD AS CPFDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOCARFEE;
-*
-TYPE &PFEEFILE DELETE &LINES CAR KEYS
-*
SET MESSAGE = ON
MODIFY FILE &PFEEFILE
FIXFORM FROM CPFDELS
MATCH SEQNBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON CPFDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOCARFEE
-*
-CARDEL
-*
-*** Process Limo deletes
-*
-*SET &QTRCTR = &LOOPSTART.EVAL;
-*SET &ENDCTR = IF &QTR_ENABLE NE 'X' THEN 1 ELSE (&LOOPEND.EVAL - &LOOPSTART.EVAL + 1);
-*
-*REPEAT LIMDEL &ENDCTR TIMES;
-SET &QTR = IF &QTR_ENABLE NE 'X' THEN '_' ELSE &QTR;
-SET &LMODFILE = 'L' | '&QTR.EVAL' | '&COMP.EVAL';
-SET &LFOCFILE = &LMODFILE || '.foc';
-SET &LUDIDFIL = 'UL' | '&COMP.EVAL';
-SET &LUDIDFOC = &LUDIDFIL || '.foc';
-SET &PFEEFILE = 'PF' | '&COMP.EVAL';
-SET &PFEEFFOC = &PFEEFILE || '.foc';
-*SET &QTRCTR = &QTRCTR + 1;
-*
JOIN BR_CL_IDX IN &LMODFILE TO UNIQUE BR_CL_IDX IN CLIENT AS J1
-*
TABLE FILE &LMODFILE
SUM
      BR_CL_IDX
	  CATEGORY
BY CAR_KEY
BY INVOICE_DATE
WHERE BR_CL_IDX EQ '&SEL_CLINUM';
WHERE CATEGORY EQ '&SEL_CATEGORY';
WHERE ORIG_SYS EQ '&SEL_ORGSYS';
WHERE INVOICE_DATE GE '&FRDATE.EVAL' AND INVOICE_DATE LE '&TODATE.EVAL'
ON TABLE HOLD AS LIMDELS FORMAT ALPHA
END
-RUN
-IF &RECORDS EQ 0 GOTO LIMDEL;
-*
-TYPE &LMODFILE DELETE &LINES KEYS
-*
JOIN CLEAR J0
-RUN
-*
SET MESSAGE = ON
MODIFY FILE &LMODFILE
FIXFORM FROM LIMDELS
MATCH CAR_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON LIMDELS
END
SET MESSAGE = OFF
-RUN
-*
TABLE FILE &LUDIDFIL
BY CAR_KEY
WHERE CAR_KEY EQ (LIMDELS)
ON TABLE HOLD AS LUDDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOLUDID;
-*
-TYPE &LUDIDFIL DELETE &LINES KEYS
-*
SET MESSAGE = ON
MODIFY FILE &LUDIDFIL
FIXFORM FROM LUDDELS
MATCH CAR_KEY
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON LUDDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOLUDID
-*
TABLE FILE &PFEEFILE
PRINT
      CAR_KEY
BY SEQNBR
WHERE CAR_KEY EQ (LIMDELS)
ON TABLE HOLD AS LPFDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO NOLIMFEE;
-*
-TYPE &PFEEFILE DELETE &LINES LIM KEYS
-*
SET MESSAGE = ON
MODIFY FILE &PFEEFILE
FIXFORM FROM LPFDELS
MATCH SEQNBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON LPFDELS
END
SET MESSAGE = OFF
-RUN
-*
-NOLIMFEE
-*
-LIMDEL
-*
-*IF &ORGSYS GT ' ' GOTO TASFDEL;
-*** Process PF file TASF deletes
-*
-SET &PFEEFILE = 'PF' | '&COMP.EVAL';
-SET &PFEEFFOC = &PFEEFILE || '.foc';
-*
JOIN BR_CL_IDX IN &PFEEFILE TO UNIQUE BR_CL_IDX IN CLIENT AS J1
-*
TABLE FILE &PFEEFILE
SUM
      BR_CL_IDX
	  CATEGORY
BY SEQNBR
BY MISC_KEY
BY TRN_DATE
WHERE BR_CL_IDX EQ '&SEL_CLINUM';
WHERE CATEGORY EQ '&SEL_CATEGORY';
WHERE ORIG_SYS EQ '&SEL_ORGSYS';
WHERE TRN_DATE GE '&FRDATE.EVAL' AND TRN_DATE LE '&TODATE.EVAL'
WHERE MISC_KEY GT ' '
ON TABLE HOLD AS TASFDELS
END
-RUN
-IF &RECORDS EQ 0 GOTO TASFDEL;
-*
-TYPE &PFEEFILE DELETE &LINES MISC KEYS
JOIN CLEAR J0
-RUN
-*
SET MESSAGE = ON
MODIFY FILE &PFEEFILE
FIXFORM FROM TASFDELS
MATCH SEQNBR
ON MATCH DELETE
ON NOMATCH REJECT
DATA ON TASFDELS
END
SET MESSAGE = OFF
-RUN
-*
-TASFDEL
-GOTO XXIT
-ERRORS
-TYPE ******* ERRORS IN PROCESSING ********
-IF &ROLL GT ' ' GOTO SKIPERR1;
-*
-TYPE You must provide a value for ROLL
-SKIPERR1
-*
-IF (&CLINUM GT ' ' OR &CATEGORY GT ' ' OR &ORGSYS GT ' ') GOTO SKIPERR2;
-*
-TYPE You must provide either CLINUM or CATEGORY or ORGSYS
-SET &SKIP3 = 'Y';
-SKIPERR2
-*
-IF (&CLINUM GT ' ' AND &CATEGORY LE ' ' AND &ORGSYS LE ' ')
- OR (&CLINUM LE ' ' AND &CATEGORY GT ' ' AND &ORGSYS LE ' ')
- OR (&ORGSYS GT ' ' AND &CLINUM LE ' ' AND &CATEGORY LE ' ')
- OR (&SKIP3 EQ 'Y') GOTO SKIPERR3;
-*
-TYPE You can only provide for CLINUM, *OR* CATEGORY, *OR* ORGSYS, not more than one
-SKIPERR3
-*
-IF &FRDATE GT ' ' OR &TODATE GT ' ' GOTO SKIPERR4;
-*
-TYPE FRDATE and TODATE are required
-SKIPERR4
-GOTO XXIT
-DATEERROR
-TYPE This procedure can only be run for one quarter, maximum.  Please change
-TYPE your date range to be within one quarter.
-TYPE
-XXIT
-TYPE PROCESSING COMPLETE
