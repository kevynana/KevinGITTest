-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**

-********************************************************************
-*
-* This program extracts data for the series of basic ticket listing
-* reports.  Based on the user profile selected, one of many report
-* formats will be produced.  
-* DATE       NAME                DESCRIPTION
-* 1/24/01    SS                  To be used with ConAgra report
-* 1/11/05    JK                  Added ctry defines 
-* 6/23/05    dv                  added dst_apc
-* 09/06/06   DV                  ADDED ORG_APC
-* 1/30/08    DV                  ADDED NEW_STAY
-* 3/27/13    DV                  UPDATED BAG_FEE FILE TO NEW BAG FEES
-* 5/21/13    DV                  ADDED FLIGHT_HOURS DEFINE
-* 3/3/14      DV                 ADDED LST_DATE DEFINE
-* 4/9/14     JK                  Added INT_FLAG DEFINE
-* 6/9/14     JK                  ADDED ORG_CNTRY_CODE
-* 8/27/15    JM   S-08380  Added Logic for new ticketed versus traveled report
-*02/26/16 - JEM - S-13286 Updated to allow reports to sort/subtotal by id-levels
-*04/15/16 - DLV - S-16819 Added C_ITIN RND_TRP LEVEL4 LEVEL5 LEVEL6 for
-*                         Added defines EX_IND RND_TRP for NSDCAN NSDDOM
-*07/11/16 - RSB - S-20630 - New Employee ID database field
-*                           Added EMP_ID
-*07/14/16 - RSB - S-20630 - Commented out EMP_NUM
-********************************************************************

-INCLUDE SETECHO

SET ASNAMES = ON
-SET HOLDATTR = ON;
-SET &&IDLEVELBREAK = '';


-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';

-INCLUDE IDLEVROLLDEF
-RUN

DEFINE FILE &&EXTRACT

  AIR_FLAG/A1 = IF AIRLINE CONTAINS 'AL' OR 'AA' OR 'AC' OR 'AS' OR
                                    'B6' OR 'BA' OR 'CO' OR 'DL' OR
                                    'F9' OR 'FL' OR 'HA' OR 'NK' OR 
                                    'UA' OR 'VX' OR 'WN' OR 'YX' THEN 'Y' ELSE 'N'; 

  BASE_FARE/D12.2CS = SEG_AMT - SEG_COM;
  BOOK_DT/MDYY         = RESV_DATE;
  COM_AMT/D12.2CS = SEG_COM;
  CTRY1/A2 =  EDIT(CTRY_COD, 
    '99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY2/A2 =  EDIT(CTRY_COD, 
    '$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY3/A2 =  EDIT(CTRY_COD, 
    '$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY4/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY5/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY6/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY7/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY8/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY9/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY10/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY11/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY12/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY13/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY14/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY15/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$$$$');
    CTRY16/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$$$$');
    CTRY17/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$$$$');
    CTRY18/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$$$$');
    CTRY19/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$$$$');
    CTRY20/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$$$$');
    CTRY21/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$$$$');
    CTRY22/A2 =  EDIT(CTRY_COD, 
    '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99$$$');
    CTRY23/A2 =  EDIT(CTRY_COD, 
  '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$99');
 
 GEO1/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO2/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO3/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO4/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO5/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO6/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO7/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO8/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO9/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO10/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO11/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$$$$$');
 GEO12/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$$$$$');
 GEO13/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$$$$$');
 GEO14/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$$$$$');
 GEO15/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$$$$$');
 GEO16/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$$$$$');
 GEO17/A3 =  EDIT(TKT_MAIN.GEO_ZONE, 
 '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$999$');

 
 DEPT_MONTH/MT        = DPT_DATE;
  DIR_CP_CD/A50        = CITYPAIR.EMBARK||'-'||CITYPAIR.ROUTE;
-****************************************************************************
-* 10/3/00  IBISTL-RJ    FIELD WAS BEING TRUNCATED IN FOCUS 6, NEED TO RUN A 
-*                       SUBROUTINE IN WEBFOCUS TO TRUNCATE.
  DIR_CP_NMX/A72 = '(' || CITYPAIR.EMBARK || '/' 
           || CITYPAIR.ROUTE || ') ' | 
           EMB_APT.AIRPORT_NAME ||'---' || RTE_APT.AIRPORT_NAME;
  DIR_CP_NM/A50 = SUBSTR(72,DIR_CP_NMX,1,50,50,'A50');
-*
  EGEO/A3 = EDIT(TKT_MAIN.GEO_ZONE, '999');
  EX_IND/A1 = IF EXCHG_SALE NE ' ' THEN 'E' ELSE ' ';

  FARE_PAID/D12.2CS   = SEG_AMT + SEG_TAX;
  GROSS_FARE/D12.2CS  = IF (RF_FLAG EQ ' ') AND
                           (EX_FLAG EQ ' ') THEN
                        SEG_AMT + SEG_TAX ELSE 0;
  INT_FLAG/A13 = IF AIR_MAIN.INTL_DOM EQ 'D' OR ' ' THEN 'DOMESTIC' ELSE 'INTERNATIONAL';                      
  LEVEL_DESC1/A80      = &&LDESC;
  
  MRK_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (EX_FLAG NE ' ') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (RF_FLAG NE ' ') THEN (-1) ELSE 0;                           
  ND_CITY_NM/A50= NDO_CTY.CITY_NAME | NDD_CTY.CITY_NAME;
  NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  NEW_ADV_PURCH/D9    = ADV_PURCH;
  NEW_SEG_COUNT/D8CS = SEG_COUNT;
  NEW_SEG_DISC/D12.2CS = SEG_DISC;
  NEW_SEG_MILES/D9= SEG_MILES;
  NEW_STAY/D9CS = STAY;
  NOREF_SEG_COUNT/D8CS = IF (RF_FLAG EQ ' ') AND
                            (EX_FLAG EQ ' ') THEN
                           NEW_SEG_COUNT ELSE 0;
  REF_E_CNT/D8CS      = IF (RF_FLAG NE ' ') OR
                           (EX_FLAG NE ' ') THEN
                            1 ELSE 0;  
  REF_EXCH_CNT/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 0 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  REFEXCH/D12.2CS     = IF (RF_FLAG NE ' ') THEN
                        SEG_AMT + SEG_TAX ELSE 
                        IF (EX_FLAG NE ' ') THEN
                        SEG_AMT + SEG_TAX ELSE 0;                      
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;  
  TKT_AMOUNT/D12.2CS  = TICKET_AMT + TAX_AMT;
  TKT_PURCH/D8.2CS      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 0;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TRAN_MONTH/MT        = TRN_DATE;
  XARR_DOW/W           = ARR_DATE;
  XARR_DT/MDYY         = ARR_DATE;
  XFST_DPT/MDYY = FST_DPT_DATE;

  XDPT_DOW/W           = DPT_DATE;
  XDPT_DT/MDYY         = DPT_DATE;
  XPSNGR_NM/A15        = 
    EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
  XTRAN_DT/MDYY        = TRN_DATE;


-* ****DEFINES ON PREVIOUS DEFINES****

  AIRLINE_FEE/D8.2CS = IF EMBARK EQ 'FP2' OR 'FP3' 
     THEN FARE_PAID ELSE 0;
  BAG_FEE/D12.2CS = IF SEG_COUNT NE 0 THEN MRK_TKT_CNT * 25 ELSE 0  ; 
  ARR_DAY/A3           = DECODE XARR_DOW (1 'MON' 2 'TUE' 3 'WED'
                                 4 'THU' 5 'FRI' 6 'SAT' 7 'SUN');
  DISSAVINGS/D11.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
  DPT_DAY/A3           = DECODE XDPT_DOW (1 'MON' 2 'TUE' 3 'WED'
                                 4 'THU' 5 'FRI' 6 'SAT' 7 'SUN');
                                 
  CTRY_FLAG2/A1 = IF 
    (CTRY2 CONTAINS 'GB' ) OR 
    (CTRY3 CONTAINS 'GB') OR
    (CTRY4 CONTAINS 'GB') OR
    (CTRY5 CONTAINS 'GB') OR
    (CTRY6 CONTAINS 'GB') OR
    (CTRY7 CONTAINS 'GB') OR
    (CTRY8 CONTAINS 'GB') OR 
    (CTRY9 CONTAINS 'GB') OR
    (CTRY10 CONTAINS 'GB') OR
    (CTRY11 CONTAINS 'GB') OR
    (CTRY12 CONTAINS 'GB') OR
    (CTRY13 CONTAINS 'GB') OR
    (CTRY14 CONTAINS 'GB') OR
    (CTRY15 CONTAINS 'GB') OR
    (CTRY16 CONTAINS 'GB') OR 
    (CTRY17 CONTAINS 'GB') OR
    (CTRY18 CONTAINS 'GB') OR
    (CTRY19 CONTAINS 'GB') OR
    (CTRY20 CONTAINS 'GB') OR
    (CTRY21 CONTAINS 'GB') OR
    (CTRY22 CONTAINS 'GB') OR
  (CTRY23 CONTAINS 'GB') THEN 'Y' ELSE 'N';
  
  
 CTRY_FLAG3/A1 = IF (CTRY1 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND 
  (CTRY2 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND 
  (CTRY3 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY4 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY5 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY6 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY7 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY8 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND 
  (CTRY9 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY10 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY11 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY12 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY13 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY14 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY15 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY16 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND 
  (CTRY17 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY18 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY19 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY20 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY21 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY22 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') AND
  (CTRY23 EQ 'US' OR 'CA' OR 'BS' OR 'VI' OR ' ') THEN 'Y' ELSE 'N';
                    
  GROSS_DSAVE/D12.2CS = IF (RF_FLAG EQ ' ') AND
                           (EX_FLAG EQ ' ') THEN
                           DISSAVINGS ELSE 0; 
  RND_TRP/A10 = IF TKT_MAIN.RNDT_FLAG EQ 'N' THEN 'ONE WAY' ELSE 'ROUND TRIP';               
  TRIP_KEY/A2   = EDIT(TRP_KEY, '$$$$$$$$99');
  TRIPRSN/A10 = IF TRIP_KEY NE ' ' THEN TRIP_KEY ELSE 'ZZZZZZZZZZ';
  TRIP_RSN/A10 = IF TRIPRSN EQ 'ZZZZZZZZZZ' THEN 'NONE GIVEN' ELSE TRIPRSN;
  TRP_LEN/D8CS = TRIP_LENGTH * NET_TKT_CNT;
  RND_TRP/A10 = IF TKT_MAIN.RNDT_FLAG EQ 'N' THEN 'ONE WAY' ELSE 'ROUND TRIP'; 
  CHT_LEN/D8CS = IF TRP_LEN LT 0 THEN (TRP_LEN * (-1)) ELSE TRP_LEN;
-*   TRP_FLAG/A1 = IF TRP_LEN EQ 1 TH
TMK_FLAG/A1 = IF PASSNGR_NAME CONTAINS 'GALITZINE/P' OR 'AVRIL/VICKI' OR 'BARNES/L' OR 'COBB/ADRIAN' OR
                                 'MCKEE/BRUCE' OR 'RAREY/RAY' OR 'SMOLAK/F' OR 'TREGENZA/' OR 'POPP/NOAH' OR
                                 'ROBERTS/LORI' OR 'ADHIKARI/PRASENJIT' OR 'FULLERTON/PAUL' OR 'FRUGE/BRENDAN' OR
                                 'DIEDERICH/DAVID' OR 'FISHER/DAVID' OR 'NATIONS/MICHAEL' OR 'SAZONOV/VLADIMIR' OR
                                 'CHRISTOPHER/MICHAEL' OR 'BANKER/EDWARD' OR 'JORDAN/CHAD' OR 'ENGLER/STEVEN' OR 
                                 'CAVE/CLINTON' OR 'LAWRENCE/THOMAS' OR 'BUTORIN/DMITRY' OR 'GREEN/DAVID' OR
                                 'MILLER/RAYMOND' OR 'ADAMS/GEORGE' THEN 'Y' ELSE 'N';

  FLIGHT_HOURS/D12.2 = FLIGHT_DURATION/60;
 LAST_DATE/A8YYMD = GETTOK(DEPART_DATES, 144, -1, '-', 8, LAST_DATE); 
 LDT_YY/A4 = EDIT(LAST_DATE, '9999');
 LDT_MM/A2 = EDIT(LAST_DATE, '$$$$99');
 LDT_DD/A2 = EDIT(LAST_DATE, '$$$$$$99'); 
 LST_DATE/A10 = LDT_MM || '/' || LDT_DD || '/' || LDT_YY;
-* Added for ticketed versus traveled report
TKT/A13 = AIRLINE_NUM||TKT_NUM;
-* DISTRICT/A125 = LEVEL1||LEVEL2||LEVEL3||LEVEL4||LEVEL5;
TKT_DESC/A10 = IF VOID_DATE NE 0  THEN 'Void' ELSE
               IF (((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1')) THEN 'Refund' ELSE
               IF (((EXSALE NE ' ') AND (SEG_COUNT GE 0)) OR ((EMBARK NE 'DT1') AND (EX_FLAG EQ 'F' OR 'P') AND (EX_FLAG EQ 'F' OR 'P') AND
                  (SEG_COUNT LE 0) AND (RF_FLAG EQ ' '))) THEN 'Exchange'  ELSE ' ';
-INCLUDE IDLEVDEFINE 
                  
END
-RUN

-IF &&SETF EQ 'KWTKTTVL' GOTO KIEWIT;


TABLEF FILE &&EXTRACT
PRINT 
  AGENT_NUM	
  AIR_KEY	
  AIR_MAIN.INTL_DOM	
  AIRLINE	
  AIRLINE_FEE	
  AIRLINE_NAME	
  AR_BRANCH
  AROLL_DSC5
  ARR_DAY	
  ARR_TIME
  BAG_FEE
  BASE_FARE	
  BOOK_DT	
  BR_CL_IDX
  C_ITIN
  CHT_LEN
  CITYPAIR.EMBARK      AS 'EMB_APT_CD'	
  CITYPAIR.ROUTE       AS 'RTE_APT_CD'	
  CL_CAT	
  CLASS	
  CLIENT_NAME
  CLIENT_NUM	
  COM_AMT	
  CREDIT_CARD
  CTRY_FLAG2
  DEPT_MONTH	
  DIR_CP_CD	
  DIR_CP_NM	
  DISSAVINGS	
  DOC_TYPE	
  DPT_DAY	
  DPT_TIME
  DST_APC
  DST_APCX
  EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'	
  EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'	
  EMB_CTY.COUNTRY_CODE	
  EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'
  EMBARK
  EX_IND
  EX_FLAG
  FARE_BAS	
  FARE_PAID
  FLIGHT
  FLIGHT_HOURS
  FNL_DEST_AIRPORT
  FNL_DEST_CNTY_CODE
  GROSS_DSAVE	
  GROSS_FARE	
  GROUP_CODE
  GSA_GTR	
  INT_CODE	
  INT_FLAG
  INVOICE_NUM	
  LST_DATE
  LEVEL_DESC	
  EMP_ID	
  LEVEL1
  LEVEL2	
  LEVEL3
  LEVEL4
  LEVEL5
  LEVEL6
  MRK_TKT_CNT
  ND_CITY_NM	
  NET_TKT_CNT	
  NEW_ADV_PURCH	
  NEW_SEG_COUNT	
  NEW_SEG_DISC	
  NEW_SEG_MILES
  NEW_STAY
  NOREF_SEG_COUNT
  ORG_APCX
  ORG_APC
  PASSNGR_NAME	
  PNR_LOCATOR	
  REF_E_CNT	
  REF_EXCH_CNT	
  REFEXCH	
  REFUSAL_DESC	
  REFUSE_CODE	
  REFUSE_KEY 
  RF_FLAG
  RND_TRP           
  RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'	
  RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'	
  RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'
  RTE_CTY.STATE_CODE   AS 'RTE_STATE'
  RTE_CTY.COUNTRY_CODE AS 'RTE_CNTRY_CODE'
  SAVINGS	
  SEG_AMT
  SEG_COUNT
  SEG_DESIG	
  SEG_DISCOUNT	
  SEG_LOWEST	
  SEG_MILES	
  SEG_NBR	
  SEG_STANDARD	
  SEG_TAX	
  STAY	
  TICKET_BRANCH	
  TKT
  TKT_AMOUNT	
  TKT_NUM	
  TKT_PURCH	
  TKT_SORT	
  TKT_TYPE	
  TOUR_CODE	
  TRAN_MONTH	
  TRIP_LENGTH
  TRIP_RSN
  TRN_DATE
  TRP_REF.TRP_DESC 
  TRP_LEN	
  VAL_AIRLINE	
  VOID_DATE	
  XARR_DT	
  XDPT_DT
  XFST_DPT
  XPSNGR_NM	
  XTRAN_DT
  TKT_DESC

-INCLUDE &AIRDATES

WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10


-INCLUDE RPTPARMS

ON TABLE HOLD AS &&RPT_HOLD

END
-RUN

-IF &LINES EQ 0 THEN GOTO QUITIT ELSE GOTO CONTIT;

-QUITIT
-*-QUIT

-CONTIT
-GOTO XXIT;


-KIEWIT;


TABLE FILE &&EXTRACT
PRINT 
  AGENT_NUM	
  AIR_KEY	
  AIR_MAIN.INTL_DOM	
  AIRLINE	
  AIRLINE_FEE	
  AIRLINE_NAME	
  AR_BRANCH
  AROLL_DSC5
  ARR_DAY	
  ARR_TIME
  BAG_FEE
  BASE_FARE	
  BOOK_DT	
  BR_CL_IDX
  CHT_LEN
  C_ITIN
  CITYPAIR.EMBARK      AS 'EMB_APT_CD'	
  CITYPAIR.ROUTE       AS 'RTE_APT_CD'	
  CL_CAT	
  CLASS	
  CLIENT_NAME
  CLIENT_NUM	
  COM_AMT	
  CREDIT_CARD
  CTRY_FLAG2
  DEPT_MONTH	
  DIR_CP_CD	
  DIR_CP_NM
-*   DISTRICT
  DISSAVINGS	
  DOC_TYPE	
  DPT_DAY	
  DPT_TIME
  DST_APC
  DST_APCX
  EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'	
  EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'	
  EMB_CTY.COUNTRY_CODE	
  EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'	
  EX_IND
  EX_FLAG
  FARE_BAS	
  FARE_PAID
  FLIGHT
  FLIGHT_HOURS
  FNL_DEST_AIRPORT
  FNL_DEST_CNTY_CODE
  GROSS_DSAVE	
  GROSS_FARE	
  GROUP_CODE
  GSA_GTR	
  INT_CODE	
  INT_FLAG
  INVOICE_NUM	
  LST_DATE
  LEVEL_DESC
  EMP_ID
  LEVEL1
 -* LEVEL2 AS 'EMP_NUM'	
  LEVEL2	
  LEVEL3
  LEVEL4
  AROLL_DSC5 AS 'DISTRICT'
  LEVEL5
  
  MRK_TKT_CNT
  ND_CITY_NM	
  NET_TKT_CNT	
  NEW_ADV_PURCH	
  NEW_SEG_COUNT	
  NEW_SEG_DISC	
  NEW_SEG_MILES
  NEW_STAY
  NOREF_SEG_COUNT
  ORG_APCX
  ORG_APC
  PASSNGR_NAME	
  PNR_LOCATOR	
  REF_E_CNT	
  REF_EXCH_CNT	
  REFEXCH	
  REFUSAL_DESC	
  REFUSE_CODE	
  REFUSE_KEY 
  RF_FLAG
  RND_TRP
  RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'	
  RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'	
  RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'
  RTE_CTY.STATE_CODE   AS 'RTE_STATE'
  RTE_CTY.COUNTRY_CODE AS 'RTE_CNTRY_CODE'
  SAVINGS	
  SEG_AMT
  SEG_COUNT
  SEG_DESIG	
  SEG_DISCOUNT	
  SEG_LOWEST	
  SEG_MILES	
  SEG_NBR	
  SEG_STANDARD	
  SEG_TAX	
  STAY	
  TICKET_BRANCH	
  TKT
  TKT_AMOUNT	
  TKT_NUM	
  TKT_PURCH	
  TKT_SORT	
  TKT_TYPE	
  TOUR_CODE	
  TRAN_MONTH	
  TRIP_LENGTH
  TRIP_RSN
  TRN_DATE
  TRP_REF.TRP_DESC 
  TRP_LEN	
  VAL_AIRLINE	
  VOID_DATE	
  XARR_DT	
  XDPT_DT
  XFST_DPT
  XPSNGR_NM	
  XTRAN_DT	
  TKT_DESC
BY TKT
-INCLUDE &AIRDATES

-* WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10


-INCLUDE RPTPARMS
ON TABLE HOLD AS HOLD1 
END
-RUN


TABLE FILE TKT_PURCHASE_FNL
PRINT STATUS
BY TKT_NUM AS 'TKT'
WHERE '&&ROLLUP' EQ ROLLUP_CODE
ON TABLE HOLD AS TPFNL1 FORMAT FOCUS INDEX TKT
END


JOIN TKT IN HOLD1 TO TKT IN TPFNL1 AS JTP1
-RUN


DEFINE FILE HOLD1
STATUS1/A7 = IF STATUS EQ '' THEN 'UNKNOWN' ELSE 
             IF STATUS EQ 'UNKW' THEN 'UNKNOWN' ELSE STATUS;
TNET_TKT/P12CS = IF STATUS1 EQ 'OPEN' OR 'USED' THEN NET_TKT_CNT ELSE 0;
PNET_TKT/P12CS = IF STATUS1 NE 'OPEN' OR 'USED' THEN NET_TKT_CNT ELSE 0;
TTRP_LEN/P12CS = IF STATUS1 EQ 'OPEN' OR 'USED' THEN TRP_LEN ELSE 0;
PTRP_LEN/P12CS = IF STATUS1 NE 'OPEN' OR 'USED' THEN TRP_LEN ELSE 0;
END
TABLE FILE HOLD1
PRINT 
  AGENT_NUM	
  AIR_KEY	
  INTL_DOM	
  AIRLINE	
  AIRLINE_FEE	
  AIRLINE_NAME	
  AR_BRANCH
  AROLL_DSC5
  ARR_DAY	
  ARR_TIME
  BAG_FEE
  BASE_FARE	
  BOOK_DT	
  BR_CL_IDX	
  CHT_LEN
  C_ITIN
  EMB_APT_CD
  EX_FLAG
  RTE_APT_CD
  CL_CAT	
  CLASS	
  CLIENT_NAME
  CLIENT_NUM	
  COM_AMT	
  CREDIT_CARD
  CTRY_FLAG2
  DEPT_MONTH	
  DIR_CP_CD	
  DIR_CP_NM
  DISTRICT
  DISSAVINGS	
  DOC_TYPE	
  DPT_DAY	
  DPT_TIME
  DST_APC
  DST_APCX
  EMB_APT_NM
  EMB_CTY_NM
  EX_IND
  COUNTRY_CODE	
  EMB_CTY_CD
  FARE_BAS	
  FARE_PAID
  FLIGHT
  FLIGHT_HOURS
  FNL_DEST_AIRPORT
  FNL_DEST_CNTY_CODE
  GROSS_DSAVE	
  GROSS_FARE	
  GROUP_CODE
  GSA_GTR	
  INT_CODE	
  INT_FLAG
  INVOICE_NUM	
  LST_DATE
  LEVEL_DESC	
  EMP_ID
  LEVEL1
  LEVEL2
-*  LEVEL2 AS 'EMP_NUM'
  LEVEL3
  LEVEL4
  LEVEL5
  MRK_TKT_CNT
  ND_CITY_NM	
  NET_TKT_CNT	
  NEW_ADV_PURCH	
  NEW_SEG_COUNT	
  NEW_SEG_DISC	
  NEW_SEG_MILES
  NEW_STAY
  NOREF_SEG_COUNT
  ORG_APCX
  ORG_APC
  PASSNGR_NAME	
  PNR_LOCATOR	
  REF_E_CNT	
  REF_EXCH_CNT	
  REFEXCH	
  REFUSAL_DESC	
  REFUSE_CODE	
  REFUSE_KEY 
  RF_FLAG
  RND_TRP
  RTE_APT_NM
  RTE_CTY_NM
  RTE_CTY_CD
  RTE_STATE
  RTE_CNTRY_CODE
  SAVINGS	
  SEG_AMT
  SEG_COUNT
  SEG_DESIG	
  SEG_DISCOUNT	
  SEG_LOWEST	
  SEG_MILES	
  SEG_NBR	
  SEG_STANDARD	
  SEG_TAX	
  STAY	
  TICKET_BRANCH	
  TKT
  TKT_AMOUNT	
  TKT_NUM	
  TKT_PURCH	
  TKT_SORT	
  TKT_TYPE	
  TOUR_CODE	
  TRAN_MONTH	
  TRIP_LENGTH
  TRIP_RSN
  TRN_DATE
  TRP_DESC 
  TRP_LEN	
  VAL_AIRLINE	
  VOID_DATE	
  XARR_DT	
  XDPT_DT
  XFST_DPT
  XPSNGR_NM	
  XTRAN_DT
  STATUS
  STATUS1
-*  EMP_NUM
  DISTRICT
  PTRP_LEN
  PNET_TKT
  TTRP_LEN
  TNET_TKT
  TKT_DESC
BY LEVEL_DESC
ON TABLE HOLD AS &&RPT_HOLD
END
-RUN


-GOTO XXIT;




-*-EXIT
-XXIT; 
 