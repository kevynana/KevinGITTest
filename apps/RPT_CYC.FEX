-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**

-* File RPT_CYC.FEX
-*
-*****   This routine allows the selection of Report Sets for scheduling
-*****     execution, or identifying a single Report Instance for 
-*****     immediate execution.
-*****   AUTHOR:  Dave Kuzanek
-*****   PRODUCTION DATE: 

MAINTAIN FILE control AND rollup AND rpt_inst AND rpt_set AND instpass
         AND I_SUMM
COMPUTE Inst_Parm/A72 = ;
COMPUTE Stream_Parm/A8 = ;
COMPUTE SetFile_Parm/A8 = ;
COMPUTE INSID_PARM/A22=;
COMPUTE SSR_PARM/A1=;
COMPUTE SCREEN/A1=;
COMPUTE Cnt1/I4 = ;
COMPUTE Cnt2/I4 = ;
COMPUTE Cnt3/I4 = ;
COMPUTE PCnt/I4 = ;
COMPUTE Confirm_Code/A1 = ;
COMPUTE Freq_Stack.Set_Freq/A10 = ;
COMPUTE Freq_Hold/A10 = ;
COMPUTE Set_Stack.Set_Type/A7 = ;
COMPUTE Name_Hold/A25 =;
COMPUTE Kancel/A1 = ;

COMPUTE Set_Stack(1).Set_Type = 'CURRENT';
COMPUTE Set_Stack(2).Set_Type = 'ALL';
COMPUTE Freq_Stack(1).Set_Freq = 'ALL';
COMPUTE Freq_Stack(2).Set_Freq = 'ANNUAL';
COMPUTE Freq_Stack(3).Set_Freq = 'SEMIANNUAL';
COMPUTE Freq_Stack(4).Set_Freq = 'QUARTERLY';
COMPUTE Freq_Stack(5).Set_Freq = 'MONTHLY';
COMPUTE Freq_Stack(6).Set_Freq = 'WEEKLY';
COMPUTE Freq_Stack(7).Set_Freq = 'DAILY';
COMPUTE Freq_Stack(8).Set_Freq = 'NONE';

INFER RPT_SET INTO RS_Temp
INFER RPT_INST INTO RI_Temp

REPOSITION CONTROL.CONTROL_ID
FOR ALL NEXT CONTROL.CONTROL_ID INTO Cntl_Stack
IF Cntl_Stack(1).ROLLUP_CODE EQ 'TRACKER1' THEN
  BEGIN
    TYPE " Please select a Rollup before using this function "
    GOTO END RESET
  ENDBEGIN
REPOSITION ROLLUP.ROLLUP_CODE
NEXT ROLLUP.ROLLUP_CODE INTO Roll_Stack
  WHERE ROLLUP.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
REPOSITION RPT_SET.SET_KEY
FOR ALL NEXT RPT_SET.SET_KEY INTO RS_Stack
  WHERE RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF RS_Stack.FocCount EQ 0 THEN
  BEGIN
    TYPE " There are no Report Sets established for this Rollup "
    GOTO END RESET
  ENDBEGIN
COMPUTE Name_Hold = Roll_Stack.Roll_Name;

perform Winform_RptCycle
GOTO END RESET

case Pop_Set_List
Reposition RPT_SET.SET_KEY
STACK CLEAR RS_Stack
IF Set_Stack.FocIndex = 1 
  THEN PERFORM Pop_Curr_Sets
  ELSE PERFORM Pop_All_Sets
endcase

CASE Pop_Curr_Sets
COMPUTE Roll_Stack.Roll_Name = Name_Hold;
IF Freq_Stack.FocIndex = 1 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF Freq_Stack.FocIndex = 2 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'ANNUAL' AND
      RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF Freq_Stack.FocIndex = 3 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'SEMIANNUAL' AND
      RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF Freq_Stack.FocIndex = 4 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'QUARTERLY' AND
      RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF Freq_Stack.FocIndex = 5 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'MONTHLY' AND
      RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF Freq_Stack.FocIndex = 6 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'WEEKLY' AND
      RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF Freq_Stack.FocIndex = 7 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'DAILY' AND
      RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
IF Freq_Stack.FocIndex = 8 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'NONE' AND
      RPT_SET.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE
endcase

CASE Pop_All_Sets
COMPUTE Roll_Stack.Roll_Name = ' ';
IF Freq_Stack.FocIndex = 1 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
IF Freq_Stack.FocIndex = 2 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'ANNUAL' 
IF Freq_Stack.FocIndex = 3 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'SEMIANNUAL' 
IF Freq_Stack.FocIndex = 4 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'QUARTERLY' 
IF Freq_Stack.FocIndex = 5 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'MONTHLY' 
IF Freq_Stack.FocIndex = 6 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'WEEKLY' 
IF Freq_Stack.FocIndex = 7 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'DAILY' 
IF Freq_Stack.FocIndex = 8 THEN
  For ALL Next RPT_SET.SET_KEY Into RS_Stack 
    WHERE RPT_SET.SET_FREQ EQ 'NONE' 
endcase

case Disp_Inst
  REPOSITION I_SUMM.INST_KEY
  STACK CLEAR IS_Stack
  FOR ALL NEXT I_SUMM.INST_KEY Into IS_Stack 
    WHERE I_SUMM.INST_KEY EQ RS_Stack(RS_Stack.FocIndex).SET_ID

  REPOSITION RPT_INST.INST_KEY
  STACK CLEAR RI_Stack
  FOR ALL NEXT RPT_INST.INST_KEY Into RI_Stack 
    WHERE RPT_INST.SET_KEY EQ RS_Stack(RS_Stack.FocIndex).SET_KEY
  IF RI_Stack.FocCount GT 0 THEN
  BEGIN
    REPOSITION ROLLUP.ROLLUP_CODE
    NEXT ROLLUP.ROLLUP_CODE INTO Roll_Stack
      WHERE ROLLUP.ROLLUP_CODE EQ RS_Stack(RS_Stack.FocIndex).ROLLUP_CODE
    WINFORM SHOW InstList
    IF Set_Stack.FocIndex EQ 1 
      THEN COMPUTE Roll_Stack.Roll_Name = Name_Hold;
      ELSE COMPUTE Roll_Stack.Roll_Name = ' ';
  ENDBEGIN
  ELSE TYPE " No Instances exist within this Report Set "
endcase

CASE Get_Dates
  WINFORM SHOW DTRange
ENDCASE

case Update_Set_Inst
  COMPUTE Kancel = 'N';
  PERFORM Get_Dates
  IF Kancel EQ 'Y' THEN GOTO ENDCASE
  COMPUTE Cnt2 = 1;
  REPEAT WHILE Cnt2 LE RS_Stack.FocCount
    REPOSITION RPT_INST.INST_KEY
    STACK CLEAR RI_Stack
    FOR ALL NEXT RPT_INST.INST_KEY Into RI_Stack 
      WHERE RPT_INST.SET_KEY EQ RS_Stack(Cnt2).SET_KEY
    COMPUTE Cnt1 = 1;
    REPEAT WHILE Cnt1 LE RI_Stack.FocCount
      COMPUTE RI_Stack(Cnt1).FM_DATE = RI_Temp.FM_DATE;
      COMPUTE RI_Stack(Cnt1).TO_DATE = RI_Temp.TO_DATE;
      COMPUTE RI_Stack(Cnt1).EXECUTE_FLAG = 'Y';
      COMPUTE Cnt1 = Cnt1 + 1;
    ENDREPEAT
    FOR ALL UPDATE RPT_INST.FM_DATE RPT_INST.TO_DATE 
      RPT_INST.EXECUTE_FLAG FROM RI_Stack
    COMMIT
    COMPUTE Cnt2 = Cnt2 + 1;
  ENDREPEAT
endcase

case Update_Inst
  COMPUTE Kancel = 'N';
  PERFORM Get_Dates
  IF Kancel EQ 'Y' THEN GOTO ENDCASE
  COMPUTE RI_Stack(RI_Stack.FocIndex).FM_DATE = RI_Temp.FM_DATE;
  COMPUTE RI_Stack(RI_Stack.FocIndex).TO_DATE = RI_Temp.TO_DATE;
  COMPUTE RI_Stack(RI_Stack.FocIndex).EXECUTE_FLAG = 'Y';
  UPDATE RPT_INST.FM_DATE RPT_INST.TO_DATE RPT_INST.EXECUTE_FLAG 
    FROM RI_Stack(RI_Stack.FocIndex)
  COMMIT
endcase

case Run_Now
  COMPUTE Kancel = 'N';
  PERFORM Get_Dates
  IF Kancel EQ 'Y' THEN GOTO ENDCASE
  COMPUTE RI_Stack(RI_Stack.FocIndex).FM_DATE = RI_Temp.FM_DATE;
  COMPUTE RI_Stack(RI_Stack.FocIndex).TO_DATE = RI_Temp.TO_DATE;
  COMPUTE RI_Stack(RI_Stack.FocIndex).EXECUTE_FLAG = 'Y';
  UPDATE RPT_INST.FM_DATE RPT_INST.TO_DATE RPT_INST.EXECUTE_FLAG 
    FROM RI_Stack(RI_Stack.FocIndex)
  COMMIT
  COMPUTE Inst_Parm = RI_Stack(RI_Stack.FocIndex).INST_KEY;
  COMPUTE Stream_Parm = RI_Stack(RI_Stack.FocIndex).RPT_STREAM;
  COMPUTE SetFile_Parm = RI_Stack(RI_Stack.FocIndex).GLOBAL_PARM;
  COMPUTE Insid_Parm = RI_Stack(RI_Stack.FocIndex).Instance_ID;
  COMPUTE Ssr_Parm = IS_Stack(IS_Stack.FocIndex).SCREEN;
  TYPE ON INSTPASS "<Stream_Parm <9 <SetFile_Parm <17 <Inst_Parm 
                    <90 <Insid_Parm 113 <Ssr_Parm "
  WINFORM CLOSE_ALL
  GOTO END RESET
endcase

case Reset_Pass
  COMPUTE Inst_Parm = 'NONE';
  COMPUTE Stream_Parm = 'xxxxxxxx';
  TYPE ON INSTPASS "<Stream_Parm <9 <Inst_Parm <81 <Instid_PARM
                    <105 SSR_PARM "
  WINFORM CLOSE
  GOTO END RESET
endcase

case Push_Kancel
  COMPUTE Kancel = 'Y';
  WINFORM CLOSE
endcase

-* >> Generated Code Section. Do not edit/add/delete this or following lines

case Winform_RptCycle
   Winform show RptCycle
endcase

case Winform_DTRange
   Winform show DTRange
endcase

case Winform_InstList
   Winform show InstList
endcase

END
