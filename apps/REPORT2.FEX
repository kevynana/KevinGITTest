SET ASNAMES=ON
TABLE FILE TEST1
SUM BASE_FARE 		AS 'TBASE'
    DISSAVINGS 		AS 'DTSAVE'
    TKT_AMOUNT 		AS 'TAMT'
    SEG_COM 		AS 'TSCOM'
    SEG_DISCOUNT 	AS 'TDISC'
    FARE_PAID 		AS 'TFARE'
    SEG_LOWEST 		AS 'TLOW'
    NEW_SEG_MILES 	AS 'TMILE'
    TKT_PURCH 		AS 'TPURCH'
    REF_EXCH_CNT 	AS 'TRFEX'
    SAVINGS 		AS 'TSAVE'
    SEG_AMT 		AS 'TSEG'
    SEG_STANDARD 	AS 'TSTD'
    SEG_TAX 		AS 'TTAX'
    NET_TKT_CNT 	AS 'TTKT'
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
ON TABLE HOLD AS AIRHOLD1 FORMAT FOCUS
END
-RUN

TABLE FILE TEST1
PRINT AIR_KEY
      AIRLINE
      AIRLINE_FEE
      AIRLINE_NAME
      ARR_DAY
      ARR_TIME
      BASE_FARE
      BOOK_DT
      BR_CL_IDX
      CARD_NUM1
      CCARD6
      CL_CAT
      CLASS
      CLASS_CAT
      CLIENT_NAME
      CLIENT_NUM
      CREDIT_CARD
      DEPT_MONTH
      DEPT_YEAR
      DIR_CP_CD
      DISSAVINGS
      DOD_PAX_CAT
      DPT_DAY
      DPT_TIME
      EMB_APT_CD
      EMB_APT_NM
      EMB_CNTRY_CODE
      EMB_CTY_NM
      EMB_STATE
      FARE_BAS
      FARE_PAID
      FLIGHT
      FLVL1
      GROUP_CODE
      IBOOK
      INT_CODE
      INTL_DOM
      INVOICE_NUM
      LEVEL1
      LEVEL2
      LEVEL3
      MIR_TYPE
      MRK_TKT_CNT
      MTG_NUM
      ND_CITY_NM
      NEW_ADV_PURCH
      NEW_SEG_AMT
      NEW_SEG_COUNT
      NEW_SEG_MILES
      ORG_DST
      PASSNGR_NAME
      PNR_LOCATOR
      REF_EXCH_CNT
      REFUSAL_DESC
      REFUSE_CODE
      RTE_APT_CD
      RTE_APT_NM
      RTE_CNTRY_CODE
      RTE_CTY_NM
      SAVINGS
      SEG_COUNT
      SEG_DESIG
      SEG_DISCOUNT
      SEG_LOWEST
      SEG_MILES
      SEG_STANDARD
      SIBOOK_CNT
      STAY
      TICKET_BRANCH
      TKT_AMOUNT
      TKT_DATE
      TKT_NUM
      TKT_TYPE
      TOUR_CODE
      TRAN_MY
      TRIP_LENGTH
      TRIPS
      TRIP_PURPOSE
      UPCCR
      UPCOSTC
      VAL_AIRLINE
      VALUA
      XARR_DT
      XDPT_DT
      XDPT_DATE
      XTKT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD AS XTWO FORMAT FOCUS
END
-RUN

-HELLO
MAINTAIN FILE AIRHOLD1 AND XTWO AND XHOLD
CASE TOP
  INFER AIRHOLD1.AIR_KEY  	INTO STACK1 ;
  INFER XTWO.AIR_KEY 		INTO STACK2 ;
  INFER XHOLD.AIR_KEY       INTO STACK3 ;

  FOR ALL NEXT AIRHOLD1.AIR_KEY 	INTO STACK1 ;
  FOR ALL NEXT XTWO.AIR_KEY		 	INTO STACK2 ;
  FOR ALL NEXT XHOLD.AIR_KEY	 	INTO STACK3 ;

  FOR ALL INCLUDE XHOLD.AIR_KEY 	FROM STACK1 ;
  FOR ALL INCLUDE XHOLD.AIR_KEY 	FROM STACK2 ;
  FOR ALL INCLUDE XHOLD.AIR_KEY 	FROM STACK3 ;
ENDCASE
END
-EXIT

MATCH FILE XTWO
PRINT AIR_KEY
      AIRLINE
      AIRLINE_FEE
      AIRLINE_NAME
      ARR_DAY
      ARR_TIME
      BASE_FARE
      BOOK_DT
      BR_CL_IDX
      CARD_NUM1
      CCARD6
      CL_CAT
      CLASS
      CLASS_CAT
      CLIENT_NAME
      CLIENT_NUM
      CREDIT_CARD
      DEPT_MONTH
      DEPT_YEAR
      DIR_CP_CD
      DISSAVINGS
      DOD_PAX_CAT
      DPT_DAY
      DPT_TIME
      EMB_APT_CD
      EMB_APT_NM
      EMB_CNTRY_CODE
      EMB_CTY_NM
      EMB_STATE
      FARE_BAS
      FARE_PAID
      FLIGHT
      FLVL1
      GROUP_CODE
      IBOOK
      INT_CODE
      INTL_DOM
      INVOICE_NUM
      LEVEL1
      LEVEL2
      LEVEL3
      MIR_TYPE
      MRK_TKT_CNT
      MTG_NUM
      NEW_ADV_PURCH
      NEW_SEG_AMT
      NEW_SEG_COUNT
      NEW_SEG_MILES
      ND_CITY_NM
      ORG_DST
      PASSNGR_NAME
      PNR_LOCATOR
      REF_EXCH_CNT
      REFUSAL_DESC
      REFUSE_CODE
      RTE_APT_CD
      RTE_APT_NM
      RTE_CNTRY_CODE
      RTE_CTY_NM
      SAVINGS
      SEG_COUNT
      SEG_DESIG
      SEG_DISCOUNT
      SEG_LOWEST
      SEG_MILES
      SEG_STANDARD
      SIBOOK_CNT
      STAY
      TICKET_BRANCH
      TKT_AMOUNT
      TKT_DATE
      TKT_NUM
      TKT_TYPE
      TOUR_CODE
      TRAN_MY
      TRIP_LENGTH
      TRIPS
      TRIP_PURPOSE
      UPCCR
      UPCOSTC
      VAL_AIRLINE
      VALUA
      XARR_DT
      XDPT_DT
      XDPT_DATE
      XTKT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD
RUN
FILE AIRHOLD1
PRINT DTSAVE
      TAMT
      TBASE
      TDISC
      TFARE
      TLOW
      TMILE
      TPURCH
      TRFEX
      TSAVE
      TSCOM
      TSEG
      TSTD
      TTAX
      TTKT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
AFTER MATCH HOLD AS AIRHOLD2 OLD-OR-NEW
END
-RUN

TABLE FILE AIRHOLD2
PRINT AIR_KEY
      AIRLINE
      AIRLINE_FEE
      AIRLINE_NAME
      ARR_DAY
      ARR_TIME
      BASE_FARE
      BOOK_DT
      BR_CL_IDX
      CARD_NUM1
      CCARD6
      CL_CAT
      CLASS
      CLASS_CAT
      CLIENT_NAME
      CLIENT_NUM
      CREDIT_CARD
      DEPT_MONTH
      DEPT_YEAR
      DIR_CP_CD
      DISSAVINGS
      DOD_PAX_CAT
      DPT_DAY
      DPT_TIME
      DTSAVE
      EMB_APT_CD
      EMB_APT_NM
      EMB_CNTRY_CODE
      EMB_CTY_NM
      EMB_STATE
      FARE_BAS
      FARE_PAID
      FLIGHT
      FLVL1
      GROUP_CODE
      IBOOK
      INT_CODE
      INTL_DOM
      INVOICE_NUM
      LEVEL_DESC
      LEVEL1
      LEVEL2
      LEVEL3
      MIR_TYPE
      MRK_TKT_CNT
      MTG_NUM
      NEW_ADV_PURCH
      NEW_SEG_AMT
      NEW_SEG_COUNT
      NEW_SEG_MILES
      ND_CITY_NM
      ORG_DST
      PASSNGR_NAME
      PNR_LOCATOR
      REF_EXCH_CNT
      REFUSAL_DESC
      REFUSE_CODE
      RTE_APT_CD
      RTE_APT_NM
      RTE_CNTRY_CODE
      RTE_CTY_NM
      SAVINGS
      SEG_COUNT
      SEG_DESIG
      SEG_DISCOUNT
      SEG_LOWEST
      SEG_MILES
      SEG_STANDARD
      SIBOOK_CNT
      STAY
      TAMT
      TBASE
      TDISC
      TFARE
      TICKET_BRANCH
      TKT_AMOUNT
      TKT_DATE
      TKT_NUM
      TKT_TYPE
      TLOW
      TMILE
      TOUR_CODE
      TPURCH
      TRAN_MY
      TRFEX
      TRIP_LENGTH
      TRIPS
      TRIP_PURPOSE
      TRN_DATE
      TSAVE
      TSCOM
      TSEG
      TSTD
      TTAX
      TTKT
      UPCCR
      UPCOSTC
      VAL_AIRLINE
      VALUA
      XARR_DT
      XDPT_DT
      XDPT_DATE
      XPSNGR_NM
      XTKT_DT
      XTRAN_DT
BY TKT_SORT
BY SEG_NBR
ON TABLE HOLD AS AIRHOLD3
END
-RUN
-NOW
DEFINE FILE AIRHOLD3
NEWTIME/I4 = EDIT(DPT_TIME);
STDTIME/I4 = IF NEWTIME LT 1259 THEN NEWTIME
ELSE (NEWTIME-1200);

HOURPART/A2 = EDIT(STDTIME,  '99$$');
MINPART/A2 = EDIT(STDTIME, '$$99');
STD1/A3 = ' am';
STD2/A3 = ' pm';
STD/A3 = IF NEWTIME GT 1200 THEN STD2 ELSE STD1;
HOUR2/A1 = EDIT(HOURPART, '9');
HOUR3/A2 = EDIT(HOURPART, '99');
HOUR4/A1 = ' ';
HOUR5/A1 = EDIT(HOURPART, '$9');

NEWCODE/A8 = IF STDTIME LT 1000 THEN HOUR4 | HOUR5 || ':' || MINPART || STD
ELSE HOUR3 || ':' || MINPART || STD;

TIME_DPT/A8 = IF DPT_TIME EQ ' ' THEN ' '
ELSE NEWCODE;
-*****************************************************************************
-**    				TIME_ARR 				   ***
-*****************************************************************************

NEWTIME1/I4 = EDIT(ARR_TIME);

STDTIME1/I4 = IF NEWTIME1 LT 1259 THEN NEWTIME1
ELSE (NEWTIME1-1200);

HOURPART1/A2 = EDIT(STDTIME1,  '99$$');
MINPART1/A2 = EDIT(STDTIME1, '$$99');
STD3/A3 = ' am';
STD4/A3 = ' pm';
STD5/A3 = IF NEWTIME1 GT 1200 THEN STD4 ELSE STD3;
HOUR6/A1 = EDIT(HOURPART1, '9');
HOUR7/A2 = EDIT(HOURPART1, '99');
HOUR8/A1 = ' ';
HOUR9/A1 = EDIT(HOURPART1, '$9');

NEWCODE1/A8 = IF STDTIME1 LT 1000 THEN HOUR8 | HOUR9 || ':' || MINPART1 || STD5
ELSE HOUR7 || ':' || MINPART1 || STD5;

TIME_ARR/A8 = IF ARR_TIME EQ ' ' THEN ' '
ELSE NEWCODE1;

CONV_AMT/D9.2CS = IF TKT_SORT NE LAST TKT_SORT THEN TDISC ELSE 0;
CPMILE/D12.2CS = FARE_PAID/SEG_MILES;
DPT_DTE/MDYY = IF TKT_NUM NE LAST TKT_NUM THEN XDPT_DATE ELSE ' ';
XCPMILE/D12.2CS = IF TKT_NUM NE LAST TKT_NUM THEN (FARE_PAID/SEG_MILES)
                  ELSE 0;
XINV_NUM/A7 = IF TKT_NUM NE LAST TKT_NUM THEN INVOICE_NUM ELSE ' ';
EMB_CTY/A15 = EDIT(EMB_CTY_NM, '999999999999999$$$$$$$$$$');
RTE_CTY/A15 = EDIT(RTE_CTY_NM, '999999999999999$$$$$$$$$$');
INT_CODEX/A36 = IF TKT_NUM NE LAST TKT_NUM THEN INT_CODE ELSE ' ';
LEV_1/A15 = IF TKT_NUM NE LAST TKT_NUM THEN LEVEL1 ELSE ' ';
LEV_2/A15 = IF TKT_NUM NE LAST TKT_NUM THEN LEVEL2 ELSE ' ';
LEV_3/A15 = IF TKT_NUM NE LAST TKT_NUM THEN LEVEL3 ELSE ' ';
LOST_SAV_AMT/D9.2CS = IF TKT_SORT NE LAST TKT_SORT THEN DTSAVE ELSE 0;
LOW_AMT/D10.2CS = IF TKT_SORT NE LAST TKT_SORT THEN TLOW ELSE 0;
MRK_CNT/D8CS = IF TKT_NUM NE LAST TKT_NUM THEN MRK_TKT_CNT ELSE 0;
NET_TKT_CNT/D9S = IF (SEG_NBR EQ 1) THEN  TTKT ELSE 0;
PASNGR_NAME/A15 = IF TKT_NUM NE LAST TKT_NUM THEN XPSNGR_NM ELSE ' ';
REASON_CD/A2 =  IF TKT_NUM NE LAST TKT_NUM THEN REFUSE_CODE ELSE ' ';
RREFUSE_CODE/A2 = IF TKT_SORT NE LAST TKT_SORT THEN REFUSE_CODE ELSE ' ';
XREFUSAL_DESC/A40 = IF TKT_SORT NE LAST TKT_SORT THEN REFUSAL_DESC ELSE ' ';
SEG_AMT/D9.2CS = IF TKT_SORT NE LAST TKT_SORT THEN TSEG ELSE 0;
SEG_TAX/D9.2CS = IF TKT_SORT NE LAST TKT_SORT THEN TTAX ELSE 0;
STD_FARE/D12.2CS = IF TKT_SORT NE LAST TKT_SORT THEN TSTD ELSE 0;
TICKET_NMBR/A10 = IF TKT_NUM NE LAST TKT_NUM THEN TKT_NUM ELSE ' ';
TOTAL_MILES/D8CS = IF TKT_SORT NE LAST TKT_SORT THEN TMILE ELSE 0;
XBOOK_DT/MDYY = IF TKT_NUM NE LAST TKT_NUM THEN BOOK_DT ELSE 0;
XMTG_NUM/A7 = IF TKT_NUM NE LAST TKT_NUM THEN MTG_NUM ELSE ' ';
XT_DTE/A8 = EDIT(TRN_DATE);
XTKT_SRT/A10 = EDIT(TKT_SORT,'9999999999$');
XTRAN_DTE/MDYY = IF TKT_NUM NE LAST TKT_NUM THEN XTRAN_DT ELSE 0;
PNR_LOC/A6 = IF TKT_NUM NE LAST TKT_NUM THEN PNR_LOCATOR ELSE ' ';
-******************************************************************
-*  9/21/00  IBISTL-RJ    DEFINED AS AN 'A2', SHOULD BE 'A3'
XVAL_ALN/A3 = IF TKT_NUM NE LAST TKT_NUM THEN VAL_AIRLINE ELSE ' ';
TRAN_MONTH/MT = TRN_DATE;


-* ****DEFINES ON PREVIOUS DEFINES****
SRT_DT/A100 = TKT_SORT||XT_DTE||LEVEL_DESC||XPSNGR_NM;
FARE_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TFARE ELSE 0;
BASE_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TBASE ELSE 0;
COM_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TSCOM ELSE 0;
FARE/D12.2CS = IF (EMB_APT_CD EQ 'FP2' OR 'EX1' OR 'RF1') THEN 0
ELSE FARE_AMT;
MILES/D8CS = IF (EMB_APT_CD EQ 'FP2' OR 'EX1' OR 'RF1') THEN 0
  ELSE IF (TKT_TYPE EQ 'P-RF' OR 'P-EX') THEN 0
  ELSE IF (SEG_NBR EQ 0) THEN 0
  ELSE IF (TKT_SORT NE LAST TKT_SORT) AND (FARE_AMT GT 0) THEN TMILE
  ELSE IF (TKT_SORT NE LAST TKT_SORT) AND (FARE_AMT LT 0)
  THEN TMILE * (-1) ELSE 0;
AMILES/D12.2CS = IF MILES EQ 0 THEN 0 ELSE FARE_AMT;
RADV_PURCH/I8CS = IF (EMB_APT_CD EQ 'FP2' OR 'EX1' OR 'RF1') THEN 0
  ELSE IF (TKT_TYPE EQ 'P-RF' OR 'P-EX') THEN 0
  ELSE IF (SEG_NBR EQ 0) THEN 0
  ELSE IF (TKT_SORT NE LAST TKT_SORT) AND (FARE_AMT GT 0) THEN NEW_ADV_PURCH
  ELSE IF (TKT_SORT NE LAST TKT_SORT) AND (FARE_AMT LT 0)
  THEN NEW_ADV_PURCH * (-1) ELSE 0;
SAVE_AMT/D10.2CS = IF SRT_DT NE LAST SRT_DT THEN TSAVE ELSE 0;
TK_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TAMT ELSE 0;
XSEG_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TSEG ELSE 0;
XTRP_LEN/I3CS = IF SRT_DT NE LAST SRT_DT THEN TRIP_LENGTH * TTKT ELSE 0;
-* FOR PRINCIPAL INTERNATIONAL DESTINATION TRAVEL
PPAXTRP/D8C = IF (SEG_AMT LT 0) THEN (-1) ELSE 1;
PTRPLEN/D8C = IF (SEG_AMT LT 0) THEN (TRIP_LENGTH*(-1)) ELSE TRIP_LENGTH;
XMILES/D8CS = IF SRT_DT NE LAST SRT_DT THEN TMILE ELSE 0;
NOWTOD/A8 WITH TKT_SORT = HHMMSS (NOWTOD);
END

TABLE FILE AIRHOLD3
PRINT REFUSE_CODE AS 'REASON, CODE'
      XDPT_DT     AS 'DEPART, DATE'
	  DPT_TIME    AS 'TIME'
	  EMB_CTY_NM  AS 'ORG'
	  RTE_CTY_NM  AS 'DST'
	  AIRLINE     AS 'CR'
	  CLASS       AS 'CLASS'
	  FARE_AMT    AS 'FARE,PAID'
	  NET_TKT_CNT AS 'TKT,CNT'
BY XPSNGR_NM      AS 'PASSENGER NAME'
BY XTKT_SRT NOPRINT
BY TKT_SORT NOPRINT
BY SEG_NBR  NOPRINT
BY TRN_DATE NOPRINT
BY XDPT_DT  NOPRINT
BY DPT_TIME NOPRINT
BY TICKET_NMBR    AS 'TICKET,NUMBER'
BY TKT_TYPE       AS 'TKT,TYPE'
WHERE RECORDLIMIT EQ 500
ON TABLE COLUMN-TOTAL
ON XTKT_SRT SKIP-LINE
ON TABLE SET STYLE *
UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.250000, RIGHTMARGIN=0.250000,
    TOPMARGIN=0.500000, BOTTOMMARGIN=0.250000, SQUEEZE=ON,
    ORIENTATION=LANDSCAPE, $
TYPE=REPORT, FOCEXEC=NONE, FONT=TIMES NEW ROMAN, SIZE=7, BACKCOLOR=NONE,
STYLE=NORMAL, $
TYPE=HEADING, OBJECT=TEXT, SIZE=8, COLOR=BLACK, $
TYPE=HEADING, LINE=4, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=5, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=6, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=7, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=8, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=10, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=11, SIZE=12, STYLE=BOLD+ITALIC, FONT=COURIER NEW, $
TYPE=HEADING, LINE=12, SIZE=12, STYLE=BOLD+ITALIC, FONT=COURIER NEW, $
TYPE=FOOTING, SIZE=7, STYLE=BOLD, COLOR=GREY, $
TYPE=TITLE, STYLE=BOLD, $
TYPE=SUBTOTAL, SIZE=8, STYLE=BOLD, $
TYPE=GRANDTOTAL, SIZE=8, STYLE=BOLD, $
ENDSTYLE
END
