-*========================================================================
-* 08/16/2003
-*
-*04/29/10   DEB         CHANGED RATE_GRP FOR ROUNDING

-*               TOTAL COMPANY HOTEL SUMMARY RANKED BY CITY
-*   	
-*========================================================================
-*                <---------------- STEP1 ---------------->
-*========================================================================
-*      CLEAR ROLLUPX PROCESS STAMPS BEFORE TOTAL COMPANY REPORT RUN
-*========================================================================
-* -INCLUDE SETECHO
-SET HOLDATTR = ON;

-SET &&LP0 = 0;
-SET &&XP0 = 0;
-SET &&LP1 = 0;

SET ASNAMES = ON

USE
D:\TNT\TTRACKER\SYSTEM\DATA\ROLLUPX.FOC
END

FILEDEF WLT DISK D:\FOCTEMP\WLT.DAT
-RUN

EX TCNONPAQ
-RUN

EX SETDBLS SETFILE=&&SETF
-RUN
-*========================================================================
-*              SET PROCESS STAMP TO ' ' (FIELD = PR_STAMP)
-*========================================================================
DEFINE FILE ROLLUPX
XL01/A1 = ' ' ;
END
TABLE FILE ROLLUPX
BY ROLLUP_CODE NOPRINT
PRINT ROLLUP_CODE
      XL01 AS 'PR_STAMP' 
IF UPD_ENABLE EQ 'X'
ON TABLE HOLD 
END
MODIFY FILE ROLLUPX
FIXFORM FROM HOLD
MATCH ROLLUP_CODE
ON MATCH UPDATE PR_STAMP
ON NOMATCH REJECT
DATA ON HOLD
END
-*========================================================================
-* SET PROCESS STAMP TO 'T' (FIELD = PR_STAMP) - ROLLUP CODES TO PROCESS
-*========================================================================
DEFINE FILE ROLLUPX
XL01/A1 = 'T' ;
END
TABLE FILE ROLLUPX
BY ROLLUP_CODE NOPRINT
PRINT ROLLUP_CODE
      XL01 AS 'PR_STAMP'
IF UPD_ENABLE EQ 'X'
IF QTR_ENABLE EQ ' '
ON TABLE HOLD 
END
MODIFY FILE ROLLUPX
FIXFORM FROM HOLD
MATCH ROLLUP_CODE
ON MATCH UPDATE PR_STAMP
ON NOMATCH REJECT
DATA ON HOLD
END
-RUN
-*========================================================================
-*       FIND CLIENTS TO PROCESS (SETS OF 25 - THIS IS THE MAXIMUM
-*========================================================================
-TCLOOP
USE CLEAR *

TABLE FILE ROLLUPX
BY ROLLUP_CODE NOPRINT
PRINT COMP
IF PR_STAMP EQ 'T'
IF QTR_ENABLE EQ ' '
IF ROLLUP NE 'TOTAL-R'
IF RECORDLIMIT EQ 25
ON TABLE SAVE
END
-RUN
-IF &RECORDS EQ 0 GOTO STOP;
-SET &&HTL_PATH = 'D:\TNT\TTRACKER\DATA\' ;
-SET &&COM_PATH = 'D:\TNT\TTRACKER\SYSTEM\DATA\' ;
-SET &&SU_PATH = 'D:\TNT\TTRACKER\SUDATA\' ;
-SET &CNT  = 1;
-RUN
-REPEAT GETROLL WHILE &CNT LE &RECORDS;
-READ SAVE &&XX.A6.
-SET &&COMP.&CNT = &&XX ;
-*========================================================================
-*                SET-UP DIALOUGE MANAGER FOR 'AL' DATABASES
-*========================================================================
-SET &&AL_DB.&CNT = 'AL'||&&XX|||'.FOC' ;
-SET &&USE_AL.&CNT = &&HTL_PATH||&&AL_DB.&CNT;
-*========================================================================
-*                SET-UP DIALOUGE MANAGER FOR 'H_' DATABASES
-*========================================================================
-SET &&HTL_DB.&CNT = 'H_'||&&XX|||'.FOC' ;
-SET &&USE_HTL.&CNT = &&HTL_PATH||&&HTL_DB.&CNT;

-SET &CNT = &CNT + 1;
-GETROLL
-*========================================================================
-*                        SET-UP USE STATEMENTS
-*========================================================================
-SET &USE_HREF = &COM_PATH || 'HTL_REF.FOC';
-SET &USE_ARPT = &COM_PATH || 'AIRPORT.FOC';
-SET &USE_CLNT = &COM_PATH || 'CLIENT.FOC';
-SET &USE_ROLL = &SU_PATH  || 'ROLLUPX.FOC';
-SET &USE_ARAT = &COM_PATH || 'AL_RATE.FOC';
-SET &USE_CITY = &COM_PATH || 'CITY.FOC';
-SET &USE_PROP = &COM_PATH || 'HOTL_PRP.FOC';
-SET &USE_HCHN = &COM_PATH || 'HOTL_CHN.FOC';
-SET &USE_BRAN = &COM_PATH || 'BRANCH.FOC';

USE 
 &&USE_AL1  AS 'AH_50' ;
 &&USE_AL2  AS 'AH_50' ;
 &&USE_AL3  AS 'AH_50' ;
 &&USE_AL4  AS 'AH_50' ;
 &&USE_AL5  AS 'AH_50' ;
 &&USE_AL6  AS 'AH_50' ;
 &&USE_AL7  AS 'AH_50' ;
 &&USE_AL8  AS 'AH_50' ;
 &&USE_AL9  AS 'AH_50' ;
 &&USE_AL10 AS 'AH_50' ;
 &&USE_AL11 AS 'AH_50' ;
 &&USE_AL12 AS 'AH_50' ;
 &&USE_AL13 AS 'AH_50' ;
 &&USE_AL14 AS 'AH_50' ;
 &&USE_AL15 AS 'AH_50' ;
 &&USE_AL16 AS 'AH_50' ;
 &&USE_AL17 AS 'AH_50' ;
 &&USE_AL18 AS 'AH_50' ;
 &&USE_AL19 AS 'AH_50' ;
 &&USE_AL20 AS 'AH_50' ;
 &&USE_AL21 AS 'AH_50' ;
 &&USE_AL22 AS 'AH_50' ;
 &&USE_AL23 AS 'AH_50' ;
 &&USE_AL24 AS 'AH_50' ;
 &&USE_AL25 AS 'AH_50' ;

 &&USE_HTL1  AS 'HR_50' ;
 &&USE_HTL2  AS 'HR_50' ;
 &&USE_HTL3  AS 'HR_50' ;
 &&USE_HTL4  AS 'HR_50' ;
 &&USE_HTL5  AS 'HR_50' ;
 &&USE_HTL6  AS 'HR_50' ;
 &&USE_HTL7  AS 'HR_50' ;
 &&USE_HTL8  AS 'HR_50' ;
 &&USE_HTL9  AS 'HR_50' ;
 &&USE_HTL10 AS 'HR_50' ;
 &&USE_HTL11 AS 'HR_50' ;
 &&USE_HTL12 AS 'HR_50' ;
 &&USE_HTL13 AS 'HR_50' ;
 &&USE_HTL14 AS 'HR_50' ;
 &&USE_HTL15 AS 'HR_50' ;
 &&USE_HTL16 AS 'HR_50' ;
 &&USE_HTL17 AS 'HR_50' ;
 &&USE_HTL18 AS 'HR_50' ;
 &&USE_HTL19 AS 'HR_50' ;
 &&USE_HTL20 AS 'HR_50' ;
 &&USE_HTL21 AS 'HR_50' ;
 &&USE_HTL22 AS 'HR_50' ;
 &&USE_HTL23 AS 'HR_50' ;
 &&USE_HTL24 AS 'HR_50' ;
 &&USE_HTL25 AS 'HR_50' ;

 &USE_HREF
 &USE_ARPT
 &USE_CLNT
 &USE_ROLL
 &USE_ARAT
 &USE_PROP
 &USE_HCHN
 &USE_CITY
 &USE_BRAN
 
END
-*========================================================================
-*                <---------------- STEP2 ---------------->
-*========================================================================
-*                   Loop Logic To Loop Through Databases
-*========================================================================
-IF &&LP1 GE 1 THEN GOTO MORE ;
-RUN

-SET &&LP0 = 0;
-SET &&XP0 = 0;
-SET &&LP1 = &&LP0 + 1;
-SET &&XP1 = &&XP0 + 1;
-SET &&DBASE = 'TCHOLD1' ;
-GOTO GETDATA
-RUN

-MORE
-SET &&LP1 = &&LP1 + 1 ;
-SET &&XP1 = &&XP1 + 1 ;
-SET &&DB1   = 'TCHOLD';
-SET &&DCNT  = &&LP1 ;
-SET &&DBASE = &&DB1||&&DCNT ;
-RUN
-*========================================================================
-*                      Data Extract For Report Data
-*========================================================================
-GETDATA
? USE
? &&
-EXIT


DEFINE FILE &&EXTRACT
  CARD_NUM/A12 = EDIT(CREDIT_CARD, '$$999999999999$$$$');
  CARD1_NUM/A4 = EDIT(CREDIT_CARD, '$$$$$$$$$$$$$$9999');
  CITY_ST/A35 = PROP_CITY||(' '| PROP_STATE);
  LEV_2/A15 = IF PASSNGR_NAME NE LAST PASSNGR_NAME THEN LEVEL2 ELSE ' ';
  LEVEL_DESC/A60  = &&LDESC;
  IN_DATE/MDYY = CHKIN_DATE;
  INV_DATE/MDYY = INVOICE_DATE;
  NEW_ROOM_RATE/D12.2C = ROOM_RATE;
  NEW_STD_RATE/D12.2C = STD_RATE;
  NEW_TOTAL_AMT/D12.2C = TOTAL_AMT;
  NBR_DAYS/D12 =  NUM_DAYS; 
  NNROOMS/D12 = IF (NBR_DAYS LT 0) AND (NUM_ROOMS LT 0)
                THEN ((NBR_DAYS*NUM_ROOMS)*(-1))
                ELSE NBR_DAYS*NUM_ROOMS;
  OUT_DATE/MDYY = CHKOUT_DATE;
  ONLINE/A1 = IF AGENT EQ '00444' THEN 'Y' ELSE 'N';
  PROP_ZIP5/A5=EDIT(PROP_ZIP, '99999$$$$$');
-* RATE_GRP/A15 = IF ((ROOM_RATE GE 0 AND ROOM_RATE LT 150) OR
-*                      (ROOM_RATE LE 0 AND ROOM_RATE GT (-150)))
-*                  THEN '$0 - $149' ELSE
-*                  IF ((ROOM_RATE GE 150 AND ROOM_RATE LE 199) OR
-*                      (ROOM_RATE LE (-150) AND ROOM_RATE GE (-199)))
-*                  THEN '$150 - $199' ELSE
-*                  IF ((ROOM_RATE GE 200 AND ROOM_RATE LE 249) OR
-*                      (ROOM_RATE LE (-200) AND ROOM_RATE GE (-249)))
-*                  THEN '$200 - $249' ELSE '$250 OR GREATER';


  RATE_GRP/A15 = IF ((ROOM_RATE GE 0 AND ROOM_RATE LT 149.50) OR
                      (ROOM_RATE LE 0 AND ROOM_RATE GT (-149.50)))
                   THEN '$0 - $149' ELSE
                   IF ((ROOM_RATE GE 149.50 AND ROOM_RATE LT 199.50) OR
                      (ROOM_RATE LE (-149.50) AND ROOM_RATE GT (-199.50)))
                   THEN '$150 - $199' ELSE
                   IF ((ROOM_RATE GE 199.50 AND ROOM_RATE LT 249.50) OR
                      (ROOM_RATE LE (-199.50) AND ROOM_RATE GT (-249.50)))
                   THEN '$200 - $249' ELSE '$250 OR GREATER';



  REASON_CD/A2=EDIT(REFUSE_KEY,'$$$$$$$$99');
  REFUSE_CD/A2=EDIT(REFUSE_KEY,'$$$$$$$$99');
  RSNCDE/A48=REFUSE_CD|| '-' ||REFUSAL_DESC;

-* ****DEFINES ON PREVIOUS DEFINES****

  TOTAL_STD/D12.2C = IF (NNROOMS LT 0) AND (NEW_STD_RATE LT 0) 
                     THEN ((NNROOMS * NEW_STD_RATE)*(-1))
                     ELSE NNROOMS * NEW_STD_RATE;

-* ***DEFINES ON PREVIOUS DEFINED DEFINES***
   SAVINGS/D12.2CS = TOTAL_STD - TOTAL_AMT;
   TOTAL_SLSAV/D12.2C = TOTAL_STD - NEW_TOTAL_AMT;
   XIN_DOW/WR = IN_DATE;
   XOUT_DOW/WR = OUT_DATE;
END
-RUN

TABLEF FILE &&EXTRACT
PRINT AIRPORT_CODE	
  ALPHA_RATE	
  AR_BRANCH
  BR_CL_IDX
  CARD_NUM
  CARD1_NUM	
  CHAIN_CODE 	
  CHAIN_NAME 	
  CITY_ST	
  CREDIT_CARD	
  HHL_CONFIRM 	
  HOTEL_PHONE 	
  HTL_KEY	
  IN_DATE 	
  INV_DATE	
  INVOICE_DATE 	
  INVOICE_NUM 	
  LEV_2
  LEVEL_DESC	
  LEVEL1 	
  LEVEL2 	
  LEVEL3 	
  NEW_ROOM_RATE
  NEW_STD_RATE
  NEW_TOTAL_AMT
  NBR_DAYS	
  NNROOMS	
  NUM_DAYS 	
  NUM_ROOMS	
  ONLINE
  OUT_DATE 	
  PROP_ZIP5
  PASSNGR_NAME 	
  PNR_LOCATOR 	
  PROP_ADDRESS 	
  PROP_CITY 	
  PROP_NAME 	
  PROP_STATE_CD 	
  RATE_GRP	
  REFUSAL_DESC	
  REFUSE_CD	
  REFUSE_KEY	
  RESV_BRANCH	
  ROOM_RATE 	
  ROOM_TYPE	
  RSNCDE	
  SAVINGS	
  STD_RATE 	
  TICKET_BRANCH	
  TKT_NUM	
  TOTAL_AMT 	
  TOTAL_STD 	
  TOTAL_SLSAV
  XIN_DOW
  XOUT_DOW

WHERE INVOICE_DATE GE &&FROMDT.EVAL AND INVOICE_DATE LE &&TODT.EVAL
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10


-INCLUDE RPTPARMS
ON TABLE HOLD AS '&&DBASE'
END
-RUN
-*========================================================================
-*                <---------------- STEP3 ---------------->
-*========================================================================
-*              UPDATE PR_STAMP TO 'Z' = Rollup Code Processed
-*========================================================================
DEFINE FILE ROLLUPX
XL01/A1 = 'Z' ;
END
TABLE FILE ROLLUPX
BY ROLLUP_CODE NOPRINT
PRINT ROLLUP_CODE
      XL01 AS 'PR_STAMP' 
IF UPD_ENABLE EQ 'X'
IF QTR_ENABLE EQ ' '
IF PR_STAMP EQ 'T'
IF RECORDLIMIT EQ 25
ON TABLE HOLD 
END
MODIFY FILE ROLLUPX
FIXFORM FROM HOLD
MATCH ROLLUP_CODE
ON MATCH UPDATE PR_STAMP
ON NOMATCH REJECT
DATA ON HOLD
END
-RUN
USE CLEAR *
-GOTO TCLOOP
-RUN

-STOP
EX SUUSES
-RUN
EX TCDESC2
-RUN

FILEDEF TCUSE DISK TCUSE.FEX
-RUN

-SET &ZCNT = 1;
-WRITE TCUSE USE ADD
-REPEAT ENDREPEAT &&DCNT TIMES;
-SET &&TDAT = 'TCHOLD' | '&ZCNT.EVAL' | '.FOC' | ' AS TCHOLD1' ;
-WRITE TCUSE &&TDAT
-SET &ZCNT = &ZCNT + 1 ;
-ENDREPEAT
-WRITE TCUSE END
-CLOSE TCUSE

-INCLUDE TCUSE
-RUN

USE ADD CONG.FOC  AS TCHOLD1
        KIMB.FOC  AS TCHOLD1
        METX.FOC  AS TCHOLD1
        UPTTL.FOC AS TCHOLD1
END
-RUN

DEFINE FILE TCHOLD1
  BUSINESS/I8S = IF CP_CL_CAT EQ 'B' THEN SEG_COUNT ELSE 0;
  COACH/I8S    = IF CP_CL_CAT EQ 'C' THEN SEG_COUNT ELSE 0;
  DSCNT/I8S    = IF CP_CL_CAT EQ 'D' THEN SEG_COUNT ELSE 0;
  FIRST/I8S    = IF CP_CL_CAT EQ 'F' THEN SEG_COUNT ELSE 0;
  OTHER/I8S    = IF CP_CL_CAT EQ 'O' THEN SEG_COUNT ELSE 0;
  SEGMT/I8S    = FIRST + BUSINESS + COACH + DSCNT + OTHER ;
  LABEL1/A25 = IF '&&ORGDST' EQ 'DIR_CITY_CD' THEN DIR_CTY_CDO ELSE
               IF '&&ORGDST' EQ 'DIR_CITY_NM' THEN DIR_CTY_NMO ELSE
               IF '&&ORGDST' EQ 'DIR_CP_CD' THEN DIR_APT_CDO ELSE
               IF '&&ORGDST' EQ 'DIR_CP_NM' THEN DIR_APT_NMO ELSE
               IF '&&ORGDST' EQ 'ND_CITY_CD' THEN ND_CTY_CDO ELSE
               IF '&&ORGDST' EQ 'ND_CITY_NM' THEN ND_CTY_NMO ELSE
               IF '&&ORGDST' EQ 'ND_CP_CD' THEN ND_APT_CDO ELSE
               IF '&&ORGDST' EQ 'ND_CP_NM' THEN ND_APT_NMO ELSE ' ';

 LABEL2/A25 = IF '&&ORGDST' EQ 'DIR_CITY_CD' THEN DIR_CTY_CDD ELSE
               IF '&&ORGDST' EQ 'DIR_CITY_NM' THEN DIR_CTY_NMD ELSE
               IF '&&ORGDST' EQ 'DIR_CP_CD' THEN DIR_APT_CDD ELSE
               IF '&&ORGDST' EQ 'DIR_CP_NM' THEN DIR_APT_NMD ELSE
               IF '&&ORGDST' EQ 'ND_CITY_CD' THEN ND_CTY_CDD ELSE
               IF '&&ORGDST' EQ 'ND_CITY_NM' THEN ND_CTY_NMD ELSE
               IF '&&ORGDST' EQ 'ND_CP_CD' THEN ND_APT_CDD ELSE
               IF '&&ORGDST' EQ 'ND_CP_NM' THEN ND_APT_NMD ELSE ' ';
END
-RUN

TABLE FILE TCHOLD1
SUM BUSINESS	
    COACH	
    COMM_SEG	
    CP_FARE_PD AS 'FARE'
    DEMB_APT 	
    DISSAVINGS
    DPT_TIME
    DRTE_APT	
    DSCNT	
    EMB_APT
    FARE_BAS1
    FIRST
    LABEL1
    LABEL2
    LEVEL3	
    LEVEL_DESC
    MILES	
    NET_COMM	
    NET_FARE 	
    NET_TKT_CNT	
    NEW_SEG_COUNT	
    OTHER
    RTE_APT	
    SAVINGS	
    SEGMT	
    TOTAL_FARE	
    VASAVINGS
BY ORGDST
BY CP_AIRLINE
ON TABLE HOLD AS HOLD1
END
-RUN

TABLE FILE HOLD1
PRINT BUSINESS	
      COACH	
      COMM_SEG	
      CP_AIRLINE
      DEMB_APT	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      DSCNT	
      EMB_APT
      FARE
      FARE_BAS1	
      FIRST
      LABEL1
      LABEL2
      LEVEL3
      LEVEL_DESC	
      MILES	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      OTHER
      RTE_APT
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS
BY ORGDST
RANKED BY HIGHEST &&RANK_METH   
ON TABLE HOLD AS HOLD2
END
-RUN


DEFINE FILE HOLD2
  DRANK/D5      = RANK ;
  ARANKX/A6     = FTOA(DRANK, '(D5)', 'A6');
  ARANK/A5      = EDIT(ARANKX,'$99999');
  RANK_LIMIT/I5 = &&RANK_LIMIT2 ;
  RANK_VALUE/A5 = IF (RANK_LIMIT EQ 0) THEN (ARANK) ELSE
                  IF RANK GT RANK_LIMIT THEN 'OTHER' ELSE ARANK;
END
-RUN

TABLE FILE HOLD2
PRINT BUSINESS	
      COACH	
      COMM_SEG	
      CP_AIRLINE
      DEMB_APT 	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      DSCNT	
      EMB_APT
      FARE_BAS1
      FARE	
      FIRST
      LABEL1
      LABEL2
      LEVEL3
      LEVEL_DESC	
      MILES	
      NET_COMM	
      NET_FARE	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      OTHER
      RTE_APT
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS
BY ORGDST
BY RANK_VALUE
ON TABLE HOLD AS HOLD3
END
-RUN


DEFINE FILE HOLD3
AIRLINE_PRINT/A12 = IF RANK_VALUE LE '&&RANK_LIMIT2' 
	THEN CP_AIRLINE ELSE 'OTHER';
END
-RUN

TABLE FILE HOLD3
SUM BUSINESS	
    COACH	
    COMM_SEG
    DEMB_APT	
    DISSAVINGS
    DPT_TIME
    DRTE_APT	
    DSCNT	
    EMB_APT
    FARE
    FARE_BAS1	
    FIRST
    LABEL1
    LABEL2
    LEVEL3
    LEVEL_DESC	
    MILES	
    NET_COMM	
    NET_FARE	
    NET_TKT_CNT	
    NEW_SEG_COUNT	
    OTHER	
    RTE_APT	
    SAVINGS	
    SEGMT	
    TOTAL_FARE	
    VASAVINGS
BY ORGDST 
BY RANK_VALUE
BY AIRLINE_PRINT 
ON TABLE HOLD AS HOLD4
END
-RUN

TABLE FILE HOLD1
SUM &&RANK_METH
BY ORGDST
ON TABLE HOLD AS RHOLD1 
END
-RUN

TABLE FILE RHOLD1
PRINT &&RANK_METH
RANKED BY HIGHEST &&RANK_METH AS 'SEG_RANK'
BY ORGDST
ON TABLE HOLD AS RHOLD2
END
-RUN


MATCH FILE HOLD4
PRINT AIRLINE_PRINT 	
      BUSINESS	
      COACH	
      COMM_SEG
      DEMB_APT	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      DSCNT	
      EMB_APT
      FARE	
      FARE_BAS1
      FIRST
      LABEL1
      LABEL2
      LEVEL3	
      LEVEL_DESC
      MILES	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      OTHER	
      RANK_VALUE
      RTE_APT
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS
BY ORGDST 
ON TABLE HOLD
RUN
FILE RHOLD2
SUM SEG_RANK
BY ORGDST
AFTER MATCH HOLD AS HOLD5 OLD-OR-NEW
END
-RUN


TABLE FILE HOLD5
PRINT AIRLINE_PRINT	
      BUSINESS	
      COACH	
      COMM_SEG
      DEMB_APT	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      DSCNT	
      EMB_APT	
      FARE
      FARE_BAS1	
      FIRST
      LABEL1
      LABEL2
      LEVEL3
      LEVEL_DESC	
      MILES	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      ORGDST	
      OTHER	
      RANK_VALUE
      RTE_APT	
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS	
RANKED BY HIGHEST SEG_RANK 
ON TABLE HOLD AS HOLD6
END
-RUN

DEFINE FILE HOLD6
  ORG_LIMIT/I2 = &&RANK_LIMIT ;
  OLIMIT/A2    = EDIT(ORG_LIMIT) ;
  CRANK/D5     = RANK;
  BRANK/A6     = FTOA(CRANK, '(D5)', 'A6');
  LIST/D6 = IF ORGDST NE LAST ORGDST THEN (LAST LIST + 1) 
    ELSE LAST LIST;
  FRANKX/A7 = FTOA(LIST, '(D6)', 'A7');
  FRANK/A6  = EDIT(FRANKX,'$999999'); 
  ORG_VALUE/A6 = IF ORG_LIMIT EQ 0 THEN BRANK ELSE
               IF LIST GT ORG_LIMIT THEN 'OTHER' ELSE FRANK;
END
-RUN

TABLE FILE HOLD6
SUM BUSINESS	
    COACH	
    COMM_SEG
    DEMB_APT	
    DISSAVINGS
    DPT_TIME
    DRTE_APT	
    DSCNT	
    EMB_APT
    FARE
    FARE_BAS1	
    FIRST
    LABEL1
    LABEL2
    LEVEL3
    LEVEL_DESC	
    MILES	
    NET_COMM	
    NET_FARE  	
    NET_TKT_CNT	
    NEW_SEG_COUNT	
    OLIMIT	
    ORG_LIMIT	
    OTHER	
    RTE_APT	
    SAVINGS	
    SEG_RANK	
    SEGMT	
    TOTAL_FARE	
    VASAVINGS
BY ORG_VALUE
BY ORGDST
BY RANK_VALUE
BY AIRLINE_PRINT
ON TABLE HOLD AS HOLD7
END
-RUN

DEFINE FILE HOLD7
-INCLUDE STDTIME1
  DEMBARK_APT/A21 = IF ORG_VALUE LT (OLIMIT) THEN DEMB_APT ELSE 'ALL OTHER';
  DROUTE_APT/A21 = IF ORG_VALUE LT (OLIMIT) THEN DRTE_APT ELSE 'ALL OTHER';
  EMBARK_APT/A21 = IF ORG_VALUE LT (OLIMIT) THEN EMB_APT ELSE 'ALL OTHER'; 
  ORG_PRINT/A55 =IF ORG_VALUE LT (OLIMIT) THEN ORGDST ELSE 'ALL OTHER';
  RO_PRINT/A12   =IF ORG_VALUE LT (OLIMIT) THEN AIRLINE_PRINT ELSE ' ';
  ROUTE_APT/A21 = IF ORG_VALUE LT (OLIMIT) THEN RTE_APT ELSE 'ALL OTHER';
  EMB_LBL/A25 = IF ORG_VALUE LT (OLIMIT) THEN LABEL1 ELSE 'ALL OTHER';
  RTE_LBL/A25 = IF ORG_VALUE LT (OLIMIT) THEN LABEL2 ELSE 'ALL OTHER';
END
-RUN

TABLE FILE HOLD7
SUM BUSINESS	
    COACH	
    COMM_SEG
    DEMBARK_APT    	
    DISSAVINGS
    DPT_TIME
    DROUTE_APT	
    DSCNT	
    EMBARK_APT
    EMB_LBL
    FARE
    FARE_BAS1	
    FIRST
    LEVEL3
    LEVEL_DESC	
    MILES	
    NET_COMM	
    NET_FARE	
    NET_TKT_CNT
    NEW_SEG_COUNT
    ORGDST	
    OTHER	
    ROUTE_APT
    RTE_LBL
    SAVINGS	
    SEG_RANK	
    SEGMT
    TIME_DPT	
    TOTAL_FARE	
    VASAVINGS
BY ORG_VALUE     
BY ORG_PRINT  
BY RANK_VALUE
BY RO_PRINT
ON TABLE HOLD AS HOLD8
END
-RUN

TABLE FILE HOLD7
SUM MILES AS 'C_MILES'
    NET_COMM AS 'C_COMM'
    FARE AS 'C_FARE' 
    NET_TKT_CNT AS 'C_SEGMT'
    TOTAL_FARE AS 'T_FARE'
BY ORG_PRINT  
ON TABLE HOLD AS HOLD9
END
-RUN

MATCH FILE HOLD8
PRINT BUSINESS	
      COACH	
      COMM_SEG
      DEMBARK_APT	
      DISSAVINGS
      DPT_TIME
      DROUTE_APT	
      DSCNT
      EMBARK_APT
      EMB_LBL	
      FARE
      FARE_BAS1	
      FIRST
      LEVEL3
      LEVEL_DESC	
      MILES	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT 	
      NEW_SEG_COUNT	
      ORGDST
      ORG_VALUE	
      OTHER	
      RANK_VALUE	
      RANK_VALUE	
      RO_PRINT	
      ROUTE_APT
      RTE_LBL
      SAVINGS	
      SEG_RANK	
      SEGMT
      TIME_DPT	
      TOTAL_FARE	
      VASAVINGS
BY ORG_PRINT 
ON TABLE HOLD
RUN
FILE HOLD9
SUM C_COMM
    C_FARE
    C_MILES
    C_SEGMT
    T_FARE
BY ORG_PRINT 
AFTER MATCH HOLD AS HOLD10 OLD-OR-NEW
END
-RUN

-SET &&RPTSUF = 'SMY';
-INCLUDE FDEFRPTS
-RUN

-TYPE BEFORE DEFINES

DEFINE FILE HOLD10 
  PER_FARE/D8.1=    IF ((C_FARE LT 1) AND (C_FARE GT (-1))) THEN 0
                    ELSE ((FARE/C_FARE)*100);
  PER_TFARE/D8.1=   IF ((T_FARE LT 1) AND (T_FARE GT (-1))) THEN 0
                    ELSE ((TOTAL_FARE/T_FARE)*100);
  SEGPER/D8.1 =     IF ((C_SEGMT LT 1) AND (C_SEGMT GT (-1))) THEN 0
                    ELSE ((NET_TKT_CNT/C_SEGMT)*100);
  PER_NFARE/D8.1=   IF ((C_COMM LT 1) AND (C_COMM GT (-1))) THEN 0
                    ELSE ((NET_COMM/C_COMM)*100);
  MILE_PCT/D8.1=    IF ((C_MILES LT 1) AND (C_MILES GT (-1))) THEN 0
                    ELSE ((MILES/C_MILES)*100);
  COSTPER_MILE/D8.2=IF ((MILES LT 1) AND (MILES GT (-1))) THEN 0
                    ELSE (FARE/MILES);
  AVGSEG_AMT/D8.2 = IF ((SEGMT LT 1) AND (SEGMT GT (-1))) THEN 0
                    ELSE (NET_FARE/SEGMT);
  AVGFLT/D8.2 =     IF ((NET_TKT_CNT LT 1) AND (NET_TKT_CNT GT (-1))) THEN 0
                    ELSE (NET_FARE/NET_TKT_CNT);

-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-**********************************************************************
  NOWTOD/A8 WITH LEVEL_DESC = HHMMSS (NOWTOD);
END

TABLE FILE HOLD10
-INCLUDE HEADER
"&&SUBHEAD </1"
   &&S_SUBJ1
   &&S_SUBJ2
   &&S_SUBJ3
   &&S_SUBJ4
   &&S_SUBJ5
   &&S_SUBJ6
   &&S_SUBJ7
   &&S_SUBJ8
   &&S_SUBJ9
   &&S_SUBJ10
   &&S_TARG1
   &&S_TARG2
   &&S_TARG3
   &&S_TARG4
   &&S_TARG5
   &&S_TARG6
   &&S_TARG7
   &&S_TARG8
   &&S_TARG9
   &&S_TARG10
   &&SUMM_ON1
   &&SUMM_ON2
   &&SUMM_ON3
   &&SUMM_ON4
   &&SUMM_ON5
   &&SUMM_ON6
   &&SUMM_ON7
   &&SUMM_ON8
   &&SUMM_ON9
   &&SUMM_ON10
-INCLUDE FOOTERSM
-*ON TABLE SET STYLE &&SMSTY
-**************************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT 
-*                                  WITH AN INCLUDE
-**************************************************************************
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT 

ON TABLE SET STYLE *

-INCLUDE &&SMSTY 
ENDSTYLE
&&OUTLINE1
&&SUMMDEST
&&OUTLINE2
END
-RUN
-* REJ ADDED TO TRAP ERRORS
-SET &&FEXNOW='CPALL';
-INCLUDE ERRORCHK
-IF &&RET GT 1 GOTO XXIT;
-* REJ ADDED TO TRAP ERRORS

-XXIT


