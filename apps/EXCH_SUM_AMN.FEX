-* 4/1/14 - DEB - CREATED FOR New Exchange report based on AMN usage
-* File Exchange_Summary.fex
-* 5/23/14 - DEB  UPDATED EX_FL_FLAG DEFINE TO INCLUDE EX5
-* ADDED TRANTYPE INCLUDE - JK 12/29/14 STORY ID S-06492
-* 3/19/15 -  S-06584 - CHANGED TO USE EXTRACT ROUTINE PROVIDED BY RANDY PSOTA - DEB
-*                      CHANGED TO SORT BY CLIENT_NAME TO BALANCE DETAIL
-* Story ID S-10086 Added &&overdrill flag logic for use in 5.0 to choose to for the report to be drillable or non-drillable - 9/15/15 - JM
-*  08/23/2016  REJ  S-17914 Changes for ER5.
-*  12/29/2016  REJ  S-28553 Move ER5 My Reports to production.

 
-INCLUDE SETECHO
 
SET ASNAMES=ON
-SET HOLDATTR = ON;
 
 
-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';
 
DEFINE FILE &&EXTRACT
 ALN_NAME/A10 = IF VAL_AIR.VAL_AIRLINE EQ 'UA' OR 'LH' THEN 'UA/LH' ELSE 'OTHER';
 
 CLASS_CAT/A15 = DECODE CL_CAT ('F' 'FIRST'     'P' 'PREMIUM ECONOMY'
			        'D' 'DEFAULT'   'B' 'BUSINESS'
			        'E' 'ECONOMY'   'U'  'UPGRADE'
                                ' ' 'DEFAULT');
 
 
  CLASS1/A25 = IF TKT_CL_CAT CONTAINS 'F' THEN 'FIRST' ELSE
               IF TKT_CL_CAT CONTAINS 'B' THEN 'BUSINESS' ELSE
               IF TKT_CL_CAT CONTAINS 'P' THEN 'PREMIUM ECONOMY' ELSE
               IF TKT_CL_CAT CONTAINS 'E' THEN 'ECONOMY' ELSE
               IF TKT_CL_CAT CONTAINS 'U' THEN 'UPGRADE' ELSE 'DEFAULT';
 
 
  COMM_SEG/D12.2S = SEG_COM;
  CITY/A6 = SUBSTR (176, CNON_STP, 1, 6, 6, CITY);
  DCTRY/A65 = EDIT(TKT_MAIN.CTRY_COD,'$$$9999999999999999999999999999999999999999999999999999999999999999');
  DGZONE/A64 = EDIT(TKT_MAIN.GEO_ZONE,'$$$$9999999999999999999999999999999999999999999999999999999999999999');
  FARE_PAID/D12.2CS   = IF VOID_DATE EQ 0 THEN SEG_AMT + SEG_TAX ELSE 0;
  FARE_PAID1/D12.2CS   = SEG_AMT + SEG_TAX;
  LEVEL_DESC/A60      = AROLL_LEV2;
  MXEXC1/A1 = IF (ORG_DST EQ 'BOSLGA') OR (ORG_DST EQ 'DCALGA') OR
                 (ORG_DST EQ 'BOSDCA') OR (ORG_DST EQ 'LGAPVD') OR
                 (ORG_DST EQ 'BOSEWR') THEN 'N' ELSE 'Y';
  MXEXC2/A1 = IF (ORG_DST EQ 'BOSLGA') OR (ORG_DST EQ 'DCALGA') OR
                 (ORG_DST EQ 'BOSDCA') THEN 'Y' ELSE 'N';
  MRK_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (EX_FLAG NE ' ') THEN (-1) ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (RF_FLAG NE ' ') THEN (-1) ELSE 0;
 
  NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) AND (VOID_DATE EQ 0) THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') AND (VOID_DATE EQ 0) THEN (-1) ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') AND (VOID_DATE EQ 0) THEN (-1) ELSE 0;
 
  NET_FARE/D12.2S  = IF (EX_FLAG EQ ' ') AND (RF_FLAG EQ ' ')
                         THEN SEG_AMT - SEG_COM ELSE 0;
  NEW_ADV_PURCH/D9    = ADV_PURCH;
  NEW_SEG_DISC/D12.2CS = SEG_DISCOUNT;
  OCTRY/A2 = EDIT(TKT_MAIN.CTRY_COD, '99');
  OGZONE/A3 = EDIT(TKT_MAIN.GEO_ZONE, '999');
 
  REF_EXCH_CNT/D8.2CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 0 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  TAX/D12.2S = SEG_TAX;
  TKT_PURCH/D8CS      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE 0;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TRAN_MONTH/MT        = TRN_DATE;
  VASAVINGS/D12.2CS    = NEW_SEG_DISC - FARE_PAID;
  XDPT_DOW/W           = DPT_DATE;
  XDPT_DT/MDYY         = DPT_DATE;
  XPSNGR_NM/A15        =
  EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
  XTRAN_DT/MDYY        = TRN_DATE;
 
 
-* ****DEFINES ON PREVIOUS DEFINES****
  AFLAG/A1 = IF ALN_NAME EQ 'OTHER' THEN '2' ELSE '1';
  DISSAVINGS/D11.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
 
-* Added for new AD reason code to split out the value added savings
-*   ADVSV/D12.2CS = IF REFUSE_CODE EQ 'AD' THEN VASAVINGS ELSE 0;
ADVSV/D12.2CS = SEG_AGENCY_DISC - FARE_PAID;
-*  NFVSV/D12.2CS = IF REFUSE_CODE NE 'AD' THEN VASAVINGS ELSE 0;
NFVSV/D12.2CS = VASAVINGS;
 
-*The following 2 defined fields are only used for saving/lost saving reports
-*02/04/2003
  SAVING1/P12.2CS = (STD_FARE - (TICKET_AMT + TAX_AMT));
  LSTSAVE1/P12.2CS = ((TICKET_AMT + TAX_AMT) - LOWEST_AMT);
-***** Added for Kiewit exchange by Validating airline Report
ADDCOLLECT/D12.2CSM = IF (VOID_DATE EQ 0) AND (SEG_NBR EQ '01') THEN EXCH_NET_FARE+EXCH_NET_TAX;
AIRLINE_FEE/D12.2CSM = IF (VOID_DATE EQ 0) AND (EMBARK EQ 'FP2' OR 'FP3') THEN FARE_PAID ELSE 0;
EXG_ISS/D12CS = IF (EX_FLAG EQ 'F') AND (SEG_COUNT EQ -1) AND (SEG_NBR EQ '01') AND (VOID_DATE EQ 0) THEN 1 ELSE 0;
-*PEXG_ISS/D12CS = IF (VOID_DATE EQ 0) AND (EX_FLAG EQ 'P') AND FARE_PAID LT 0  THEN 1 ELSE 0;
-*PEXG_ISS/D12CS = IF (EX_FLAG EQ 'P') AND (SEG_COUNT EQ -1) AND (SEG_NBR NE '01') AND (VOID_DATE EQ 0) THEN 1 ELSE 0;
PEXG_ISS/D12CS = IF (EX_FLAG EQ 'P') AND (SEG_COUNT EQ -1)  AND (VOID_DATE EQ 0) THEN 1 ELSE 0;
 
FEXG_AMT/D12.2CSM = IF (VOID_DATE EQ 0) AND (EX_FLAG EQ 'F') THEN FARE_PAID ELSE 0;
NET_AMT/D12.2CSM = IF (VOID_DATE EQ 0) AND (EX_FLAG EQ 'F') THEN FARE_PAID ELSE 0;
FULL_RFNDS/D9CS = IF (RF_FLAG EQ 'F') AND (DOC_TYPE NE '1') AND (SEG_COUNT EQ -1) AND (SEG_NBR EQ '01') THEN 1 ELSE 0;
VOIDS/D9CS = IF (VOID_DATE NE 0) AND (SEG_COUNT EQ 1) AND (SEG_NBR EQ '01') THEN 1 ELSE 0;
-* CONG REPORT
EX_RF_FLAG/A1 = IF (((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 'FP2' OR 'EX5') AND
                     (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1')) THEN 'R' ELSE
                  IF (((EXSALE NE ' ') AND (SEG_COUNT GE 0)) OR ((EMBARK NE 'DT1') AND
                      (EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (RF_FLAG EQ ' ')))  THEN 'E'  ELSE ' ';
TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
-INCLUDE TRANTYPE
END
-RUN
 
TABLEF FILE SR_50
PRINT
    AIRLINE
    AIRLINE.AIRLINE_NAME AS 'ARLN_NAME'
    AIR_MAIN.INTL_DOM AS 'INT_DOM'
    ARR_TIME
    CITY
    CITYPAIR.EMBARK AS 'EMB_APT_CD'
    CITYPAIR.ROUTE  AS 'RTE_APT_CD'
    CLASS
    CLASS1
    CLASS_CAT
    CLIENT_NAME
    COMM_SEG
    CONJ_REL
    DGZONE
    DCTRY
    DISSAVINGS
    DOC_NUMBER
    DOC_TYPE
    DPT_TIME
    EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'
    EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'
    EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'
    EX_FLAG
    EXCHG_SALE
    FARE_PAID
    FARE_PAID1
    FARE_BAS
    INT_CODE
    LEVEL_DESC
    LEVEL1
    LEVEL2
    MXEXC1
    MXEXC2
    MRK_TKT_CNT
    NET_FARE
    NET_TKT_CNT
    NEW_ADV_PURCH
    NEW_SEG_DISC
    NFVSV
    OCTRY
    OGZONE
    PASSNGR_NAME
    PNR_LOCATOR
    REF_EXCH_CNT
    REFUSE_KEY
    REFUSE_CODE
    RESV_BRANCH
    RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'
    RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'
    RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'
    SEG_DESIG
    SEG_LOWEST
    SEG_NBR
    TAX
    TKT_MAIN.GEO_ZONE AS 'GEO_ZONE'
    TKT_MAIN.CTRY_COD AS 'CNTRY_CODE'
    TKT_DATE
    TKT_NUM
    TKT_PURCH
    TKT_SORT
    TKT_TYPE
    TOUR_CODE
    TRN_DATE
    VAL_AIR.AIRLINE_NAME
    VAL_AIRLINE
    VASAVINGS
    XDPT_DT
    XTRAN_DT
    XPSNGR_NM
-* Kiewit Defines
    ADDCOLLECT
    AIRLINE_FEE
    EXG_ISS
    FEXG_AMT
    NET_AMT
    PEXG_ISS
    EX_RF_FLAG
    TKT_TYPE
    VOIDS
    FULL_RFNDS
 
-INCLUDE &AIRDATES
 
WHERE VOID_DATE EQ 0
WHERE VAL_AIRLINE NE 'WN'
WHERE (EX_RF_FLAG EQ 'E') OR (EMBARK EQ 'FP2')
 
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10
-INCLUDE RPTPARMS
ON TABLE HOLD AS EXHLD
END
-RUN
 
TABLE FILE EXHLD
SUM ADDCOLLECT
    AIRLINE_FEE
    CLIENT_NAME
    DOC_NUMBER
    EMB_APT_CD
    EX_RF_FLAG
    EXCHG_SALE
    EXG_ISS
    FARE_PAID
    FULL_RFNDS
    INT_DOM
    LEVEL1
    NET_TKT_CNT
    PEXG_ISS
    TKT_TYPE
BY LEVEL_DESC
BY PASSNGR_NAME
BY TKT_DATE
BY TKT_NUM
BY DOC_NUMBER
WHERE EXCHG_SALE NE ' '
ON TABLE HOLD AS DEBHOLD
END
-RUN
 
 
TABLE FILE DEBHOLD
SUM DOC_NUMBER
BY DOC_NUMBER NOPRINT
WHERE DOC_NUMBER OMITS '0000000000'
ON TABLE SAVE AS DOC1
END
-RUN
 
TABLE FILE EXHLD
SUM ADDCOLLECT
    AIRLINE_FEE
    CLIENT_NAME
    DOC_NUMBER
    EMB_APT_CD
    EX_RF_FLAG
    EXCHG_SALE
    EXG_ISS
    FARE_PAID
    FULL_RFNDS
    INT_DOM
    LEVEL1
    LEVEL_DESC
    NET_TKT_CNT
    PEXG_ISS
    TKT_TYPE
BY LEVEL_DESC
BY PASSNGR_NAME
BY TKT_NUM
BY TKT_SORT
ON TABLE HOLD AS EXHLD1
END
-RUN
 
 
DEFINE FILE EXHLD1
TCOUNT/D12CS = IF TKT_NUM NE LAST TKT_NUM THEN 1 ELSE 0;
END
TABLE FILE EXHLD1
SUM TCOUNT
BY LEVEL_DESC
BY PASSNGR_NAME
BY TKT_NUM
WHERE TKT_TYPE EQ 'P-EX'
ON TABLE HOLD AS PEXHLD
END
-RUN
 
DEFINE FILE PEXHLD
NEW_PCNT/D8 = IF TCOUNT GT 1 THEN 1 ELSE TCOUNT;
END
TABLE FILE PEXHLD
PRINT NEW_PCNT
BY LEVEL_DESC
BY PASSNGR_NAME
BY TKT_NUM
ON TABLE HOLD AS PEXHLD2
END
-RUN
 
 
MATCH FILE EXHLD1
PRINT ADDCOLLECT
    AIRLINE_FEE
    CLIENT_NAME
    DOC_NUMBER
    EMB_APT_CD
    EX_RF_FLAG
    EXCHG_SALE
    EXG_ISS
    FARE_PAID
    FULL_RFNDS
    INT_DOM
    LEVEL1
    LEVEL_DESC
    NET_TKT_CNT
    PEXG_ISS
    TKT_SORT
    TKT_TYPE
BY LEVEL_DESC
BY PASSNGR_NAME
BY TKT_NUM
ON TABLE HOLD
RUN
FILE PEXHLD2
PRINT NEW_PCNT
BY LEVEL_DESC
BY PASSNGR_NAME
BY TKT_NUM
AFTER MATCH HOLD AS TTHLD OLD-OR-NEW
END
-RUN
 
-GOTO NewAmnExtract;
 
DEFINE FILE AMN_ITEM
 CLIENT/A8 = '&&ROLLUP.EVAL';
 ISSUEDATE/YYMD = HDATE(DATE_ISSUED, 'YYMD');
 -*EXPIREDATE/YYMD = HDATE(DATE_EXPIRES, 'YYMD');
 EXPIREDATE/YYMD = HDATE(STATUS_DATE, 'YYMD');
 APPLYDATE/YYMD = HDATE(DATE_SELECTED, 'YYMD');
 DEPART_DT/YYMD = HDATE(DEPART_DATE, 'YYMD');
 PASSNGR_NM/A33 = EDIT(PAX, '999999999999999999999999999999999');
 TRN_DATE/YYMD = ISSUEDATE;
 FST_DPT_DATE/YYMD = DEPART_DT;
 
-*Selections passed from GUI
 BR_CL_IDX/A8 = AGENT_BRANCH | CLIENT_CODE;
 PASSNGR_NAME/A33 = EDIT(PAX, '999999999999999999999999999999999');
 TKT_NUM/A10 = TICKET_NUM;
 VAL_AIRLINE/A3 = AIRLINE_CODE;
 AUX_TKT/A14 = AIRLINE_PNR;
 CUSED_TOT/D12.2 = IF STATUS_CODE EQ 'S' OR 'U' THEN TICKET_VALUE ELSE 0;
 XUNUSED_TOT/D12.2 = IF STATUS_CODE EQ 'X' THEN TICKET_VALUE ELSE 0;
 USED_CNT/D12 = IF TKT_NUM NE LAST TKT_NUM THEN 1 ELSE 0;
END
TABLE FILE AMN_ITEM
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE CLIENT AUX_TKT
      NEW_LEVEL1 NEW_LEVEL2 NEW_LEVEL3 CUSED_TOT XUNUSED_TOT USED_CNT
BY CLIENT
BY STATUS_CODE
BY TKT_NUM
WHERE ROLLUP EQ '&&ROLLUP.EVAL'
 WHERE TYPE_CODE NE 'R'
 WHERE STATUS_CODE EQ 'S' OR 'U'
 WHERE TKT_NUM IN FILE DOC1
ON TABLE HOLD AS AMNEXCHG
END
-RUN
 
 
 
 
-NewAmnExtract
 
-SET &FMM=EDIT(&&FROMDT,'$$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'$$$99');
-SET &TOM=EDIT(&&TODT,'$$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'$$$99');
 
 
-SET &FROMDATE = &FMM || '/' || &FMD || '/' || &FMY;
-SET &TODATE = &TOM || '/' || &TOD || '/' || &TOY;
-TYPE '&FROMDATE.EVAL'
-TYPE '&TODATE.EVAL'
 
 
 
 
ENGINE SQLMSS SET DEFAULT_CONNECTION AMNData
SQL SQLMSS EX USP_REVIEW_ETTEK_BANX  '&FROMDATE.EVAL', '&TODATE.EVAL', '&&ROLLUP.EVAL';
TABLE FILE SQLOUT
PRINT *
ON TABLE HOLD AS AMNHLD2 FORMAT FOCUS
END
-RUN
 
 
 
 
 
DEFINE FILE AMNHLD2
CLIENT/A8 = EDIT(rollup, '99999999');
TYPE_CODE/A1 = type_code;
STATUS_CODE/A1 = status_code;
PASSNGR_NAME/A33 = EDIT(pax, '999999999999999999999999999999999');
APPLYDATE/YYMD = HDATE(date_selected, 'YYMD');
AIRLINE_CODE/A2 = airline_code;
TICKET_VALUE/D12.2 = ticket_value;
DEPART_DT/YYMD = HDATE(depart_date, 'YYMD');
EXPIREDATE/YYMD = HDATE(date_expires, 'YYMD');
NEW_TICKET_NUM/A10 = new_ticket_num;
NEW_TICKET_VALUE/D12.2 = new_ticket_value;
ISSUEDATE/YYMD = HDATE(date_issued, 'YYMD');
ROLLUP/A8 = CLIENT;
BR_CL_IDX/A8 = client_branch | client_code;
TKT_NUM/A10 = ticket_num;
 AUX_TKT/A10 = IF EDIT(TKT_NUM, '9') EQ '2' THEN TKT_NUM ELSE ' ';
 AUX_PNR/A16 = airline_pnr;
 CUSED_TOT/D12.2 = IF STATUS_CODE EQ 'S' OR 'U'  THEN TICKET_VALUE ELSE 0;
 XUNUSED_TOT/D12.2 = IF STATUS_CODE EQ 'X'  THEN TICKET_VALUE ELSE 0;
 
 
NEW_LEVEL1/A15 = EDIT(new_level1, '999999999999999');
NEW_LEVEL2/A15 = EDIT(new_level2, '999999999999999');
NEW_LEVEL3/A15 = EDIT(new_level3, '999999999999999');
TNUM/A16 = IF STATUS_CODE EQ 'X' OR 'U' AND TKT_NUM EQ ' ' THEN AUX_PNR ELSE TKT_NUM;
LEVEL1/A15 = EDIT(new_level1, '999999999999999');
LEVEL2/A15 = EDIT(new_level2, '999999999999999');
LEVEL3/A15 = EDIT(new_level3, '999999999999999');
 USED_CNT/D12 = IF TKT_NUM NE LAST TKT_NUM THEN 1 ELSE 0;
 
END
TABLE FILE AMNHLD2
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE CLIENT AUX_TKT AUX_PNR
      NEW_LEVEL1 AS 'NW_LEV1' NEW_LEVEL2 AS 'NW_LEV2' NEW_LEVEL3 AS 'NW_LEV3' CUSED_TOT XUNUSED_TOT  TNUM
      LEVEL1 LEVEL2 LEVEL3 USED_CNT
BY CLIENT
BY STATUS_CODE
BY TKT_NUM
WHERE ROLLUP EQ '&&ROLLUP.EVAL'
 WHERE STATUS_CODE EQ 'S' OR 'U'
 WHERE TKT_NUM IN FILE DOC1
ON TABLE HOLD AS AMNEXCHG
END
-RUN
 
 
 
TABLE FILE AMNEXCHG
SUM NEW_TICKET_NUM USED_CNT TKT_NUM AS 'DOC_NUMBER'
BY TKT_NUM NOPRINT
ON TABLE HOLD AS AMNHLD
END
-RUN
 
TABLE FILE AMNHLD
SUM DOC_NUMBER
BY DOC_NUMBER NOPRINT
ON TABLE SAVE AS DOC2
END
-RUN
 
TABLE FILE TTHLD
PRINT ADDCOLLECT
    AIRLINE_FEE
    CLIENT_NAME
    DOC_NUMBER
    EMB_APT_CD
    EX_RF_FLAG
    EXCHG_SALE
    EXG_ISS
    FARE_PAID
    FULL_RFNDS
    INT_DOM
    LEVEL1
    LEVEL_DESC
    NET_TKT_CNT
    PASSNGR_NAME
    PEXG_ISS
    TKT_SORT
    TKT_TYPE
    TKT_NUM
    NEW_PCNT
BY  DOC_NUMBER
WHERE  TKT_NUM IN FILE DOC2
ON TABLE HOLD AS HOLD3
END
-RUN
 
DEFINE FILE HOLD3
DOM_FULL_UNUSD/D12C = IF EXG_ISS EQ 1 AND INT_DOM EQ 'D' THEN 1 ELSE 0;
DOM_PART_UNUSD/D12C = IF NEW_PCNT EQ 1 AND INT_DOM EQ 'D' THEN 1 ELSE 0;
INT_FULL_UNUSD/D12C = IF EXG_ISS EQ 1 AND INT_DOM EQ 'I' THEN 1 ELSE 0;
INT_PART_UNUSD/D12C = IF NEW_PCNT EQ 1 AND INT_DOM EQ 'I' THEN 1 ELSE 0;
END
TABLE FILE HOLD3
SUM
    DOM_FULL_UNUSD
    DOM_PART_UNUSD
    INT_FULL_UNUSD
    INT_PART_UNUSD
    EXG_ISS/D12C AS 'TFULL_USD'
    NEW_PCNT/D12C AS 'TPART_USD'
BY CLIENT_NAME
BY LEVEL_DESC
BY PASSNGR_NAME
ON TABLE HOLD AS EXGUSED
END
-RUN
 
 
 
TABLE FILE TTHLD
PRINT ADDCOLLECT
    AIRLINE_FEE
    CLIENT_NAME
    DOC_NUMBER
    EMB_APT_CD
    EX_RF_FLAG
    EXCHG_SALE
    EXG_ISS
    FARE_PAID
    FULL_RFNDS
    INT_DOM
    LEVEL1
    LEVEL_DESC
    NET_TKT_CNT
    PASSNGR_NAME
    PEXG_ISS
    TKT_NUM
    TKT_SORT
    TKT_TYPE
    NEW_PCNT
BY  DOC_NUMBER
WHERE  NOT TKT_NUM IN FILE DOC2
ON TABLE HOLD AS HOLD6
END
-RUN
 
DEFINE FILE HOLD6
DOM_FULL_RCHG/D12C = IF EXG_ISS EQ 1 AND INT_DOM EQ 'D' THEN 1 ELSE 0;
DOM_PART_RCHG/D12C = IF NEW_PCNT EQ 1 AND INT_DOM EQ 'D' THEN 1 ELSE 0;
INT_FULL_RCHG/D12C = IF EXG_ISS EQ 1 AND INT_DOM EQ 'I' THEN 1 ELSE 0;
INT_PART_RCHG/D12C = IF NEW_PCNT EQ 1 AND INT_DOM EQ 'I' THEN 1 ELSE 0;
END
TABLE FILE HOLD6
SUM
    DOM_FULL_RCHG
    DOM_PART_RCHG
    INT_FULL_RCHG
    INT_PART_RCHG
    EXG_ISS/D12C AS 'TFULL_RCHG'
    NEW_PCNT/D12C AS 'TPART_RCHG'
BY CLIENT_NAME
BY LEVEL_DESC
BY PASSNGR_NAME
ON TABLE HOLD AS EXGRCHG
END
-RUN
 
 
MATCH FILE EXGUSED
PRINT  DOM_FULL_UNUSD
       DOM_PART_UNUSD
       INT_FULL_UNUSD
       INT_PART_UNUSD
       TFULL_USD
       TPART_USD
BY CLIENT_NAME
BY LEVEL_DESC
BY PASSNGR_NAME
ON TABLE HOLD
RUN
FILE EXGRCHG
SUM DOM_FULL_RCHG
    DOM_PART_RCHG
    INT_FULL_RCHG
    INT_PART_RCHG
    TFULL_RCHG
    TPART_RCHG
BY CLIENT_NAME
BY LEVEL_DESC
BY PASSNGR_NAME
AFTER MATCH HOLD AS XONE OLD-OR-NEW
END
-RUN
 
DEFINE FILE XONE
ROLL/A8 = '&&ROLLUP.EVAL';
END
TABLE FILE XONE
SUM DOM_FULL_UNUSD
       DOM_PART_UNUSD
       INT_FULL_UNUSD
       INT_PART_UNUSD
       TFULL_USD
       TPART_USD
       DOM_FULL_RCHG
       DOM_PART_RCHG
       INT_FULL_RCHG
       INT_PART_RCHG
       TFULL_RCHG
       TPART_RCHG
       ROLL
BY CLIENT_NAME
BY LEVEL_DESC
BY PASSNGR_NAME
ON TABLE HOLD AS FINALHLD
END
-RUN
 
 
-SET &&NOEXCHREC = IF &LINES EQ 0 THEN 'Y' ELSE 'N';
 
-IF &&NOEXCHREC EQ 'Y' THEN GOTO XXITA;
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF1;
-INCLUDE AVRP_SUBFOOT
-:AVSF1
 
JOIN ROLL WITH LEVEL_DESC IN FINALHLD TO ROLLUP_CODE IN ROLLUP AS J3
-RUN
 
 
-* Final Defines
DEFINE FILE FINALHLD
 
NOWTOD/A8 WITH ROLL = HHMMSS (NOWTOD);
ROLL_BR/A2 = ROLL_HOME_BR;
TITLEF/A20 = 'Full Exchange';
TITLEP/A20 = 'Partial Exchange';
TITLEU/A20 = 'Unused Ticket';
TITLER/A20 = 'Res Change';
BLANK/A1 = ' ';
END
 
-SET &&RPTSUF = 'SMY';
 
-INCLUDE FDEFRPTS
-RUN
 
-SET &&PAHDR = IF '&&OUTFMT.EVAL' EQ 'PDF' OR 'PPT' OR 'COM' THEN 'HEADER' ELSE 'HDREXLS';
-SET &&PASTYS = IF '&&OUTFMT.EVAL' NE 'PDF' OR 'PPT' OR 'COM' THEN 'SMEXL' ELSE &&SMSTY;
-RUN
 
TABLE FILE FINALHLD
-INCLUDE &&PAHDR
"</1"
HEADING
-*"<+0><BLANK<+0><BLANK<+0><BLANK<+0><TITLEF<+0><TITLEF<+0><TITLEP<+0><TITLEP<+0>"
-*"<+0><BLANK<+0><BLANK<+0><BLANK<+0><TITLEU<+0><TITLER<+0><TITLEU<+0><TITLER<+0>"
"<+0> <+0> <+0> <+0><TITLEF<+0><TITLEF<+0><TITLEP<+0><TITLEP<+0>"
"<+0> <+0> <+0> <+0><TITLEU<+0><TITLER<+0><TITLEU<+0><TITLER<+0>"
 
-*"&&SUBHEAD"
-*-IF &&PAHDR EQ 'HDREXLS' GOTO NOSPC;
 
-NOSPC;
    &&S_SUBJ1
    &&S_SUBJ2
    &&S_SUBJ3
    &&S_SUBJ4
    &&S_SUBJ5
    &&S_SUBJ6
    &&S_SUBJ7
    &&S_SUBJ8
    &&S_SUBJ9
    &&S_SUBJ10
 
-*BY
   &&S_TARG1
   &&S_TARG2
   &&S_TARG3
   &&S_TARG4
   &&S_TARG5
   &&S_TARG6
   &&S_TARG7
   &&S_TARG8
   &&S_TARG9
   &&S_TARG10
-*ON
   &&SUMM_ON1
   &&SUMM_ON2
   &&SUMM_ON3
   &&SUMM_ON4
   &&SUMM_ON5
   &&SUMM_ON6
   &&SUMM_ON7
   &&SUMM_ON8
   &&SUMM_ON9
   &&SUMM_ON10
 
 
 
 
-INCLUDE FOOTERSM
 
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT
ON TABLE SET STYLE *

-IF &&OVERDRILL EQ 'Y' GOTO OVERDRILL;

TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N4, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='DFU' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N5, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='IFU' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N6, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='DFRC' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N7, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='IFRC' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N8, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='DPU' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N9, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='IPU' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N10, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='DPRC' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA, COLOR=RGB(0 0 138), JUSTIFY=LEFT, COLUMN=N11, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DREXAMN' ROW_LABEL=N2 FLAG='IPRC' LSEL=CLIENT_NAME\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $


-OVERDRILL;
 
-INCLUDE GLOBAL_LOGO_SM
 
UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.500000, RIGHTMARGIN=0.250000,
    TOPMARGIN=0.500000, BOTTOMMARGIN=0.250000, SQUEEZE=ON,
    ORIENTATION=LANDSCAPE, $
TYPE=REPORT, FONT=TIMES NEW ROMAN, SIZE=8, BACKCOLOR=NONE, STYLE=NORMAL, $
TYPE=HEADING, SIZE=8, STYLE=BOLD, FONT='ARIAL', COLOR=RGB(31 114 164), BACKCOLOR=NONE, $
TYPE=HEADING, HEADALIGN=BODY, $
TYPE=HEADING, LINE=1, COLSPAN=2, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=2, COLSPAN=2, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=3, COLSPAN=10, SIZE=9, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=4, COLSPAN=10, SIZE=9,JUSTIFY=CENTER, $
TYPE=HEADING, LINE=5, COLSPAN=2, JUSTIFY=LEFT, $
-*TYPE=HEADING, LINE=7, COLSPAN=2, ITEM=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=7, COLSPAN=2, ITEM=4, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=7, COLSPAN=2, ITEM=5, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=7, COLSPAN=2, ITEM=6, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=7, COLSPAN=2, ITEM=7, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=8, COLSPAN=2, ITEM=4, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=8, COLSPAN=2, ITEM=5, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=8, COLSPAN=2, ITEM=6, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=8, COLSPAN=2, ITEM=7, JUSTIFY=CENTER, $
TYPE=TABFOOTING, FONT=ARIAL, COLOR=GRAY,$
 
TYPE=FOOTING, FONT=ARIAL, COLOR=GRAY,$
 
TYPE=SUBHEAD,
     SIZE=9,
     STYLE=BOLD,
$
 
TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
 
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9,
     COLOR='WHITE',
     BACKCOLOR=RGB(31 114 164),
     STYLE=BOLD,$
 
 
TYPE=SUBFOOT, SIZE=8, JUSTIFY=LEFT, STYLE=BOLD, $
 
TYPE=SUBTOTAL,
     STYLE=BOLD,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER', $
 
TYPE=SUBTOTAL, JUSTIFY=LEFT, STYLE=BOLD, $
 
TYPE=GRANDTOTAL, JUSTIFY=LEFT, STYLE=BOLD, $
TYPE=REPORT, COLUMN=N1, JUSTIFY=LEFT, SQUEEZE=1.75, $
 
TYPE=REPORT, COLUMN=N2, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N3, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N4, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N5, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N6, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N7, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N8, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N9, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N10, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N11, JUSTIFY=LEFT, SQUEEZE=1.0, $
TYPE=REPORT, COLUMN=N12, JUSTIFY=LEFT, SQUEEZE=1.0, $
 
ENDSTYLE
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN
 
 
-XXITA;
 
