-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* JK Added Level2, Level3 9/16/04
-* DV ADDED CODE FOR GLOBAL CURRENCY 1/6/05
-* DV ADDED SORT BY LEVEL1 FOR CONG 4/7/08
-* JK ADDED TOTAL PNR COUNT AND INTL/DOM %S 7/23/14
-* DV ADDED LEVEL4   04/23/15  S-08549 

-INCLUDE SETECHO
SET ASNAMES=ON

-SET &&RPTSUF = 'SMY';

-INCLUDE FDEFRPTS
-RUN

-SET &&RANK_METH = NET_TKT_CNT;
-SET &&RANK_LIMIT = 9999;

DEFINE FILE TPAIRBZ
FLAG/A1 = 'A';
END
TABLE FILE TPAIRBZ
SUM DOM_CNT/P8 AS 'TNETTD'
    INT_CNT/P8 AS 'TNETTI'
BY FLAG
ON TABLE HOLD AS TH1
END

TABLE FILE TPAIRBZ 
PRINT DISSAVINGS
    FARE_PAID
    KILO 
    LEVEL1
    LEVEL2
    LEVEL3
    LEVEL4
    LEVEL_DESC
    NET_TKT_CNT
    NEW_SEG_MILES
    B_CNT
    B_FARE
    B_LSAV
    B_MIL
    B_CPMILE 
    P_CNT
    P_FARE
    P_LSAV
    P_MIL
    P_CPMILE  
    D_CNT
    D_FARE
    D_LSAV
    D_MIL
    D_CPMILE  
    E_CNT
    E_FARE
    E_LSAV
    E_MIL
    E_CPMILE     
    F_CNT
    F_FARE
    F_LSAV
    F_MIL
    F_CPMILE      
    U_CNT
    U_FARE
    U_LSAV
    U_MIL
    U_CPMILE
    DOM_CNT
    INT_CNT
    PNR_CNT
    PASSNGR_NAME  
    LEVEL_DESC
BY FLAG
ON TABLE HOLD AS JOY1
END

MATCH FILE JOY1
PRINT DISSAVINGS
    FARE_PAID
    KILO 
    LEVEL1
    LEVEL2
    LEVEL3
    LEVEL4
    LEVEL_DESC
    NET_TKT_CNT
    NEW_SEG_MILES
    B_CNT
    B_FARE
    B_LSAV
    B_MIL
    B_CPMILE 
    P_CNT
    P_FARE
    P_LSAV
    P_MIL
    P_CPMILE  
    D_CNT
    D_FARE
    D_LSAV
    D_MIL
    D_CPMILE  
    E_CNT
    E_FARE
    E_LSAV
    E_MIL
    E_CPMILE     
    F_CNT
    F_FARE
    F_LSAV
    F_MIL
    F_CPMILE      
    U_CNT
    U_FARE
    U_LSAV
    U_MIL
    U_CPMILE
    DOM_CNT
    INT_CNT
    PNR_CNT
    PASSNGR_NAME  
    LEVEL_DESC
BY FLAG
ON TABLE HOLD
RUN
FILE TH1
SUM TNETTD
    TNETTI
BY FLAG
AFTER MATCH HOLD AS TPAIRBZ1 OLD-OR-NEW
END
-RUN


MATCH FILE TPAIRBZ1
PRINT DISSAVINGS
    FARE_PAID
    KILO 
    LEVEL1
    LEVEL2
    LEVEL3
    LEVEL4
    LEVEL_DESC
    NET_TKT_CNT
    NEW_SEG_MILES
    B_CNT
    B_FARE
    B_LSAV
    B_MIL
    B_CPMILE 
    P_CNT
    P_FARE
    P_LSAV
    P_MIL
    P_CPMILE  
    D_CNT
    D_FARE
    D_LSAV
    D_MIL
    D_CPMILE  
    E_CNT
    E_FARE
    E_LSAV
    E_MIL
    E_CPMILE     
    F_CNT
    F_FARE
    F_LSAV
    F_MIL
    F_CPMILE      
    U_CNT
    U_FARE
    U_LSAV
    U_MIL
    U_CPMILE
    DOM_CNT
    INT_CNT
    PNR_CNT
    TNETTD
    TNETTI
BY PASSNGR_NAME  
BY LEVEL_DESC
ON TABLE HOLD
RUN
FILE TPBZHTL
SUM HPNR_CNT
  NBR_DAY
  NBR_ROOMS
  NNROOMS
  NEW_TOTAL_AMT
BY PASSNGR_NAME
BY LEVEL_DESC
AFTER MATCH HOLD AS XONE OLD-OR-NEW
END
-RUN

MATCH FILE XONE
PRINT DISSAVINGS
    FARE_PAID
    KILO
    LEVEL1
    LEVEL2
    LEVEL3
    LEVEL4
-*     LEVEL_DESC
    NET_TKT_CNT
    NEW_SEG_MILES
    NBR_DAY
    NBR_ROOMS
    NNROOMS
    NEW_TOTAL_AMT
    B_CNT
    B_FARE
    B_LSAV
    B_MIL
    B_CPMILE 
    P_CNT
    P_FARE
    P_LSAV
    P_MIL
    P_CPMILE  
    D_CNT
    D_FARE
    D_LSAV
    D_MIL
    D_CPMILE
    E_CNT
    E_FARE
    E_LSAV
    E_MIL
    E_CPMILE     
    F_CNT
    F_FARE
    F_LSAV
    F_MIL
    F_CPMILE         
    U_CNT
    U_FARE
    U_LSAV
    U_MIL
    U_CPMILE
    DOM_CNT
    INT_CNT
    PNR_CNT 
    HPNR_CNT
    TNETTD
    TNETTI
BY PASSNGR_NAME 
BY LEVEL_DESC
ON TABLE HOLD
RUN
FILE TPBZCAR
PRINT CPNR_CNT
    NBR_DAYS
    NUM_CARS
    RENTAL_DAYS
    NEW_RENTAL_AMT
BY PASSNGR_NAME
BY LEVEL_DESC
AFTER MATCH HOLD AS XTWO OLD-OR-NEW
END
-RUN

MATCH FILE XTWO
PRINT DISSAVINGS
    FARE_PAID
    KILO
    LEVEL1
    LEVEL2
    LEVEL3
    LEVEL4
    NET_TKT_CNT
    NEW_SEG_MILES
    NBR_DAY
    NBR_ROOMS
    NNROOMS
    NEW_TOTAL_AMT
    B_CNT
    B_FARE
    B_LSAV
    B_MIL
    B_CPMILE 
    P_CNT
    P_FARE
    P_LSAV
    P_MIL
    P_CPMILE  
    D_CNT
    D_FARE
    D_LSAV
    D_MIL
    D_CPMILE 
    E_CNT
    E_FARE
    E_LSAV
    E_MIL
    E_CPMILE     
    F_CNT
    F_FARE
    F_LSAV
    F_MIL
    F_CPMILE         
    U_CNT
    U_FARE
    U_LSAV
    U_MIL
    U_CPMILE
    NBR_DAYS
    NUM_CARS
    RENTAL_DAYS
    NEW_RENTAL_AMT
    DOM_CNT
    INT_CNT
    PNR_CNT
    HPNR_CNT
    CPNR_CNT   
    TNETTD
    TNETTI
BY PASSNGR_NAME
BY LEVEL_DESC
ON TABLE HOLD
RUN
FILE TPLIMHLD2
SUM 
  LRNTL_AMT
  LRENTAL_DAYS
  LNBR_DAYS
  NUM_LCARS
  LPNR_CNT
  LBOOK
BY PASSNGR_NAME
BY LEVEL_DESC
AFTER MATCH HOLD AS XTHREE OLD-OR-NEW
END
-RUN


DEFINE FILE XTHREE
XPSNGR_NM/A15        = 
  EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
END
TABLE FILE XTHREE
PRINT  
    DISSAVINGS
    FARE_PAID
    KILO
    LEVEL1
    LEVEL2
    LEVEL3
    LEVEL4
    LEVEL_DESC
    NET_TKT_CNT
    NEW_RENTAL_AMT 
    NEW_SEG_MILES
    NNROOMS
    NUM_CARS
    RENTAL_DAYS
    NEW_TOTAL_AMT
    XPSNGR_NM
    B_CNT
    B_FARE
    B_LSAV
    B_MIL
    B_CPMILE 
    P_CNT
    P_FARE
    P_LSAV
    P_MIL
    P_CPMILE 
    D_CNT
    D_FARE
    D_LSAV
    D_MIL
    D_CPMILE  
    E_CNT
    E_FARE
    E_LSAV
    E_MIL
    E_CPMILE     
    F_CNT
    F_FARE
    F_LSAV
    F_MIL
    F_CPMILE         
    U_CNT
    U_FARE
    U_LSAV
    U_MIL
    U_CPMILE
    LRNTL_AMT
    LRENTAL_DAYS
    LNBR_DAYS
    NUM_LCARS
    LBOOK
    DOM_CNT
    INT_CNT
    PNR_CNT
    HPNR_CNT
    CPNR_CNT
    LPNR_CNT
    TNETTD
    TNETTI
RANKED BY &&RANK_ORDER &&RANK_METH 
-* RANKED BY HIGHEST &&RANK_METH
BY PASSNGR_NAME
ON TABLE HOLD AS TOPAIRPX
END
-RUN 

DEFINE FILE TOPAIRPX
  DRANK/D9 = RANK;
  ARANKX/A11 = FTOA(DRANK, '(D9)', 'A11');
  ARANK/A9 = EDIT(ARANKX,'$$999999999');
  LIST/D9 = (LAST LIST + 1);
  CRANKX/A11 = FTOA(LIST, '(D9)', 'A11');
  CRANK/A9 = EDIT(CRANKX,'$$999999999');
  RANK_VALUE/A9 = IF &&RANK_LIMIT EQ 0 THEN ARANK ELSE 
                  IF LIST GT &&RANK_LIMIT THEN 'ALL OTHER' ELSE 
                  CRANK;
  RANK_VAL/A9 = IF &&RANK_LIMIT EQ 0 THEN ARANK ELSE
                IF RANK GT &&RANK_LIMIT THEN 'ALL OTHER' ELSE
                ARANK;
  RANK_LAB1/A60 = IF RANK_VAL NE 'ALL OTHER' THEN &&RANK_LABEL1
                  ELSE 'ALL OTHER';
  RANK_LABEL1/A60 = IF RANK_VALUE NE 'ALL OTHER' THEN &&RANK_LABEL1
                      ELSE ' ';
  RANK_LABEL2/A60 = IF RANK_VALUE NE 'ALL OTHER' THEN &&RANK_LABEL2
                      ELSE ' ';
  RANK_LABEL3/A60 = IF RANK_VALUE NE 'ALL OTHER' THEN &&RANK_LABEL3
                      ELSE ' ';
  BLANK/A5 = '     ';
  NOWTOD/A8 WITH RANK = HHMMSS (NOWTOD);
  LVL1/A15 = IF RANK_VALUE NE 'ALL OTHER' THEN LEVEL1 ELSE ' ';
  LVL2/A15 = IF RANK_VALUE NE 'ALL OTHER' THEN LEVEL2 ELSE ' ';
  LV_DSC/A60 = IF RANK_VALUE NE 'ALL OTHER' THEN LEVEL_DESC ELSE ' ';
  XPSNGR_NM2/A12        = 
  EDIT(XPSNGR_NM,'999999999999');
-*  KEY/A1 = 
TPNR_CNT/P8CS = PNR_CNT + CPNR_CNT + LPNR_CNT + HPNR_CNT;

END

TABLE FILE TOPAIRPX
SUM 
   FARE_PAID
   KILO/D12
   LEVEL1
   LEVEL2
   LEVEL3
   LEVEL4
   NET_TKT_CNT
   NEW_SEG_MILES
   DISSAVINGS
   NNROOMS
   NEW_TOTAL_AMT
   RENTAL_DAY
   NEW_RENTAL_AMT
   CRANK
   ARANK
   XPSNGR_NM
   XPSNGR_NM2
    B_CNT
    B_FARE
    B_LSAV
    B_MIL
    B_CPMILE 
    P_CNT
    P_FARE
    P_LSAV
    P_MIL
    P_CPMILE 
    D_CNT
    D_FARE
    D_LSAV
    D_MIL
    D_CPMILE 
    E_CNT
    E_FARE
    E_LSAV
    E_MIL
    E_CPMILE     
    F_CNT
    F_FARE
    F_LSAV
    F_MIL
    F_CPMILE        
    U_CNT
    U_FARE
    U_LSAV
    U_MIL
    U_CPMILE
    LRNTL_AMT
    LRENTAL_DAYS
    LNBR_DAYS
    NUM_LCARS
    LBOOK
    DOM_CNT
    INT_CNT
    PNR_CNT
    HPNR_CNT
    CPNR_CNT 
    LPNR_CNT
BY RANK_VALUE
BY PASSNGR_NAME
BY LV_DSC
ON TABLE HOLD AS DEBTEST FORMAT ALPHA
END
-RUN

TABLE FILE TOPAIRPX
SUM NET_TKT_CNT AS '# AIR,TICKETS' 
TPNR_CNT AS 'TOTAL,PNR,COUNT'
FARE_PAID/D12.2CSM AS 'AIR,COST'
COMPUTE AVGA/D12.2CSM = IF ((NET_TKT_CNT LT 1) AND (NET_TKT_CNT GT (-1))) THEN 0 ELSE 
                       (FARE_PAID/NET_TKT_CNT); AS 'AIR,AVG,COST' 
NEW_SEG_MILES AS 'AIR,MILES' 
COMPUTE  CPMILE/D12.2CSM = IF ((NEW_SEG_MILES LT 1) AND (NEW_SEG_MILES GT (-1))) THEN 0 ELSE
                      (FARE_PAID/NEW_SEG_MILES); AS 'COST,PER,MILE'
DISSAVINGS/D12.2CSM AS 'AIR,LOST,SVGS'
COMPUTE PCTD/D8% = IF NET_TKT_CNT EQ 0 THEN 0 ELSE DOM_CNT/NET_TKT_CNT*100; AS '% DOM,NET,TKTS'
COMPUTE PCTI/D8% = IF NET_TKT_CNT EQ 0 THEN 0 ELSE INT_CNT/NET_TKT_CNT*100; AS '% INT,NET,TKTS'                     
BLANK AS '' 

F_CNT AS 'FIRST,#AIR,TICKETS' 
F_FARE/D12.2CSM AS 'FIRST,AIR,COST'
COMPUTE FAVGA/D12.2CSM = IF ((F_CNT LT 1) AND (F_CNT GT (-1))) THEN 0 ELSE 
                       (F_FARE/F_CNT); AS 'FIRST,AVG,COST' 
F_MIL AS 'FIRST,AIR,MILES' 
COMPUTE  FCPMILE/D12.2CSM = IF ((F_MIL LT 1) AND (F_MIL GT (-1))) THEN 0 ELSE
                      (F_FARE/F_MIL); AS 'FIRST,CPM'
F_LSAV/D12.2CSM AS 'FIRST,LOST,SVGS'
BLANK AS '' 

B_CNT AS 'BUSINESS,# AIR,TICKETS' 
B_FARE/D12.2CSM AS 'BUSINESS,AIR,COST'
COMPUTE BAVGA/D12.2CSM = IF ((B_CNT LT 1) AND (B_CNT GT (-1))) THEN 0 ELSE 
                       (B_FARE/B_CNT); AS 'BUSINESS,AVG,COST' 
B_MIL AS 'BUSINESS,AIR,MILES' 
COMPUTE  BCPMILE/D12.2CSM = IF ((B_MIL LT 1) AND (B_MIL GT (-1))) THEN 0 ELSE
                      (B_FARE/B_MIL); AS 'BUSINESS,CPM'
B_LSAV/D12.2CSM AS 'BUSINESS,LOST,SVGS'
BLANK AS '' 

P_CNT AS 'PREMIUM,ECONOMY,# AIR,TICKETS' 
P_FARE/D12.2CSM AS 'PREMIUM,ECONOMY,AIR COST'
COMPUTE PAVGA/D12.2CSM = IF ((P_CNT LT 1) AND (P_CNT GT (-1))) THEN 0 ELSE 
                           (P_FARE/P_CNT); AS 'PREMIUM,ECONOMY,AVG COST' 
P_MIL AS 'PREMIUM,ECONOMY,AIR,MILES' 
COMPUTE  PCPMILE/D12.2CSM = IF ((P_MIL LT 1) AND (P_MIL GT (-1))) THEN 0 ELSE
                      (P_FARE/P_MIL); AS 'PREMIUM,ECONOMY,CPM'
P_LSAV/D12.2CSM AS 'PREMIUM,ECONOMY,LOST SVGS'

BLANK AS '' 
E_CNT AS 'ECONOMY,# AIR,TICKETS' 
E_FARE/D12.2CSM AS 'ECONOMY,AIR,COST'
COMPUTE EAVGA/D12.2CSM = IF ((E_CNT LT 1) AND (E_CNT GT (-1))) THEN 0 ELSE 
                           (E_FARE/E_CNT); AS 'ECONOMY,AVG,COST' 
E_MIL AS 'ECONOMY,AIR,MILES' 
COMPUTE  ECPMILE/D12.2CSM = IF ((E_MIL LT 1) AND (E_MIL GT (-1))) THEN 0 ELSE
                      (E_FARE/E_MIL); AS 'ECONOMY,CPM'
E_LSAV/D12.2CSM AS 'ECONOMY,LOST,SVGS'
BLANK AS '' 
U_CNT AS 'UPGRADE,# AIR,TICKETS' 
U_FARE/D12.2CSM AS 'UPGRADE,AIR,COST'
COMPUTE DAVGA/D12.2CSM = IF ((U_CNT LT 1) AND (U_CNT GT (-1))) THEN 0 ELSE 
                       (U_FARE/U_CNT); AS 'UPGRADE,AVG,COST' 
U_MIL AS 'UPGRADE,AIR,MILES' 
COMPUTE  UCPMILE/D12.2CSM = IF ((U_MIL LT 1) AND (U_MIL GT (-1))) THEN 0 ELSE
                      (U_FARE/U_MIL); AS 'UPGRADE,CPM'
U_LSAV/D12.2CSM AS 'UPGRADE,LOST,SVGS'
BLANK AS ''
D_CNT AS 'DEFAULT,# AIR,TICKETS' 
D_FARE/D12.2CSM AS 'DEFAULT,AIR,COST'
COMPUTE DAVGA/D12.2CSM = IF ((D_CNT LT 1) AND (D_CNT GT (-1))) THEN 0 ELSE 
                       (D_FARE/D_CNT); AS 'DEFAULT,AVG,COST' 
D_MIL AS 'DEFAULT,AIR,MILES' 
COMPUTE  DCPMILE/D12.2CSM = IF ((D_MIL LT 1) AND (D_MIL GT (-1))) THEN 0 ELSE
                      (D_FARE/D_MIL); AS 'DEFAULT,CPM'
D_LSAV/D12.2CSM AS 'DEFAULT,LOST,SVGS'
BLANK AS '' 

NNROOMS/D8CS AS 'HTL,NIGHTS' 
NEW_TOTAL_AMT/D12.2CSM AS 'HTL,COST' 
COMPUTE AVGH/D12.2CSM = IF  ((NNROOMS LT 1) AND (NNROOMS GT (-1))) THEN 0 ELSE  
                       (NEW_TOTAL_AMT/NNROOMS); AS 'HTL,AVG'
BLANK AS '' 
RENTAL_DAYS AS 'CAR,DAYS'
NEW_RENTAL_AMT/D12.2CSM AS 'CAR,COST'
COMPUTE AVGC/D12.2CSM = IF ((RENTAL_DAYS LT 1) AND (RENTAL_DAYS GT (-1))) THEN 0 ELSE 
                       (NEW_RENTAL_AMT/RENTAL_DAYS); AS 'CAR,AVG'


BLANK AS '' 
-*LRENTAL_DAYS AS 'LIMO,DAYS'
LBOOK/D8CS AS 'LIMO,BOOKINGS'
LRNTL_AMT/D12.2CSM AS 'LIMO,COST'
-*COMPUTE AVGL/D12.2CS = IF ((LRENTAL_DAYS LT 1) AND (LRENTAL_DAYS GT (-1))) THEN 0 ELSE 
-*                       (LRNTL_AMT/LRENTAL_DAYS); AS 'LIMO,AVG'
COMPUTE AVGL/D12.2CSM = IF ((LBOOK LT 1) AND (LBOOK GT (-1))) THEN 0 ELSE 
                       (LRNTL_AMT/LBOOK); AS 'LIMO,AVG'
BY RANK_VALUE AS 'RANK'
BY RANK_LABEL1 AS 'PASSENGER NAME'
BY LEVEL4 AS 'EMPLOYEE ID'
BY LV_DSC AS 'HIERARCHY'


HEADING
 -INCLUDE HEADER
"&&SUBHEAD"
"</2"

FOOTING BOTTOM
"&&FOOTER1"
"&&FOOTER2"
"Default contains MCOS, penalty amounts, refund/exchange adjustments and unknown classes of service"
" "
ON TABLE SET PAGE-NUM OFF
ON RANK_LABEL1 RECOMPUTE MULTILINES AS 'TOTAL'
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT


ON TABLE SET STYLE *

UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.250000, RIGHTMARGIN=0.250000, 
    TOPMARGIN=0.500000, BOTTOMMARGIN=0.250000, SQUEEZE=ON, 
    ORIENTATION=LANDSCAPE, $
TYPE=REPORT, FONT=ARIAL, JUSTIFY=LEFT, SIZE=8, BACKCOLOR=NONE, STYLE=NORMAL, $
TYPE=REPORT, COLUMN=N1, WRAP=0.50,$
TYPE=REPORT, COLUMN=N2, WRAP=1.8,$
TYPE=REPORT, COLUMN=N3, WRAP=1.0,$
TYPE=REPORT, COLUMN=N4, WRAP=0.75,$
TYPE=REPORT, COLUMN=N5, WRAP=0.75,$
TYPE=REPORT, COLUMN=N6, WRAP=0.75,$
TYPE=REPORT, COLUMN=N7, WRAP=0.75,$
TYPE=REPORT, COLUMN=N8, WRAP=0.75,$
-*TYPE=REPORT, COLUMN=N9, WRAP=0.25,$
TYPE=REPORT, COLUMN=N10, WRAP=0.75,$
TYPE=REPORT, COLUMN=N11, WRAP=0.75,$
TYPE=REPORT, COLUMN=N12, WRAP=0.75,$
TYPE=REPORT, COLUMN=N13, WRAP=0.75,$
TYPE=REPORT, COLUMN=N14, WRAP=0.75,$
TYPE=REPORT, COLUMN=N15, WRAP=0.75,$
-*TYPE=REPORT, COLUMN=N16, WRAP=0.25,$
TYPE=REPORT, COLUMN=N17, WRAP=0.75,$
TYPE=REPORT, COLUMN=N18, WRAP=0.75,$
TYPE=REPORT, COLUMN=N19, WRAP=0.75,$
TYPE=REPORT, COLUMN=N20, WRAP=0.75,$
TYPE=REPORT, COLUMN=N21, WRAP=0.75,$
TYPE=REPORT, COLUMN=N22, WRAP=0.75,$
-*TYPE=REPORT, COLUMN=N23, WRAP=0.25,$
TYPE=REPORT, COLUMN=N24, WRAP=0.75,$
TYPE=REPORT, COLUMN=N25, WRAP=0.75,$
TYPE=REPORT, COLUMN=N26, WRAP=0.75,$
TYPE=REPORT, COLUMN=N27, WRAP=0.75,$
TYPE=REPORT, COLUMN=N28, WRAP=0.75,$
TYPE=REPORT, COLUMN=N29, WRAP=0.75,$
-*TYPE=REPORT, COLUMN=N30, WRAP=0.25,$
TYPE=REPORT, COLUMN=N31, WRAP=0.75,$
TYPE=REPORT, COLUMN=N32, WRAP=0.75,$
TYPE=REPORT, COLUMN=N33, WRAP=0.75,$
TYPE=REPORT, COLUMN=N34, WRAP=0.75,$
TYPE=REPORT, COLUMN=N35, WRAP=0.75,$
TYPE=REPORT, COLUMN=N36, WRAP=0.75,$
TYPE=REPORT, COLUMN=N38, WRAP=0.75,$
TYPE=REPORT, COLUMN=N39, WRAP=0.75,$
TYPE=REPORT, COLUMN=N40, WRAP=0.75,$
TYPE=REPORT, COLUMN=N41, WRAP=0.75,$
TYPE=REPORT, COLUMN=N42, WRAP=0.75,$
TYPE=REPORT, COLUMN=N43, WRAP=0.75,$
TYPE=REPORT, COLUMN=N44, WRAP=0.75,$
TYPE=REPORT, COLUMN=N45, WRAP=0.75,$
TYPE=REPORT, COLUMN=N46, WRAP=0.75,$
TYPE=REPORT, COLUMN=N47, WRAP=0.75,$
TYPE=REPORT, COLUMN=N48, WRAP=0.75,$
TYPE=REPORT, COLUMN=N49, WRAP=0.75,$
TYPE=REPORT, COLUMN=N50, WRAP=0.75,$
TYPE=REPORT, COLUMN=N51, WRAP=0.75,$
TYPE=REPORT, COLUMN=N52, WRAP=0.75,$
TYPE=REPORT, COLUMN=N53, WRAP=0.75,$
TYPE=REPORT, COLUMN=N54, WRAP=0.75,$
TYPE=REPORT, COLUMN=N55, WRAP=0.75,$
TYPE=REPORT, COLUMN=N61, WRAP=0.75,$
TYPE=REPORT, COLUMN=N62, WRAP=0.75,$
TYPE=REPORT, COLUMN=N63, WRAP=0.75,$
TYPE=REPORT, COLUMN=N64, WRAP=0.75,$
TYPE=REPORT, COLUMN=N65, WRAP=0.75,$
TYPE=REPORT, COLUMN=N66, WRAP=0.75,$

TYPE=DATA, STYLE=BOLD, COLUMN=N15, BACKCOLOR=RGB(255 248 155),$
TYPE=DATA, STYLE=BOLD, COLUMN=N16, BACKCOLOR=RGB(255 248 155),$
TYPE=DATA, STYLE=BOLD, COLUMN=N17, BACKCOLOR=RGB(255 248 155),$
TYPE=DATA, STYLE=BOLD, COLUMN=N18, BACKCOLOR=RGB(255 248 155),$
TYPE=DATA, STYLE=BOLD, COLUMN=N19, BACKCOLOR=RGB(255 248 155),$
TYPE=DATA, STYLE=BOLD, COLUMN=N20, BACKCOLOR=RGB(255 248 155),$

TYPE=DATA, STYLE=BOLD, COLUMN=N22, BACKCOLOR=RGB(164 238 244),$
TYPE=DATA, STYLE=BOLD, COLUMN=N23, BACKCOLOR=RGB(164 238 244),$
TYPE=DATA, STYLE=BOLD, COLUMN=N24, BACKCOLOR=RGB(164 238 244),$
TYPE=DATA, STYLE=BOLD, COLUMN=N25, BACKCOLOR=RGB(164 238 244),$
TYPE=DATA, STYLE=BOLD, COLUMN=N26, BACKCOLOR=RGB(164 238 244),$
TYPE=DATA, STYLE=BOLD, COLUMN=N27, BACKCOLOR=RGB(164 238 244),$

TYPE=DATA, STYLE=BOLD, COLUMN=N29, BACKCOLOR=RGB(255 181 145),$
TYPE=DATA, STYLE=BOLD, COLUMN=N30, BACKCOLOR=RGB(255 181 145),$
TYPE=DATA, STYLE=BOLD, COLUMN=N31, BACKCOLOR=RGB(255 181 145),$
TYPE=DATA, STYLE=BOLD, COLUMN=N32, BACKCOLOR=RGB(255 181 145),$
TYPE=DATA, STYLE=BOLD, COLUMN=N33, BACKCOLOR=RGB(255 181 145),$
TYPE=DATA, STYLE=BOLD, COLUMN=N34, BACKCOLOR=RGB(255 181 145),$

TYPE=DATA, STYLE=BOLD, COLUMN=N36, BACKCOLOR=RGB(189 255 189),$
TYPE=DATA, STYLE=BOLD, COLUMN=N37, BACKCOLOR=RGB(189 255 189),$
TYPE=DATA, STYLE=BOLD, COLUMN=N38, BACKCOLOR=RGB(189 255 189),$
TYPE=DATA, STYLE=BOLD, COLUMN=N39, BACKCOLOR=RGB(189 255 189),$
TYPE=DATA, STYLE=BOLD, COLUMN=N40, BACKCOLOR=RGB(189 255 189),$
TYPE=DATA, STYLE=BOLD, COLUMN=N41, BACKCOLOR=RGB(189 255 189),$

TYPE=DATA, STYLE=BOLD, COLUMN=N43, BACKCOLOR=RGB(171 130 255),$
TYPE=DATA, STYLE=BOLD, COLUMN=N44, BACKCOLOR=RGB(171 130 255),$
TYPE=DATA, STYLE=BOLD, COLUMN=N45, BACKCOLOR=RGB(171 130 255),$
TYPE=DATA, STYLE=BOLD, COLUMN=N46, BACKCOLOR=RGB(171 130 255),$
TYPE=DATA, STYLE=BOLD, COLUMN=N47, BACKCOLOR=RGB(171 130 255),$
TYPE=DATA, STYLE=BOLD, COLUMN=N48, BACKCOLOR=RGB(171 130 255),$

TYPE=DATA, STYLE=BOLD, COLUMN=N50, BACKCOLOR=RGB(218 150 148),$
TYPE=DATA, STYLE=BOLD, COLUMN=N51, BACKCOLOR=RGB(218 150 148),$
TYPE=DATA, STYLE=BOLD, COLUMN=N52, BACKCOLOR=RGB(218 150 148),$
TYPE=DATA, STYLE=BOLD, COLUMN=N53, BACKCOLOR=RGB(218 150 148),$
TYPE=DATA, STYLE=BOLD, COLUMN=N54, BACKCOLOR=RGB(218 150 148),$
TYPE=DATA, STYLE=BOLD, COLUMN=N55, BACKCOLOR=RGB(218 150 148),$

TYPE=HEADING, LINE=4, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=5, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=6, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=7, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=8, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=10, SIZE=9, STYLE=BOLD, COLOR=GREY, $
TYPE=HEADING, LINE=11, SIZE=12, STYLE=BOLD+ITALIC, FONT=COURIER NEW, $
TYPE=HEADING, LINE=12, SIZE=12, STYLE=BOLD+ITALIC, FONT=COURIER NEW, $
TYPE=HEADING, LINE=13, SIZE=10, STYLE=BOLD+ITALIC, FONT=COURIER NEW, $

TYPE=TITLE, STYLE=BOLD, COLUMN=N15, BACKCOLOR=RGB(255 248 155),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N16, BACKCOLOR=RGB(255 248 155),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N17, BACKCOLOR=RGB(255 248 155),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N18, BACKCOLOR=RGB(255 248 155),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N19, BACKCOLOR=RGB(255 248 155),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N20, BACKCOLOR=RGB(255 248 155),$

TYPE=TITLE, STYLE=BOLD, COLUMN=N22, BACKCOLOR=RGB(164 238 244),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N23, BACKCOLOR=RGB(164 238 244),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N24, BACKCOLOR=RGB(164 238 244),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N25, BACKCOLOR=RGB(164 238 244),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N26, BACKCOLOR=RGB(164 238 244),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N27, BACKCOLOR=RGB(164 238 244),$

TYPE=TITLE, STYLE=BOLD, COLUMN=N29, BACKCOLOR=RGB(255 181 145),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N30, BACKCOLOR=RGB(255 181 145),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N31, BACKCOLOR=RGB(255 181 145),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N32, BACKCOLOR=RGB(255 181 145),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N33, BACKCOLOR=RGB(255 181 145),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N34, BACKCOLOR=RGB(255 181 145),$

TYPE=TITLE, STYLE=BOLD, COLUMN=N36, BACKCOLOR=RGB(189 255 189),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N37, BACKCOLOR=RGB(189 255 189),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N38, BACKCOLOR=RGB(189 255 189),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N39, BACKCOLOR=RGB(189 255 189),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N40, BACKCOLOR=RGB(189 255 189),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N41, BACKCOLOR=RGB(189 255 189),$

TYPE=TITLE, STYLE=BOLD, COLUMN=N43, BACKCOLOR=RGB(171 130 255),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N44, BACKCOLOR=RGB(171 130 255),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N45, BACKCOLOR=RGB(171 130 255),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N46, BACKCOLOR=RGB(171 130 255),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N47, BACKCOLOR=RGB(171 130 255),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N48, BACKCOLOR=RGB(171 130 255),$

TYPE=TITLE, STYLE=BOLD, COLUMN=N50, BACKCOLOR=RGB(218 150 148),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N51, BACKCOLOR=RGB(218 150 148),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N52, BACKCOLOR=RGB(218 150 148),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N53, BACKCOLOR=RGB(218 150 148),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N54, BACKCOLOR=RGB(218 150 148),$
TYPE=TITLE, STYLE=BOLD, COLUMN=N55, BACKCOLOR=RGB(218 150 148),$

TYPE=FOOTING, SIZE=7, STYLE=BOLD, COLOR=GREY, $
TYPE=TITLE, STYLE=BOLD, $
TYPE=SUBTOTAL, SIZE=8, STYLE=BOLD,$
TYPE=GRANDTOTAL, SIZE=8, STYLE=BOLD,$
TYPE=REPORT, IMAGE=&&TNTPIC,  POSITION=(&&TNTDTPOS), SIZE=(&&TNTDTSIZ), $
TYPE=REPORT, IMAGE=&&ROLLPIC, POSITION=(&&ROLDTPOS), SIZE=(&&ROLDTSIZ), $
ENDSTYLE

&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
-*
END
-RUN
