-**************************************************************************************************************
-*  ADHOCRANKBY2.FEX
-*
-*  This program is used for 2 Rank By Top selected(&&RANK_LIMIT and &&RANK_LIMIT2 are not 0). the 2 global
-*  variables generated from codegen.  &&FieldName.&CNT2 AND &&FldFormat.&CNT2 are set in QueryBuilder.fex.
-*  Date: SUM BOOKINGS AS 'CBOOK'    RENTAL_AMT AS 'CRAMT' CBOOK CRAMT
-**************************************************************************************************************

SET ASNAME = ON
-*****************************************************
-*Start to write query now
-*****************************************************

-WRITE ADHOCQUERY -INCLUDE SETECHO

-*step 1:(sum)
-WRITE ADHOCQUERY &QUERY 
-WRITE ADHOCQUERY SUM 

-SET &INDX = 1;
-REPEAT RankByA01A &XDTLINES2 TIMES 
-SET &Q1 = &XCOLUMN2.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-RankByA01A

-SET &INDEXX = &STARTX;
-REPEAT AdhRankByA01 &TotalByLines TIMES 
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;         
-AdhRankByA01

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDA0
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN 

-*step 2(print)- generate the first RankBy after the 1st By 

-WRITE ADHOCQUERY TABLE FILE HOLDA0
-WRITE ADHOCQUERY PRINT 

-SET &INDEXX = 1;
-REPEAT AdhRankByA02 &XDTLINES2 TIMES
-SET &Q1 = &XCOLUMN2.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA02

-*write the first by field
-SET &INDEXX = &STARTX;
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   

-WRITE ADHOCQUERY RANKED BY HIGHEST &&RANK_METH NOPRINT

-*write the ret by fields
-SET &CNT = &TotalByLines - 1;
-REPEAT AdhRankByB02 &CNT TIMES
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB02

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDA1
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN 


-*STEP 3(PRINT) : DEFINE RANK_VAL
-WRITE ADHOCQUERY DEFINE FILE HOLDA1
-WRITE ADHOCQUERY   SECOND_LIMIT/I9 = &&RANK_LIMIT2;
-WRITE ADHOCQUERY   DRANK/D9 = RANK;
-WRITE ADHOCQUERY   ARANK/A11 = FTOA(DRANK, '(D9)', 'A11');
-WRITE ADHOCQUERY   RANK_VAL/A9 = EDIT(ARANK, '$$999999999');
-WRITE ADHOCQUERY   RANK_2NDVALUE/A9 = IF RANK LE SECOND_LIMIT THEN RANK_VAL ELSE 'Other';
-WRITE ADHOCQUERY END


-WRITE ADHOCQUERY TABLE FILE HOLDA1
-WRITE ADHOCQUERY PRINT 

-SET &INDEXX = 1;
-REPEAT AdhRankByA03 &XDTLINES2 TIMES
-SET &Q1 = &XCOLUMN2.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA03

-*write the first by field
-SET &INDEXX = &STARTX;
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE

-WRITE ADHOCQUERY BY RANK_2NDVALUE

-SET &INDEXX = &STARTX + 1;   
-SET &CNT = &TotalByLines - 1;
-REPEAT AdhRankByB03 &CNT TIMES
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL';
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB03

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDA2
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN 

-*STEP 4(SUM): redefine a sort fields except for the 1st By field
-WRITE ADHOCQUERY DEFINE FILE HOLDA2

-*add X to the rest By fields in order to sum up 'All Other' except for the 1st By field
-SET &CNT2 = 2;
-SET &CNT = &TotalByLines - 1 ;
-REPEAT AdhRankByB04 &CNT TIMES
-SET &Q1 = &&FieldName.&CNT2 ;
-SET &Q2 = &&FldFormat.&CNT2 ;
-SET &FLDNAME = '&Q1.EVAL' || 'X' || '/' || '&Q2.EVAL' ;

-SET &ELSEVAL = IF '&Q2.EVAL' LIKE 'D%' THEN 0 ELSE ' ';

-*-WRITE ADHOCQUERY   &FLDNAME = IF RANK_2NDVALUE LE '&&RANK_LIMIT' THEN &Q1 ELSE 'Other';
-*-WRITE ADHOCQUERY   &FLDNAME = IF RANK_2NDVALUE LE '&&RANK_LIMIT' THEN &Q1 ELSE ' ';
-WRITE ADHOCQUERY   &FLDNAME = IF RANK_2NDVALUE LE '&&RANK_LIMIT' THEN &Q1 ELSE &ELSEVAL;

-SET &CNT2 = &CNT2 + 1;
-AdhRankByB04
-WRITE ADHOCQUERY END

-WRITE ADHOCQUERY TABLE FILE HOLDA2
-WRITE ADHOCQUERY SUM 

-SET &INDEXX = 1;
-REPEAT AdhRankByA04 &XDTLINES2 TIMES
-SET &Q1 = &XCOLUMN2.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA04

-SET &INDEXX = &STARTX;
-*write the first by field
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   

-WRITE ADHOCQUERY BY RANK_2NDVALUE

-SET &CNT = &TotalByLines - 1;
-REPEAT AdhRankByB05 &CNT TIMES
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &Q1 = '&Q1.EVAL' || 'X';
-SET &QUERYLINE = '&Q1.EVAL';
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB05

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDA3
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN
-*The end of phase I


*Phase II - Step 1 (Sum from Phase I - 1)
-WRITE ADHOCQUERY TABLE FILE HOLDA1
-WRITE ADHOCQUERY SUM 

-***********************************************************************************************
-* some special fields defined in aview0ex or cview0ex or hview0ex for percentage calculations
-*
-IF '&RPTGROUP.EVAL' EQ 'AIR' THEN GOTO DEFRNKAIR;
-IF '&RPTGROUP.EVAL' EQ 'CAR' THEN GOTO DEFRNKCAR;
-IF '&RPTGROUP.EVAL' EQ 'HTL' THEN GOTO DEFRNKHTL;

-DEFRNKAIR
-WRITE ADHOCQUERY FARE_PAID AS 'TOT_ORG_FARE'   
-WRITE ADHOCQUERY DISSAVINGS AS 'TOT_ORG_DSAVE'
-WRITE ADHOCQUERY TKT_PURCH AS 'TOT_ORG_PURCH'
-WRITE ADHOCQUERY REF_EXCH_CNT AS 'TOT_ORG_RFEX'
-WRITE ADHOCQUERY SAVINGS AS 'TOT_ORG_SAVE'
-WRITE ADHOCQUERY NET_TKT_CNT AS 'TOT_ORG_NETTKT'
-WRITE ADHOCQUERY MRK_CNT AS 'TOT_ORG_MKTCNT'
-WRITE ADHOCQUERY BASE_FARE AS 'TOT_ORG_BASEF'
-WRITE ADHOCQUERY MILE AS 'TOT_ORG_MILES'
-GOTO ENDDEFHTL;

-DEFRNKCAR
-WRITE ADHOCQUERY BOOKINGS AS 'CBOOK'
-WRITE ADHOCQUERY RENTAL_AMT AS 'CRAMT'
-GOTO ENDDEFHTL;
-ENDDEFCAR

-DEFRNKHTL
-WRITE ADHOCQUERY NBR_DAYS AS 'HNDAYS'
-WRITE ADHOCQUERY NEW_TOTAL_AMT AS 'HTTL'
-WRITE ADHOCQUERY BOOKINGS AS 'HBOOK'
    
-ENDDEFHTL
-***********************************************************************************************

-SET &INDEXX = 1;
-REPEAT AdhRankByA06 &XDTLINES2 TIMES
-SET &Q1 = &XCOLUMN2.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA06

-SET &INDEXX = &STARTX;
-*write the first by field
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDB1
-WRITE ADHOCQUERY END


-*Phase II - Step 2
-WRITE ADHOCQUERY TABLE FILE HOLDB1
-WRITE ADHOCQUERY SUM *

-WRITE ADHOCQUERY RANKED BY HIGHEST &&RANK_METH AS 'TOTAL_1ST'

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDB2
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN

-*Phase III - match files from Phase I (PRINT) to Phase II (SUM) By the 1ST sort field 
-WRITE ADHOCQUERY MATCH FILE HOLDA3
-WRITE ADHOCQUERY PRINT *
-WRITE ADHOCQUERY &Q1
-WRITE ADHOCQUERY RUN
-WRITE ADHOCQUERY FILE HOLDB2
-*-WRITE ADHOCQUERY SUM TOTAL_1ST
-WRITE ADHOCQUERY SUM *
-WRITE ADHOCQUERY &Q1
-WRITE ADHOCQUERY AFTER MATCH HOLD AS HOLDC1 OLD-OR-NEW
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN

-*phase - III - step 2 sort SOTRES 
-WRITE ADHOCQUERY TABLE FILE HOLDC1
-WRITE ADHOCQUERY PRINT *
-WRITE ADHOCQUERY RANKED BY HIGHEST TOTAL_1ST
-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDC2
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN

-*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-*phase - III - step 3 get "All Other Stores"
-*1st sort field
-SET &CNT = 1;
-SET &Q1 = &&FieldName.&CNT ;

-WRITE ADHOCQUERY DEFINE FILE HOLDC2
-WRITE ADHOCQUERY   FIRST_LIMIT/I5 = &&RANK_LIMIT;
-WRITE ADHOCQUERY   FLIMIT/A5    = EDIT(FIRST_LIMIT) ;
-WRITE ADHOCQUERY   SRANK/D5     = RANK;    
-WRITE ADHOCQUERY   BRANK/A6     = FTOA(SRANK, '(D5)', 'A6');
-WRITE ADHOCQUERY   RANK_VAL2/A5 = EDIT(BRANK, '$99999');
-WRITE ADHOCQUERY   RANK_ONE/A9 =  IF RANK LE FIRST_LIMIT THEN RANK_VAL2 ELSE 'All Other';
-*-WRITE ADHOCQUERY   RANK_ONE/A9 =  IF RANK LE FIRST_LIMIT THEN RANK_VAL2 ELSE '  ';

-WRITE ADHOCQUERY   FLAG/A10 = IF RANK_ONE EQ 'All Other' THEN 'All Other' ELSE 'A';                            
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN

-WRITE ADHOCQUERY TABLE FILE HOLDC2
-WRITE ADHOCQUERY PRINT *
-WRITE ADHOCQUERY BY FLAG 
-WRITE ADHOCQUERY BY RANK_ONE
-WRITE ADHOCQUERY BY &Q1
-WRITE ADHOCQUERY BY RANK_2NDVALUE

-SET &INDEXX = &STARTX + 1;
-SET &CNT = &TotalByLines - 1;
-REPEAT AdhRankByB06 &CNT TIMES
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' || 'X';
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB06

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDC3
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN

-*The final step
-WRITE ADHOCQUERY DEFINE FILE HOLDC3
-*add Y to the By fields in order to sum up 'All Other'
-SET &CNT2 = 1;
-REPEAT AdhRankByB07 &TotalByLines TIMES
-SET &Q1 = &&FieldName.&CNT2 ;
-SET &Q2 = &&FldFormat.&CNT2 ;
-*-SET &FLDNAME = IF &CNT2 EQ 1 THEN '&Q1.EVAL' ELSE '&Q1.EVAL' || 'Y';
-SET &FLDNAME = '&Q1.EVAL' || 'Y';
-SET &FLDNAME = &FLDNAME || '/' || '&Q2.EVAL' || '' ;

-SET &Q1 = IF &CNT2 EQ 1 THEN '&Q1.EVAL' ELSE '&Q1.EVAL' || 'X';

-*-WRITE ADHOCQUERY   &FLDNAME = IF FLAG EQ 'A' THEN &Q1 ELSE 'Other';
-WRITE ADHOCQUERY   &FLDNAME = IF FLAG EQ 'A' THEN &Q1 ELSE ' ';

-SET &CNT2 = &CNT2 + 1;


-AdhRankByB07

-WRITE ADHOCQUERY  RANK_TWO/A9 = IF FLAG EQ 'All Other' THEN 'All Other' ELSE RANK_2NDVALUE;
-WRITE ADHOCQUERY  PROP_NAMEY/A30   = IF FLAG EQ 'A' AND RANK_TWO NE 'Other' THEN PROP_NAMEX ELSE IF FLAG EQ 'A' AND RANK_TWO EQ 'Other' THEN 'All Other' ELSE ' ';

-WRITE ADHOCQUERY   NOWTOD/A8 = HHMMSS (NOWTOD);

-IF &DEFINES EQ 0 THEN GOTO NODEFINES2;
-SET &INDX = 1;
-REPEAT Writedef2 &DEFINES TIMES 
-SET &Q1 = &DCOLUMN.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-Writedef2
-NODEFINES2

-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY TABLE FILE HOLDC3
-WRITE ADHOCQUERY -INCLUDE HEADAIR
-WRITE ADHOCQUERY "</2"
-WRITE ADHOCQUERY SUM 

-*-SET &INDEXX = 1;
-*-REPEAT AdhRankByA07 &TotalDetailLines TIMES
-*-SET &Q1 = &COLUMN.&INDEXX;
-*-SET &Q2 = &COLTITLE.&INDEXX;
-*-SET &QUERYLINE = '&Q1.EVAL' | ' AS ' | '''&Q2.EVAL''';
-*-WRITE ADHOCQUERY &QUERYLINE
-*-SET &INDEXX = &INDEXX + 1;          
-*-AdhRankByA07

-SET &INDEXX = 1;
-REPEAT AdhRankByA07 &TotalDetailLines TIMES
-SET &Q1 = &COLUMN.&INDEXX;

-*check noprint 
-*-SET &CNT = 1;
-*-SET &FOUNDIT = 'N';
-*-REPEAT XNOPRINT2 &&NOPRINTLINES TIMES
-*-SET &QX = &&NPCOLNAME.&CNT;
-*-SET &Q2 = 'NOPRINT';
-*-SET &FOUNDIT = IF '&Q1.EVAL' EQ '&QX.EVAL' THEN 'Y' ELSE 'N';
-*-SET &CNT = &CNT + 1;
-*-IF '&FOUNDIT.EVAL' EQ 'Y' THEN GOTO XXNOPRINT;
-*-XNOPRINT2
-*-XXNOPRINT

-SET &Q2 = &COLTITLE.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' | ' AS ' | '''&Q2.EVAL''';
-*-SET &QUERYLINE = IF '&FOUNDIT.EVAL' EQ 'Y' THEN '&Q1.EVAL' | ' NOPRINT ' ELSE '&Q1.EVAL' | ' AS ' | '''&Q2.EVAL''';
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA07



-WRITE ADHOCQUERY BY FLAG NOPRINT
-WRITE ADHOCQUERY BY RANK_ONE AS 'Rank'

-* Write the 1st By field
-SET &CNT2 = 1;
-SET &INDEXX = &STARTX;
-SET &Q1 = &&FieldName.&CNT2 ;
-SET &Q2 = &COLTITLE.&INDEXX;
-SET &QUERYLINE = 'BY ' | '&Q1.EVAL' || 'Y' | ' AS ' | '''&Q2.EVAL''';
-WRITE ADHOCQUERY &QUERYLINE
-SET &FSTSORT = '&Q1.EVAL' || 'Y';

-*-WRITE ADHOCQUERY BY RANK_TWO AS 'Rank'
-WRITE ADHOCQUERY BY RANK_TWO NOPRINT

-*Write the rest sort fields (By fields - used defined name in the query) to the query
-SET &CNT2 = 2;
-SET &INDEXX = &STARTX + 1;
-SET &CNT = &TotalByLines-1;
-REPEAT AdhRankByB08 &CNT TIMES
-SET &Q1 = &&FieldName.&CNT2 ;
-SET &Q2 = &COLTITLE.&INDEXX;
-SET &QUERYLINE = 'BY ' | '&Q1.EVAL' || 'Y' | ' AS ' | '''&Q2.EVAL''';
-WRITE ADHOCQUERY &QUERYLINE
-SET &CNT2 = &CNT2 + 1;
-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB08

-WRITE ADHOCQUERY ON RANK_ONE SKIP-LINE
-*-WRITE ADHOCQUERY ON RANK_ONE SUB-TOTAL AS 'Total:'
-WRITE ADHOCQUERY ON TABLE PAGE-BREAK AND SUBFOOT
-WRITE ADHOCQUERY -INCLUDE SBFOOT
-WRITE ADHOCQUERY ON TABLE SET PAGE-NUM OFF
-WRITE ADHOCQUERY ON TABLE SET STYLE *
-WRITE ADHOCQUERY -INCLUDE &&DTSTY
-WRITE ADHOCQUERY ENDSTYLE
 



-WRITE ADHOCQUERY &&OUTLINE1
-WRITE ADHOCQUERY &&OUTLINE2 

-SET &SubtotalLine1 = IF &SUBTOTALS NE 0 THEN 'ON ' | '&FSTSORT.EVAL' | ' RECOMPUTE MULTILINES &RANKSubtotalColumns.EVAL AS ' | '''Total For '''  ELSE ' ';
-*-SET &SubtotalLine1 = IF &SUBTOTALS NE 0 THEN 'ON RANK_ONE ' | ' RECOMPUTE MULTILINES &RANKSubtotalColumns.EVAL AS ' | '''Total For '''  ELSE ' ';
-WRITE ADHOCQUERY &SubtotalLine1
-WRITE ADHOCQUERY &GrandTotalLIne

-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN
