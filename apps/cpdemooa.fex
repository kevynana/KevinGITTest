-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
 
-* File CPDEMO.FEX
-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS
-*                                  USED IN FOOTERSM
-*5/21/01      TANDT-SS               ADDED DEFINE TO NORECORDS SO MESSAGE
-*                                    "NO RECORDS FOUNDS FOR THIS SELECTION"
-*                                    WILL APPEAR IN EXCEL 97
-*2/7/02       TANDT-DB             CARRIED THROUGH LEVEL3
-*4/30/02      TANDT-JK             COMMENTED OUT THE USE OF CPCOVPG
-*07/03/02   STEVE              CHANGED TO eTTek Review and Copyright
-*11/01/04     TANDT-DV         ADDED CODE FOR GLOBAL CURRENCY
-*12/22/11     GSE                  Removed parens from around OLIMIT in
-*                                  DEFINEs for 7.7.03
-*2/11/14      JK               Added code for Flown Airline Selections
-*  02/02/2015  REJ  S-05681 Changes to the no data report to prepare for the Available
-*                           Report changes.  Rollup Code is being removed from BRPTINST in
-*                           ER5, so I'm removing the reference to the ROLLUP_CODE in that report.
-*  01/22/2016  REJ  S-13208 ER5 changes so the selection criteria would show on the subfoot page.
-*4/24/2017-JEM-S-33318-updated logic for no records report
-*08/4/17 - DLV - D-01589 - Added logic to obtain required airline selection for this report
-**********************************************************************
EX SETDBLS SETFILE=&&SETF
-RUN
-INCLUDE OTHPARMS
 
-INCLUDE SETPARMTIME
-RUN
-TYPE &&OUTPUTDEST
-IF &&OUTLINE2 EQ 'OFFLINE' THEN GOTO XOFFLINE ELSE GOTO XONLINE;
 
-XONLINE
-TYPE Before ONLINE
ONLINE
-TYPE After ONLINE
-RUN
-GOTO CONT
 
-XOFFLINE
-SET &&OUTLINE2 = '';
-TYPE Before OFFLINE
OFFLINE
-TYPE After OFFLINE
-RUN
-GOTO CONT
 
-CONT
-SET &&RPT_HOLD = 'RPTHOLD';
 
FILEDEF AUSEINCL DISK &&AUSEPASS
-RUN
FILEDEF CUSEINCL DISK &&CUSEPASS
-RUN
FILEDEF HUSEINCL DISK &&HUSEPASS
-RUN
FILEDEF LUSEINCL DISK &&LUSEPASS
-RUN
 
 
 
-*****************************************************************
-*DATE           NAME                 DESCRIPTION OF CHANGE
-*9/13/00      IBISTL-KR              Drill Down functionality
-*****************************************************************
-INCLUDE SELCATQT
-RUN
 
-*EX CATQTR
EX &&CATQTRPR
-RUN
 
FILEDEF AUSEINCL CLEAR
-RUN
FILEDEF CUSEINCL CLEAR
-RUN
FILEDEF HUSEINCL CLEAR
-RUN
FILEDEF LUSEINCL CLEAR
-RUN
 
EX AIRUSE
-RUN
 
EX &&EXPARM
-RUN
-* REJ ADDED TO TRAP ERRORS
-SET &&FEXNOW=&&EXPARM;
-INCLUDE ERRORCHK
-IF &&RET GT 1 GOTO XXIT;
-* REJ ADDED TO TRAP ERRORS
 
-IF &RECORDS GT 0 THEN GOTO DOIT;
 
-NORECORDS
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF2;
-INCLUDE OTHPARMS
-INCLUDE AVRP_SUBFOOT
-:AVSF2

-INCLUDE NORECRPT
-RUN

-GOTO XXIT
 
-DOIT
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF1;
-INCLUDE AVRP_SUBFOOT
-:AVSF1
 
DEFINE FILE TPMP ADD
 
 ALN/A5 = CP_AIRLINE;
 ALN1/A5 = 'OTHER';
 
  LABEL1/A25 = IF '&&ORGDST' EQ 'DIR_CITY_CD' THEN DIR_CTY_CDO ELSE
               IF '&&ORGDST' EQ 'DIR_CITY_NM' THEN DIR_CTY_NMO ELSE
               IF '&&ORGDST' EQ 'DIR_CP_CD' THEN DIR_APT_CDO ELSE
              IF '&&ORGDST' EQ 'DIR_CP_NM' THEN DIR_APT_NMO ELSE
               IF '&&ORGDST' EQ 'ND_CITY_CD' THEN ND_CTY_CDO ELSE
               IF '&&ORGDST' EQ 'ND_CITY_NM' THEN ND_CTY_NMO ELSE
               IF '&&ORGDST' EQ 'ND_CP_CD' THEN ND_APT_CDO ELSE
               IF '&&ORGDST' EQ 'ND_CP_NM' THEN ND_APT_NMO ELSE ' ';
 
 LABEL2/A25 = IF '&&ORGDST' EQ 'DIR_CITY_CD' THEN DIR_CTY_CDD ELSE
               IF '&&ORGDST' EQ 'DIR_CITY_NM' THEN DIR_CTY_NMD ELSE
               IF '&&ORGDST' EQ 'DIR_CP_CD' THEN DIR_APT_CDD ELSE
               IF '&&ORGDST' EQ 'DIR_CP_NM' THEN DIR_APT_NMD ELSE
               IF '&&ORGDST' EQ 'ND_CITY_CD' THEN ND_CTY_CDD ELSE
               IF '&&ORGDST' EQ 'ND_CITY_NM' THEN ND_CTY_NMD ELSE
               IF '&&ORGDST' EQ 'ND_CP_CD' THEN ND_APT_CDD ELSE
               IF '&&ORGDST' EQ 'ND_CP_NM' THEN ND_APT_NMD ELSE ' ';
 
END
-RUN
 
 
-IF &&CURRENCY EQ 'USD' THEN GOTO NEXT;
 
 
-SET &&SUBHEAD = <NAMEC;
-SET &BASF_CUR = 'BASE FARE, (' | &&CURRENCY || ')';
-SET &AVG_FLTP = 'AVG FLIGHT, PRICE (' | &&CURRENCY || ')';
-SET &&S_SUBJ2='GFARE/D16.2C AS ' | '''&BASF_CUR.EVAL''';
-SET &&S_SUBJ3='PER_GFARE AS ''% OF,FARE'' KILO AS ''KLMTRS''';
-SET &&S_SUBJ4='KILO_PCT AS ''% OF,KLMTR'' ';
-SET &&S_SUBJ5='COMPUTE AVG_FLT/P14.2C= IF ((NET_TKT_CNT LT 1) AND';
-SET &&S_SUBJ6='(NET_TKT_CNT GT (-1))) THEN 0 ELSE (GFARE/NET_TKT_CNT); AS';
-SET &&S_SUBJ7='''&AVG_FLTP.EVAL''' ;
-SET &&S_SUBJ8='COMPUTE COST_PER_KILO/P12.2C= IF ((KILO LT 1) AND';
-SET &&S_SUBJ9='(KILO GT (-1))) THEN 0 ELSE (GFARE/KILO); AS';
-SET &&S_SUBJ10=' ''COST,/KLMTR'' ';
-SET &&SUMM_ON5='GFARE KILO AVG_FLT COST_PER_KILO AS ''TOTAL''';
 
-NEXT;
 
TABLE FILE BRPT_FLDS_PARM_VALUES_REQUIRED
PRINT DATA_VALUE  
COMPUTE ACODE/A3 = EDIT(DATA_VALUE, '999'); 
BY INST_KEY
WHERE INST_KEY EQ &&IKEY
ON TABLE HOLD 
END
-RUN
TABLE FILE HOLD
PRINT ACODE
BY INST_KEY NOPRINT
ON TABLE HOLD AS AIRSELECT
END
-RUN


-SET &CNT = 1;
-REPEAT ReadAllAIR &LINES TIMES
-READ AIRSELECT NOCLOSE &&AIR.3
-SET &&AIR.&CNT = EDIT(&&AIR,'99');
-TYPE &&AIR.&CNT
-SET &CNT = &CNT + 1;
-ReadAllAIR
-CLOSE AIRSELECT

 
 
-TYPE &&AIR1
-TYPE &&AIR2
-TYPE &&AIR3
-TYPE &&AIR4
-TYPE &&AIR5
  
 
TABLE FILE TPMP
SUM
    COMM_SEG
    CP_FARE_PD/D16.2CS AS 'FARE'
    PAID_FAREX/D16.2CS AS 'GFARE'
    DISSAVINGS
    FARE_BAS1
    LEVEL3
    KILO
    MILES
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NEW_SEG_COUNT
    SAVINGS
    TOTAL_FARE
    VASAVINGS
BY ORGDST
BY LABEL1
BY LABEL2
BY ALN
-**** Start - WHERE statement to test Flown Airlines selected *****************
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' '
- AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' ' AND &&AIR8 NE ' ' AND &&AIR9 NE ' ' AND &&AIR10 NE ' ' THEN GOTO WHEREAIR10 ELSE GOTO CHKAIR9;
 
-WHEREAIR10
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8' OR '&&AIR9' OR '&&AIR10'
-GOTO CHKDONE;
 
-CHKAIR9
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' ' AND &&AIR8 NE ' ' AND &&AIR9 NE ' '
- THEN GOTO WHEREAIR9 ELSE GOTO CHKAIR8;
 
-WHEREAIR9
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8' OR '&&AIR9'
-GOTO CHKDONE;
 
-CHKAIR8
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' ' AND &&AIR8 NE ' '
- THEN GOTO WHEREAIR8 ELSE GOTO CHKAIR7;
 
-WHEREAIR8
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8'
-GOTO CHKDONE;
 
-CHKAIR7
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' '
- THEN GOTO WHEREAIR7 ELSE GOTO CHKAIR6;
 
-WHEREAIR7
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7'
-GOTO CHKDONE;
 
-CHKAIR6
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' '
- THEN GOTO WHEREAIR6 ELSE GOTO CHKAIR5;
-WHEREAIR6
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6'
-GOTO CHKDONE;
 
-CHKAIR5
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' '
- THEN GOTO WHEREAIR5 ELSE GOTO CHKAIR4;
-WHEREAIR5
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5'
-GOTO CHKDONE;
 
-CHKAIR4
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' '
- THEN GOTO WHEREAIR4 ELSE GOTO CHKAIR3;
-WHEREAIR4
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4'
-GOTO CHKDONE;
 
-CHKAIR3
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' '
- THEN GOTO WHEREAIR3 ELSE GOTO CHKAIR2;
-WHEREAIR3
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3'
-GOTO CHKDONE;
 
-CHKAIR2
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' '
- THEN GOTO WHEREAIR2 ELSE GOTO CHKAIR1;
-WHEREAIR2
WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2'
-GOTO CHKDONE;
 
-CHKAIR1
-IF &&AIR1 NE ' '
- THEN GOTO WHEREAIR1 ELSE GOTO CHKDONE;
-WHEREAIR1
WHERE CP_AIRLINE EQ '&&AIR1'
-GOTO CHKDONE;
 
-CHKDONE
-**** End - WHERE statement to test Flown Airlines selected *******************
-* WHERE CP_AIRLINE EQ '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8' OR '&&AIR9' OR '&&AIR10'
ON TABLE HOLD AS HOLD1A1
END
-RUN
 
TABLE FILE HOLD1A1
SUM COMM_SEG
    FARE
    GFARE
    DISSAVINGS
    FARE_BAS1
    LEVEL3
    KILO
    MILES
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NEW_SEG_COUNT
    SAVINGS
    TOTAL_FARE
    VASAVINGS
BY ORGDST
BY LABEL1
BY LABEL2
BY ALN
ON TABLE HOLD AS HOLD1A FORMAT FOCUS
END
-RUN
 
TABLE FILE TPMP
SUM COMM_SEG
    CP_FARE_PD/D16.2CS AS 'FARE'
    PAID_FAREX/D16.2CS AS 'GFARE'
    DISSAVINGS
    FARE_BAS1
    LEVEL3
    KILO
    MILES
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NEW_SEG_COUNT
    SAVINGS
    TOTAL_FARE
    VASAVINGS
BY ORGDST
BY LABEL1
BY LABEL2
BY ALN1 AS 'ALN'
-**** Start - WHERE statement to test Flown Airlines selected and omit from Other *****************
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' '
- AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' ' AND &&AIR8 NE ' ' AND &&AIR9 NE ' ' AND &&AIR10 NE ' ' THEN GOTO WHEREAIR10O ELSE GOTO CHKAIR9O;
 
-WHEREAIRO
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8' OR '&&AIR9' OR '&&AIR10'
-GOTO CHKDONEO;
 
-CHKAIR9O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' ' AND &&AIR8 NE ' ' AND &&AIR9 NE ' '
- THEN GOTO WHEREAIR9O ELSE GOTO CHKAIR8O;
 
-WHEREAIR9O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8' OR '&&AIR9'
-GOTO CHKDONEO;
 
-CHKAIR8O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' ' AND &&AIR8 NE ' '
- THEN GOTO WHEREAIR8O ELSE GOTO CHKAIR7O;
 
-WHEREAIR8O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8'
-GOTO CHKDONEO;
 
-CHKAIR7O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' ' AND &&AIR7 NE ' '
- THEN GOTO WHEREAIR7O ELSE GOTO CHKAIR6O;
 
-WHEREAIR7O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7'
-GOTO CHKDONEO;
 
-CHKAIR6O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' ' AND &&AIR6 NE ' '
- THEN GOTO WHEREAIR6O ELSE GOTO CHKAIR5O;
-WHEREAIR6O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6'
-GOTO CHKDONEO;
 
-CHKAIR5O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' ' AND &&AIR5 NE ' '
- THEN GOTO WHEREAIR5O ELSE GOTO CHKAIR4O;
-WHEREAIR5O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5'
-GOTO CHKDONEO;
 
-CHKAIR4O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' ' AND &&AIR4 NE ' '
- THEN GOTO WHEREAIR4O ELSE GOTO CHKAIR3O;
-WHEREAIR4O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4'
-GOTO CHKDONEO;
 
-CHKAIR3O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' ' AND &&AIR3 NE ' '
- THEN GOTO WHEREAIR3O ELSE GOTO CHKAIR2O;
-WHEREAIR3O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3'
-GOTO CHKDONEO;
 
-CHKAIR2O
-IF &&AIR1 NE ' ' AND &&AIR2 NE ' '
- THEN GOTO WHEREAIR2O ELSE GOTO CHKAIR1O;
-WHEREAIR2O
WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2'
-GOTO CHKDONEO;
 
-CHKAIR1O
-IF &&AIR1 NE ' '
- THEN GOTO WHEREAIR1O ELSE GOTO CHKDONEO;
-WHEREAIR1O
WHERE CP_AIRLINE NE '&&AIR1'
-GOTO CHKDONEO;
 
-CHKDONEO
-* WHERE CP_AIRLINE NE '&&AIR1' OR '&&AIR2' OR '&&AIR3' OR '&&AIR4' OR '&&AIR5' OR '&&AIR6' OR '&&AIR7' OR '&&AIR8' OR '&&AIR9' OR '&&AIR10'
ON TABLE HOLD AS HOLD1B1
END
-RUN
 
TABLE FILE HOLD1B1
SUM COMM_SEG
    FARE
    GFARE
    DISSAVINGS
    FARE_BAS1
    LEVEL3
    KILO
    MILES
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NEW_SEG_COUNT
    SAVINGS
    TOTAL_FARE
    VASAVINGS
BY ORGDST
BY LABEL1
BY LABEL2
BY ALN
ON TABLE HOLD AS HOLD1B FORMAT FOCUS
END
-RUN
 
-SET &HLDPATH=TEMPPATH(50,'A50');
-SET &HRANK1=&HLDPATH || 'HOLD1A.FOC';
-SET &HRANK2=&HLDPATH || 'HOLD1B.FOC';
-RUN
 
USE CLEAR *
-RUN
 
EX SUUSES
-RUN
 
USE ADD
&HRANK1 AS HOLD1A
&HRANK2 AS HOLD1A
END
-RUN
 
 
TABLE FILE HOLD1A
PRINT
      COMM_SEG
      DISSAVINGS
      FARE
      FARE_BAS1
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      SAVINGS
      TOTAL_FARE
      VASAVINGS
      ALN
BY ORGDST
BY LABEL1
BY LABEL2
RANKED BY HIGHEST &&RANK_METH
ON TABLE HOLD AS HOLD2
END
-RUN


DEFINE FILE HOLD2
  DRANK/D5      = RANK ;
  ARANKX/A6     = FTOA(DRANK, '(D5)', 'A6');
  ARANK/A5      = EDIT(ARANKX,'$99999');
  RANK_LIMIT/I5 = &&RANK_LIMIT2 ;
  RANK_VALUE/A5 = IF ALN EQ 'OTHER' THEN 'OTHER' ELSE
                  IF RANK_LIMIT EQ 0 THEN ARANK ELSE
                  IF RANK GT RANK_LIMIT THEN 'OTHER' ELSE ARANK;
END
-RUN
 
TABLE FILE HOLD2
SUM
      COMM_SEG
      DISSAVINGS
      FARE_BAS1
      FARE
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      SAVINGS
      TOTAL_FARE
      VASAVINGS
BY ORGDST
BY LABEL1
BY LABEL2
BY RANK_VALUE
BY ALN
ON TABLE HOLD AS HOLD3
END
-RUN
 
 
TABLE FILE HOLD3
SUM
    COMM_SEG
    DISSAVINGS
    FARE
    FARE_BAS1
    GFARE
    KILO
    LABEL1
    LABEL2
    LEVEL3
    MILES
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NEW_SEG_COUNT
    RANK_VALUE
    SAVINGS
    TOTAL_FARE
    VASAVINGS
    ALN
BY ORGDST
BY LABEL1
BY LABEL2
BY RANK_VALUE
BY ALN
ON TABLE HOLD AS HOLD4
END
-RUN


TABLE FILE HOLD1A
SUM &&RANK_METH
BY ORGDST
ON TABLE HOLD AS RHOLD1
END
-RUN
 
TABLE FILE RHOLD1
PRINT &&RANK_METH
RANKED BY HIGHEST &&RANK_METH AS 'SEG_RANK'
BY ORGDST
ON TABLE HOLD AS RHOLD2
END
-RUN
 
MATCH FILE HOLD4
PRINT
      COMM_SEG
      DISSAVINGS
      FARE
      FARE_BAS1
      GFARE
      KILO
      LABEL1
      LABEL2
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      RANK_VALUE
      SAVINGS
      TOTAL_FARE
      VASAVINGS
      ALN
BY ORGDST
ON TABLE HOLD
RUN
FILE RHOLD2
SUM SEG_RANK
BY ORGDST
AFTER MATCH HOLD AS HOLD5 OLD-OR-NEW
END
-RUN
 
TABLE FILE HOLD5
PRINT
      COMM_SEG
      DISSAVINGS
      FARE
      FARE_BAS1
      GFARE
      KILO
      LABEL1
      LABEL2
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      ORGDST
      RANK_VALUE
      SAVINGS
      TOTAL_FARE
      VASAVINGS
      ALN
RANKED BY HIGHEST SEG_RANK
ON TABLE HOLD AS HOLD6
END
-RUN
 
DEFINE FILE HOLD6
 ORG_LIMIT/I5 = &&RANK_LIMIT ;
  OLIMIT/A5    = EDIT(ORG_LIMIT) ;
  CRANK/D5     = RANK;
  BRANK/A6     = FTOA(CRANK, '(D5)', 'A6');
  LIST/D6 = IF ORGDST NE LAST ORGDST THEN (LAST LIST + 1)
    ELSE LAST LIST;
  FRANKX/A7 = FTOA(LIST, '(D6)', 'A7');
  FRANK/A6  = EDIT(FRANKX,'$999999');
  ORG_VALUE/A6 = IF ORG_LIMIT EQ 0 THEN BRANK ELSE
               IF LIST GT ORG_LIMIT THEN 'OTHER' ELSE FRANK;
END
-RUN
 
TABLE FILE HOLD6
SUM
    COMM_SEG
    DISSAVINGS
    FARE
    FARE_BAS1
    GFARE
    KILO
    LEVEL3
    MILES
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NEW_SEG_COUNT
    OLIMIT
    ORG_LIMIT
    SAVINGS
    SEG_RANK
    TOTAL_FARE
    VASAVINGS
BY ORG_VALUE
BY ORGDST
BY LABEL1
BY LABEL2
BY RANK_VALUE
BY ALN
ON TABLE HOLD AS HOLD7
END
-RUN


DEFINE FILE HOLD7
  EMB_LBL/A25 = IF ORG_VALUE LT OLIMIT THEN LABEL1 ELSE 'ALL OTHER';
  ORG_PRINT/A55 =IF ORG_VALUE LT OLIMIT THEN ORGDST ELSE 'ALL OTHER';
  RO_PRINT/A13   =IF ORG_VALUE LT OLIMIT THEN ALN ELSE 'ALL OTHER';
  OTH_PRINT/A13 = IF ORG_PRINT EQ 'ALL OTHER' THEN ALN ELSE ' ';
  OTH_VAL/A5 = ' ';
  OTHER_PRINT/A13 = ' ';
  OTH_SEG/D9CS = 0;
 
  RTE_LBL/A25 = IF ORG_VALUE LT OLIMIT THEN LABEL2 ELSE 'ALL OTHER';
 
END
-RUN
 
TABLE FILE HOLD7
SUM
    COMM_SEG
    DISSAVINGS
    FARE
    FARE_BAS1
    GFARE
    KILO
    LEVEL3
    MILES
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NEW_SEG_COUNT
    ORGDST
    OTHER_PRINT
    OTH_SEG
    SAVINGS
    SEG_RANK
    TOTAL_FARE
    VASAVINGS
BY ORG_VALUE
BY ORG_PRINT
BY EMB_LBL
BY RTE_LBL
BY RANK_VALUE
BY RO_PRINT
BY OTH_VAL
BY OTH_PRINT
BY ALN
ON TABLE HOLD AS HOLD8
END
-RUN


 
TABLE FILE HOLD7
SUM MILES AS 'C_MILES'
    NET_COMM AS 'C_COMM'
    FARE AS 'C_FARE'
    NET_TKT_CNT AS 'C_SEGMT'
    KILO AS 'C_KILO'
    GFARE AS 'G_FARE'
BY ORG_PRINT
ON TABLE HOLD AS HOLD9
END
-RUN
 
MATCH FILE HOLD8
PRINT
      COMM_SEG
      DISSAVINGS
      EMB_LBL
      FARE
      FARE_BAS1
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      ORGDST
      ORG_VALUE
      OTH_VAL
      OTH_SEG
      OTHER_PRINT
      RANK_VALUE
      RO_PRINT
      RTE_LBL
      SAVINGS
      SEG_RANK
      TOTAL_FARE
      VASAVINGS
      ALN
BY ORG_PRINT
ON TABLE HOLD
RUN
FILE HOLD9
SUM C_COMM
    C_FARE
    C_MILES
    C_SEGMT
    C_KILO
    G_FARE
BY ORG_PRINT
AFTER MATCH HOLD AS HOLD10 OLD-OR-NEW
END
-RUN
 
DEFINE FILE HOLD10
FLAG/A1 = 'A';
END
 
TABLE FILE HOLD10
SUM
      COMM_SEG
      DISSAVINGS
      EMB_LBL
      FARE
      FARE_BAS1
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      ORGDST
      ORG_VALUE
      OTH_SEG
      RTE_LBL
      SAVINGS
      SEG_RANK
      TOTAL_FARE
      VASAVINGS
      C_COMM
      C_FARE
      C_MILES
      C_SEGMT
      C_KILO
      G_FARE
BY FLAG
BY ORG_VALUE
BY ORG_PRINT
BY RANK_VALUE
BY RO_PRINT
BY OTH_VAL
BY OTHER_PRINT
BY ALN
WHERE ORG_VALUE NE 'OTHER'
ON TABLE HOLD AS HOLD11 FORMAT FOCUS
END
-RUN



TABLE FILE HOLD10
SUM &&RANK_METH AS 'OTH_SEG'
      COMM_SEG
      DISSAVINGS
      EMB_LBL
      FARE
      FARE_BAS1
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      ORG_PRINT
      ORGDST
      ORG_VALUE
      OTH_SEG
      RANK_VALUE
      RO_PRINT
      RTE_LBL
      SAVINGS
      SEG_RANK
      TOTAL_FARE
      VASAVINGS
      C_COMM
      C_FARE
      C_MILES
      C_SEGMT
      C_KILO
      G_FARE
BY ALN
WHERE ORG_VALUE EQ 'OTHER'
ON TABLE HOLD AS OTHERHOLD
END
-RUN


TABLE FILE OTHERHOLD
SUM OTH_SEG
      COMM_SEG
      DISSAVINGS
      EMB_LBL
      FARE
      FARE_BAS1
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      ORG_PRINT
      ORGDST
      ORG_VALUE
      OTH_SEG
      RANK_VALUE
      RO_PRINT
      RTE_LBL
      SAVINGS
      SEG_RANK
      TOTAL_FARE
      VASAVINGS
      C_COMM
      C_FARE
      C_MILES
      C_SEGMT
      C_KILO
      G_FARE
RANKED BY HIGHEST OTH_SEG
BY ALN
ON TABLE HOLD AS OTHERHLD1
END
-RUN


DEFINE FILE OTHERHLD1
  DRANK/D5      = RANK ;
  ARANKX/A6     = FTOA(DRANK, '(D5)', 'A6');
  ARANK/A5      = EDIT(ARANKX,'$99999');
  OTH_LIMIT/I5 = &&RANK_LIMIT2 ;
  OTH_VAL/A5 = IF (OTH_LIMIT EQ 0) THEN (ARANK) ELSE
               IF RANK GT OTH_LIMIT THEN 'OTHER' ELSE ARANK;
  OTHER_PRINT/A13 = IF OTH_VAL LE '&&RANK_LIMIT2'
                    THEN ' ' ELSE 'OTHER';
-*                    THEN NW_PRINT ELSE 'OTHER';
  RO_PRINT/A13   = ALN;
  RTE_LBL/A25 = ' ';

END
-RUN
 
TABLE FILE OTHERHLD1
SUM OTH_SEG
      COMM_SEG
      DISSAVINGS
      EMB_LBL
      FARE
      FARE_BAS1
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      ORGDST
      ORG_VALUE
      OTH_SEG
      ORG_PRINT
      RANK_VALUE
      RO_PRINT
      RTE_LBL
      SAVINGS
      SEG_RANK
      TOTAL_FARE
      VASAVINGS
      C_COMM
      C_FARE
      C_MILES
      C_SEGMT
      C_KILO
      G_FARE
BY OTH_VAL
BY OTHER_PRINT
BY ALN
ON TABLE HOLD AS OTHERHLD2
END
-RUN


DEFINE FILE OTHERHLD2
FLAG/A1 = 'B';
END
 
TABLE FILE OTHERHLD2
SUM
      COMM_SEG
      DISSAVINGS
      EMB_LBL
      FARE
      FARE_BAS1
      GFARE
      KILO
      LEVEL3
      MILES
      NAMEC
      NET_COMM
      NET_FARE
      NET_TKT_CNT
      NEW_SEG_COUNT
      ORGDST
      ORG_VALUE
      OTH_SEG
      RTE_LBL
      SAVINGS
      SEG_RANK
      TOTAL_FARE
      VASAVINGS
      C_COMM
      C_FARE
      C_MILES
      C_SEGMT
      C_KILO
      G_FARE
BY FLAG
BY ORG_VALUE
BY ORG_PRINT
BY RANK_VALUE
BY RO_PRINT
BY OTH_VAL
BY OTHER_PRINT
BY ALN
ON TABLE HOLD AS HOLD12 FORMAT FOCUS
END
-RUN

 

-SET &HLDPATH=TEMPPATH(50,'A50');
-SET &HRANK1=&HLDPATH || 'HOLD11.FOC';
-SET &HRANK2=&HLDPATH || 'HOLD12.FOC';
-RUN
 
USE CLEAR *
-RUN
 
EX SUUSES
-RUN
 
USE ADD
&HRANK1 AS HOLD11
&HRANK2 AS HOLD11
END
-RUN
 
 
 
 
 
 
-SET &&RPTSUF = 'SMY';
-INCLUDE FDEFRPTS
-RUN
 
DEFINE FILE HOLD11
  PER_FARE/D8.1=    IF ((C_FARE LT 1) AND (C_FARE GT (-1))) THEN 0
                    ELSE ((FARE/C_FARE)*100);
  SEGPER/D8.1 =     IF ((C_SEGMT LT 1) AND (C_SEGMT GT (-1))) THEN 0
                    ELSE ((NET_TKT_CNT/C_SEGMT)*100);
  PER_NFARE/D8.1=   IF ((C_COMM LT 1) AND (C_COMM GT (-1))) THEN 0
                    ELSE ((NET_COMM/C_COMM)*100);
  MILE_PCT/D8.1=    IF ((C_MILES LT 1) AND (C_MILES GT (-1))) THEN 0
                    ELSE ((MILES/C_MILES)*100);
  COSTPER_MILE/D8.2=IF ((MILES LT 1) AND (MILES GT (-1))) THEN 0
                    ELSE (FARE/MILES);
  AVGSEG_AMT/D8.2 = IF ((SEGMT LT 1) AND (SEGMT GT (-1))) THEN 0
                    ELSE (NET_FARE/SEGMT);
  AVGFLT/D8.2 =     IF ((NET_TKT_CNT LT 1) AND (NET_TKT_CNT GT (-1))) THEN 0
                    ELSE (NET_FARE/NET_TKT_CNT);
  PER_GFARE/D8.1=   IF ((G_FARE LT 1) AND (G_FARE GT (-1))) THEN 0
                    ELSE ((GFARE/G_FARE)*100);
  KILO_PCT/D8.1=    IF ((C_KILO LT 1) AND (C_KILO GT (-1))) THEN 0
                    ELSE ((KILO/C_KILO)*100);
  COSTPER_KILO/D14.2=IF ((KILO LT 1) AND (KILO GT (-1))) THEN 0
                    ELSE (GFARE/KILO);
 
-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS
-*                                  USED IN FOOTERSM
-**********************************************************************
  NOWTOD/A8 WITH ORG_VALUE = HHMMSS (NOWTOD);
END
TABLE FILE HOLD11
-INCLUDE HEADER
"&&SUBHEAD </1"
   &&S_SUBJ1
   &&S_SUBJ2
   &&S_SUBJ3
   &&S_SUBJ4
   &&S_SUBJ5
   &&S_SUBJ6
   &&S_SUBJ7
   &&S_SUBJ8
   &&S_SUBJ9
   &&S_SUBJ10
   &&S_TARG1
   &&S_TARG2
   &&S_TARG3
   &&S_TARG4
   &&S_TARG5
   &&S_TARG6
   &&S_TARG7
   &&S_TARG8
   &&S_TARG9
   &&S_TARG10
   &&SUMM_ON1
   &&SUMM_ON2
   &&SUMM_ON3
   &&SUMM_ON4
   &&SUMM_ON5
   &&SUMM_ON6
   &&SUMM_ON7
   &&SUMM_ON8
   &&SUMM_ON9
   &&SUMM_ON10
-INCLUDE FOOTERSM

 

-*ON TABLE SET STYLE &&SMSTY
-**************************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT
-*                                  WITH AN INCLUDE
-**************************************************************************
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT
 
ON TABLE SET STYLE *
 
-INCLUDE &&SMSTY
ENDSTYLE
&&OUTLINE1
&&SUMMDEST
&&OUTLINE2
END
-RUN
-* REJ ADDED TO TRAP ERRORS
-SET &&FEXNOW='CPDEMOOA';
-INCLUDE ERRORCHK
-IF &&RET GT 1 GOTO XXIT;
-* REJ ADDED TO TRAP ERRORS
 
-XXIT
