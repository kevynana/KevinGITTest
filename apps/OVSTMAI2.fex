-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* 07/27/16 - DLV - S-21094 Changed program to use modify instead of maintain


-INCLUDE SETECHO
SET ASNAMES = ON
 
DEFINE FILE OVHOLD
 FLAG/A1 = 'A';
 DOM/A30 = 'Domestic';
 INTL/A30 = 'International';
 TTL/A30 = 'Total';
END
TABLE FILE OVHOLD
SUM
CDM1NET_AMT CDM1TKT_ISS 
CIM1NET_AMT  CIM1TKT_ISS 
PDM1NET_AMT  PDM1TKT_ISS 
PIM1NET_AMT  PIM1TKT_ISS 
COMPUTE CFARE/D15.2 = CDM1NET_AMT + CIM1NET_AMT;
COMPUTE PFARE/D15.2 = PDM1NET_AMT + PIM1NET_AMT;
COMPUTE CTKT/P15 = CDM1TKT_ISS + CIM1TKT_ISS;
COMPUTE PTKT/P15 = PDM1TKT_ISS + PIM1TKT_ISS;
COMPUTE CDAVG/D15.2 = IF ((CDM1TKT_ISS LT 1) AND (CDM1TKT_ISS GT (-1))) THEN 0
                    ELSE (CDM1NET_AMT/CDM1TKT_ISS);
COMPUTE CIAVG/D15.2 = IF ((CIM1TKT_ISS LT 1) AND (CIM1TKT_ISS GT (-1))) THEN 0 
                    ELSE (CIM1NET_AMT/CIM1TKT_ISS); 
COMPUTE PDAVG/D15.2 = IF ((PDM1TKT_ISS LT 1) AND (PDM1TKT_ISS GT (-1))) THEN 0
                    ELSE (PDM1NET_AMT/PDM1TKT_ISS);
COMPUTE PIAVG/D15.2 = IF ((PIM1TKT_ISS LT 1) AND (PIM1TKT_ISS GT (-1))) THEN 0 
                    ELSE (PIM1NET_AMT/PIM1TKT_ISS);
COMPUTE TCAVG/D15.2 = IF ((CTKT LT 1) AND (CTKT GT (-1))) THEN 0 ELSE
                       (CFARE/CTKT);
COMPUTE TPAVG/D15.2 = IF ((PTKT LT 1) AND (PTKT GT (-1))) THEN 0 ELSE
                       (PFARE/PTKT);
BY DOM
BY INTL
BY TTL
ON TABLE HOLD AS OVHOLD2
END
-RUN
  

-* Domestic Air Volume

DEFINE FILE OVHOLD2
CATEGORY/A61 = 'Air';
CAT_ORDER/I2 = 1;
END
TABLE FILE OVHOLD2
PRINT CATEGORY/A61 AND DOM/A30 AS 'ROW_LABEL' AND
CAT_ORDER/I2 AND CDM1NET_AMT/D15C AS 'VOL_CURR' AND 
CDM1TKT_ISS/D15CS AS 'TKT_CURR' AND CDAVG/D15C AS 'PCT_CURR' AND
PDM1NET_AMT/D15C AS 'VOL_PRIOR' 
AND PDM1TKT_ISS/D15CS AS 'TKT_PRIOR' AND PDAVG/D15C AS 'PCT_PRIOR' AND
COMPUTE ROW_ORDER/I2 = 1; 
ON TABLE HOLD AS OVHOLD2D
END
-RUN


TABLE FILE OVHOLD2D
PRINT CATEGORY AND ROW_LABEL AND CAT_ORDER
      AND ROW_ORDER AND VOL_CURR AND TKT_CURR AND PCT_CURR
      AND VOL_PRIOR AND TKT_PRIOR AND PCT_PRIOR
ON TABLE HOLD AS OVHOLD2D1
END
-RUN
MODIFY FILE OV_STAP
FIXFORM FROM OVHOLD2D1
MATCH CATEGORY ROW_LABEL
ON MATCH REJECT
ON NOMATCH INCLUDE
DATA ON OVHOLD2D1
END
-RUN

-* International Air Volume

DEFINE FILE OVHOLD2
CATEGORY/A61 = 'Air';
CAT_ORDER/I2 = 1;
END
TABLE FILE OVHOLD2
PRINT CATEGORY/A61 AND INTL/A30 AS 'ROW_LABEL' AND
CAT_ORDER/I2 AND CIM1NET_AMT/D15C AS 'VOL_CURR' AND 
CIM1TKT_ISS/D15CS AS 'TKT_CURR' AND CIAVG/D15C AS 'PCT_CURR' AND
PDM1NET_AMT/D15C AS 'VOL_PRIOR' 
AND PIM1TKT_ISS/D15CS AS 'TKT_PRIOR' AND PIAVG/D15C AS 'PCT_PRIOR' AND
COMPUTE ROW_ORDER/I2 = 2; 
ON TABLE HOLD AS OVHOLD2I
END
-RUN


TABLE FILE OVHOLD2I
PRINT CATEGORY AND ROW_LABEL AND CAT_ORDER
      AND ROW_ORDER AND VOL_CURR AND TKT_CURR AND PCT_CURR
      AND VOL_PRIOR AND TKT_PRIOR AND PCT_PRIOR
ON TABLE HOLD AS OVHOLD2I1
END
-RUN
MODIFY FILE OV_STAP
FIXFORM FROM OVHOLD2I1
MATCH CATEGORY ROW_LABEL
ON MATCH REJECT
ON NOMATCH INCLUDE
DATA ON OVHOLD2I1
END
-RUN

-* Total Air Volume

DEFINE FILE OVHOLD2
CATEGORY/A61 = 'Air';
CAT_ORDER/I2 = 1;
END
TABLE FILE OVHOLD2
PRINT CATEGORY/A61 AND TTL/A30 AS 'ROW_LABEL' AND
CAT_ORDER/I2 AND CFARE/D15C AS 'VOL_CURR' AND 
CTKT/D15CS AS 'TKT_CURR' AND TCAVG/D15C AS 'PCT_CURR' AND
PFARE/D15C AS 'VOL_PRIOR' 
AND PTKT/D15CS AS 'TKT_PRIOR' AND TPAVG/D15C AS 'PCT_PRIOR' AND
COMPUTE ROW_ORDER/I2 = 3; 
ON TABLE HOLD AS OVHOLD2T
END
-RUN


TABLE FILE OVHOLD2T
PRINT CATEGORY AND ROW_LABEL AND CAT_ORDER
      AND ROW_ORDER AND VOL_CURR AND TKT_CURR AND PCT_CURR
      AND VOL_PRIOR AND TKT_PRIOR AND PCT_PRIOR
ON TABLE HOLD AS OVHOLD2T1
END
-RUN
MODIFY FILE OV_STAP
FIXFORM FROM OVHOLD2T1
MATCH CATEGORY ROW_LABEL
ON MATCH REJECT
ON NOMATCH INCLUDE
DATA ON OVHOLD2T1
END
-RUN
 


 
-GOTO XXIT;


-DEB
-* File OVERMAI2.FEX
MAINTAIN FILES OV_STAP AND TKT_TYPO

INFER OV_STAP.CATEGORY INTO E_STACK
INFER TKT_TYPO.CDM1NET_AMT INTO TYPO_STACK

COMPUTE E_STACK(1).CATEGORY = 'Air';
        E_STACK(2).CATEGORY = 'Air';
        E_STACK(3).CATEGORY = 'Air';
        E_STACK(1).ROW_LABEL = 'Domestic';
        E_STACK(2).ROW_LABEL = 'International';
        E_STACK(3).ROW_LABEL = 'Total';
        E_STACK(1).CAT_ORDER = '1';
        E_STACK(2).CAT_ORDER = '1';
        E_STACK(3).CAT_ORDER = '1';
        E_STACK(1).ROW_ORDER = '1'; 
        E_STACK(2).ROW_ORDER = '2';  
        E_STACK(3).ROW_ORDER = '3'; 
        CNT1/I2 = 0;


-* IF A_STACK.FOCCOUNT EQ 0 THEN GOTO EXITREPEAT

COMPUTE CNT1 = 1;
-* REPEAT WHILE CNT1 LE A_STACK.FOCCOUNT

REPEAT ALL
 STACK CLEAR TYPO_STACK
 NEXT TKT_TYPO.CDM1NET_AMT INTO TYPO_STACK
 
TYPE "LOADING STACKS"
 IF TYPO_STACK.FOCCOUNT EQ 0 THEN GOTO EXITREPEAT

-*NEW CASES   
    PERFORM NET_VOLUME
    PERFORM TKT_ISS
    PERFORM AVERAGE

ENDREPEAT

FOR ALL INCLUDE OV_STAP.VOL_CURR FROM E_STACK
COMMIT
-****************************
CASE NET_VOLUME

TYPE "NET_VOLUME"
-* DOMESTIC CALCULATIONS FOR NET VOLUME COLUMNS

COMPUTE 
 E_STACK(1).VOL_CURR = E_STACK(1).VOL_CURR
                       + (TYPO_STACK(CNT1).CDM1NET_AMT); 
                                              
 E_STACK(1).VOL_PRIOR = E_STACK(1).VOL_PRIOR
                        + (TYPO_STACK(CNT1).PDM1NET_AMT); 
                                        

-* INTERNATIONAL CALCULATIONS FOR NET VOLUME COLUMNS

E_STACK(2).VOL_CURR = E_STACK(2).VOL_CURR
                      + (TYPO_STACK(CNT1).CIM1NET_AMT); 
                                              
E_STACK(2).VOL_PRIOR = E_STACK(2).VOL_PRIOR
                       + (TYPO_STACK(CNT1).PIM1NET_AMT); 
                                              
-* DOMESTIC AND INTERNATIONAL CALCULATIONS FOR NET VOLUME COLUMNS

E_STACK(3).VOL_CURR = E_STACK(1).VOL_CURR + E_STACK(2).VOL_CURR;
E_STACK(3).VOL_PRIOR = E_STACK(1).VOL_PRIOR + E_STACK(2).VOL_PRIOR;

ENDCASE
-****************************

CASE TKT_ISS
TYPE "TKT_ISS"


-* DOMESTIC CALCULATIONS FOR NET TICKETS COLUMNS

COMPUTE 
 E_STACK(1).TKT_CURR = E_STACK(1).TKT_CURR
                       + TYPO_STACK(CNT1).CDM1TKT_ISS; 
                       
 E_STACK(1).TKT_PRIOR = E_STACK(1).TKT_PRIOR
                        + TYPO_STACK(CNT1).PDM1TKT_ISS;                          
 
-* INTERNATIONAL CALCULATIONS FOR TICKETS ISSUED COLUMNS

E_STACK(2).TKT_CURR = E_STACK(2).TKT_CURR
                      + TYPO_STACK(CNT1).CIM1TKT_ISS; 

E_STACK(2).TKT_PRIOR = E_STACK(2).TKT_PRIOR
                       + TYPO_STACK(CNT1).PIM1TKT_ISS; 

-* DOMESTIC AND INTERNATIONAL CALCULATIONS FOR TICKETS ISSUED COLUMNS

E_STACK(3).TKT_CURR = E_STACK(1).TKT_CURR + E_STACK(2).TKT_CURR;
E_STACK(3).TKT_PRIOR = E_STACK(1).TKT_PRIOR + E_STACK(2).TKT_PRIOR;

ENDCASE
-******************************************************
CASE AVERAGE

TYPE "AVERAGE"
-* DOMESTIC CALCULATIONS FOR AVERAGE COLUMNS
COMPUTE 
 E_STACK(1).PCT_CURR = IF ((E_STACK(1).TKT_CURR LT 1) AND
                           (E_STACK(1).TKT_CURR GT (-1))) THEN 0 ELSE
                           (E_STACK(1).VOL_CURR/E_STACK(1).TKT_CURR);
                       
                                              
 E_STACK(1).PCT_PRIOR = IF ((E_STACK(1).TKT_PRIOR LT 1) AND
                         (E_STACK(1).TKT_PRIOR GT (-1))) THEN 0 ELSE
                         (E_STACK(1).VOL_PRIOR/E_STACK(1).TKT_PRIOR);
                       
                                        

-* INTERNATIONAL CALCULATIONS FOR AVERAGE COLUMNS

E_STACK(2).PCT_CURR = IF ((E_STACK(2).TKT_CURR LT 1) AND
                           (E_STACK(2).TKT_CURR GT (-1))) THEN 0 ELSE
                           (E_STACK(2).VOL_CURR/E_STACK(2).TKT_CURR);
                       
                                              
 E_STACK(2).PCT_PRIOR = IF ((E_STACK(2).TKT_PRIOR LT 1) AND
                         (E_STACK(2).TKT_PRIOR GT (-1))) THEN 0 ELSE
                         (E_STACK(2).VOL_PRIOR/E_STACK(1).TKT_PRIOR); 
                                              
-* DOMESTIC AND INTERNATIONAL CALCULATIONS FOR AVERAGE COLUMNS

E_STACK(3).PCT_CURR = IF ((E_STACK(3).TKT_CURR LT 1) AND
                           (E_STACK(3).TKT_CURR GT (-1))) THEN 0 ELSE
                           (E_STACK(3).VOL_CURR/E_STACK(3).TKT_CURR);
                       
                                              
 E_STACK(3).PCT_PRIOR = IF ((E_STACK(3).TKT_PRIOR LT 1) AND
                         (E_STACK(3).TKT_PRIOR GT (-1))) THEN 0 ELSE
                         (E_STACK(3).VOL_PRIOR/E_STACK(3).TKT_PRIOR);

ENDCASE

END

-XXIT