-INCLUDE SETECHO
-TYPE STARTING PUSH_BURST_REPORTS_LS.FEX
-* File push_burst_reports_ls.fex
-*   This Focexec will check for scheduled Reports that need to be pushed
-*   each week and each month, and it is called from push_review_reports.fex
-*
SET BASEURL='&&SRVR.EVAL'
SET EMPTYREPORT=OFF
SET BYDISPLAY=ON
SET LINES=99999
 SET TEMPERASE = OFF
-SET &&WEB_PATH= TEMPPATH(50,'A50');
SET EDAPATH=+&&WEB_PATH;
-SET &FILEX = 'BHLDMS';
 
 
-INCLUDE CLASSPATH
 
-SET &&WPATH1=TEMPPATH(50,'A50');
-SET &&JPATH=STRREP(50,'&&WPATH1.EVAL',1,'\',2,'\\',150,'A150');
 
-DEFAULT &THRU=0;
-SET &WHATOWNER = '';

-DEFAULT &THRU=20140524;
-SET &WHATOWNER = 'WHERE ROLLUP_CODE EQ ''RDFL-R'' AND OWNER EQ ''deb'''; 

-SET &WHATDATESW = 'WHERE ROLLUP.ROLLUP.END_DATE GT LAST_WEEKLY_PROCESS_DATE AND ROLLUP.ROLLUP.END_DATE GE ATO_DATE';
-SET &WHATDATES  = 'WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND ATO_DATE GT LAST_PROCESS_DATE';

-SET &WHATDATES = '';
-SET &WHATDATESW = '';

-SET &TDATE=IF &THRU EQ 0 THEN &YYMD ELSE &THRU;

-* Get Reports where the Total Set was scheduled and to be bursted
JOIN CLEAR *
JOIN INNER BURST_GROUPS.BURST_GROUPS.BREAK_KEY IN BURST_GROUPS TO
 MULTIPLE BURST_REPORT_KEYS.BURST_REPORT_KEYS.BREAK_KEY IN BURST_REPORT_KEYS AS J1
END
JOIN INNER BURST_REPORT_KEYS.BURST_REPORT_KEYS.SET_KEY IN BURST_GROUPS TO
 UNIQUE RPT_SET.RPT_SET.SET_KEY IN RPT_SET AS J2
END
JOIN INNER BURST_GROUPS.BURST_GROUPS.ROLLUP_CODE IN BURST_GROUPS TO
 UNIQUE ROLLUP.ROLLUP.ROLLUP_CODE IN ROLLUP AS J3
END
JOIN INNER BURST_REPORT_KEYS.BURST_REPORT_KEYS.SET_KEY IN BURST_GROUPS TO
 MULTIPLE RPT_INST.RPT_INST.SET_KEY IN RPT_INST AS J4
END
JOIN
INNER RPT_INST.RPT_INST.GLOBAL_PARM IN BURST_GROUPS TO UNIQUE
 ROLLSET_MASTER.ROLLSET_MASTER.GLOBAL_PARM IN ROLLSET_MASTER AS J5
END
JOIN
 INNER BURST_GROUPS.BURST_GROUPS.OWNER IN BURST_GROUPS TO UNIQUE
 USRTBL.USRTBL.USER_NAME IN USRTBL TAG J0 AS J0
END
-RUN
 
-* Get list of Weekly Scheduled Reports
DEFINE FILE BURST_GROUPS
OUTTO/A2='TC';
-* Today's Date
-*TDATE1/YYMD=&TDATE;
TDATE1/YYMD=END_DATE + 1;
P_MONTH/MDYY=TDATE1;
P_BOW/MDYY=DATEMOV(P_MONTH, 'BOW');
P_EOW/MDYY=DATEMOV(P_MONTH, 'EOW');
 
AFM_DATE/MDYY=DATEADD(P_BOW, 'D', (-7));
ATO_DATE/MDYY=DATEADD((P_EOW + 2), 'D', (-7));
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'D', (-7)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'D', (-7)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=ATX_DATE0;
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
ACYFM_DATE/MDYY=AFM_DATE;
ACYTO_DATE/MDYY=ATO_DATE;
APYFM_DATE/MDYY=AFM_DATE;
APYTO_DATE/MDYY=ATO_DATE;
RPT_NAMEX/A60='Weekly-' || RPT_NAME;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_W EQ '1'
WHERE BURST_REPORT_KEYS.INST_KEY EQ 0
 
&WHATDATESW
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDWS FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'HLDWS' ELSE &FILEX;
 
-* Get list of Monthly Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_M EQ '1' THEN P_BOM ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Monthly-' || RPT_NAME;
 
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
      END_DATE
      EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER 
WHERE SCHED_M EQ '1'
WHERE BURST_REPORT_KEYS.INST_KEY EQ 0
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDMS FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDMS' ELSE &FILEX;
 
-* Get list of Monthly YTD Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_MYTD EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='MYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_MYTD EQ '1'
WHERE BURST_REPORT_KEYS.INST_KEY EQ 0
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDMYTDS FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDMYTDS' ELSE &FILEX;
 
-* Get list of Quarterly Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_Q EQ '1' AND CUR_QTR EQ '1' THEN Q1_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '2' THEN Q2_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '3' THEN Q3_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '4' THEN Q4_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Quarterly-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_Q EQ '1'
WHERE BURST_REPORT_KEYS.INST_KEY EQ 0
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDQS FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDQS' ELSE &FILEX;
 
 
-* Get list of Quarterly YTD Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_QYTD EQ '1' THEN Q1_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='QYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
      END_DATE
      EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_QYTD EQ '1'
WHERE BURST_REPORT_KEYS.INST_KEY EQ 0
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDQYTDS FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDQYTDS' ELSE &FILEX;
 
-* Get list of Annual Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_A EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Annual-' || RPT_NAME;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
      END_DATE
      EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_A EQ '1'
WHERE BURST_REPORT_KEYS.INST_KEY EQ 0
WHERE RUN_EOM EQ ANNUAL
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDAS FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDAS' ELSE &FILEX;
 
-individual
-***************************************************************************
-* Get Individual Reports that were scheduled
-***************************************************************************
JOIN CLEAR *
JOIN INNER BURST_GROUPS.BURST_GROUPS.BREAK_KEY IN BURST_GROUPS TO
 MULTIPLE BURST_REPORT_KEYS.BURST_REPORT_KEYS.BREAK_KEY IN BURST_REPORT_KEYS AS J1
END
JOIN INNER BURST_REPORT_KEYS.BURST_REPORT_KEYS.SET_KEY IN BURST_GROUPS TO
 UNIQUE RPT_SET.RPT_SET.SET_KEY IN RPT_SET AS J2
END
JOIN INNER BURST_GROUPS.BURST_GROUPS.ROLLUP_CODE IN BURST_GROUPS TO
 UNIQUE ROLLUP.ROLLUP.ROLLUP_CODE IN ROLLUP AS J3
END
JOIN INNER BURST_REPORT_KEYS.BURST_REPORT_KEYS.INST_KEY IN BURST_GROUPS TO
 UNIQUE RPT_INST.RPT_INST.INST_KEY IN RPT_INST AS J4
END
JOIN
INNER RPT_INST.RPT_INST.GLOBAL_PARM IN BURST_GROUPS TO UNIQUE
 ROLLSET_MASTER.ROLLSET_MASTER.GLOBAL_PARM IN ROLLSET_MASTER AS J5
END
JOIN
 INNER BURST_GROUPS.BURST_GROUPS.OWNER IN BURST_GROUPS TO UNIQUE
 USRTBL.USRTBL.USER_NAME IN USRTBL TAG J0 AS J0
END
-RUN
 
DEFINE FILE BURST_GROUPS CLEAR
OUTTO/A2='TC';
-* Today's Date
-*TDATE1/YYMD=&TDATE;
TDATE1/YYMD=END_DATE + 1;
P_MONTH/MDYY=TDATE1;
P_BOW/MDYY=DATEMOV(P_MONTH, 'BOW');
P_EOW/MDYY=DATEMOV(P_MONTH, 'EOW');
 
AFM_DATE/MDYY=DATEADD(P_BOW, 'D', (-7));
ATO_DATE/MDYY=DATEADD((P_EOW + 2), 'D', (-7));
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'D', (-7)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'D', (-7)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=ATX_DATE0;
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
ACYFM_DATE/MDYY=AFM_DATE;
ACYTO_DATE/MDYY=ATO_DATE;
APYFM_DATE/MDYY=AFM_DATE;
APYTO_DATE/MDYY=ATO_DATE;
 
RPT_NAMEX/A60='Weekly-' || RPT_NAME;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
-* Get list of Weekly Scheduled Reports
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
      END_DATE
      EMAIL 
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_W EQ '1'
 
&WHATDATESW
 
ON TABLE HOLD AS HLDW FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'HLDW' ELSE &FILEX;
 
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_M EQ '1' THEN P_BOM ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Monthly-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
 
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_M EQ '1'
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDM FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDM' ELSE &FILEX;
 
-* Get list of Monthly YTD Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_MYTD EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='MYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_MYTD EQ '1'
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDMYTD FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDMYTD' ELSE &FILEX;
 
-* Get list of Quarterly Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_Q EQ '1' AND CUR_QTR EQ '1' THEN Q1_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '2' THEN Q2_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '3' THEN Q3_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '4' THEN Q4_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Quarterly-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_Q EQ '1'
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDQ FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDQ' ELSE &FILEX;
 
-* Get list of Quarterly YTD Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_QYTD EQ '1' THEN Q1_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='QYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_QYTD EQ '1'
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDQYTD FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDQYTD' ELSE &FILEX;
 
-* Get list of Annual Scheduled Reports
DEFINE FILE BURST_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_A EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Annual-' || RPT_NAME;
-*PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE BURST_GROUPS
PRINT SET_KEY
      INST_KEY
      BREAK_KEY
      BREAK_NAME
   BREAK_LEVEL
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
   END_DATE
   EMAIL
BY OWNER AS 'SCHED_OWNER'
&WHATOWNER
WHERE SCHED_A EQ '1'
WHERE RUN_EOM EQ ANNUAL
 
&WHATDATES
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS BHLDA FORMAT FOCUS
END
-RUN
-SET &FILEX = IF &LINES NE 0 THEN 'BHLDA' ELSE &FILEX;
 
-CombineALL
-*-SET &FILEX = 'BHLDA';
-*-SET &FILEX = 'HLDWS';
-* Put the files together and eliminate duplicates based on the
-* date ranges the reports are running for.
-*
USE CLEAR *
USE
HLDWS.FOC AS &FILEX
BHLDMS.FOC AS &FILEX
BHLDMYTDS.FOC AS &FILEX
BHLDQS.FOC AS &FILEX
BHLDQYTDS.FOC AS &FILEX
BHLDAS.FOC AS &FILEX
HLDW.FOC AS &FILEX
BHLDM.FOC AS &FILEX
BHLDMYTD.FOC AS &FILEX
BHLDQ.FOC AS &FILEX
BHLDQYTD.FOC AS &FILEX
BHLDA.FOC AS &FILEX
END
-RUN
 
DEFINE FILE &FILEX
-*P_EADDRS/A765=LOCASE(765, PUSH_EADDRS, P_EADDRS);
FEXNAME/A10 = 'WRUNBURST';
END
TABLE FILE &FILEX
PRINT
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      FEXNAME AS 'EXFEX'
      ROLLUP_CODE
      BREAK_NAME
   BREAK_LEVEL
   EMAIL
BY SCHED_OWNER
BY SET_KEY
BY BREAK_KEY
BY INST_KEY
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
 
ON TABLE HOLD AS 'XXXPARMS' FORMAT FOCUS INDEX INST_KEY
END
-RUN
 
JOIN CLEAR *
JOIN
INNER BREAK_KEY IN XXXPARMS TO MULTIPLE BREAK_KEY IN BURST_REPORT_HIERS AS J1
END
  
TABLE FILE XXXPARMS
PRINT
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      BREAK_NAME
   BREAK_LEVEL
   ROLL_LEV
   EMAIL_ADDRS
   EMAIL
BY SCHED_OWNER
BY SET_KEY
BY BREAK_KEY
BY INST_KEY
BY AFM_DATE NOPRINT
BY ATO_DATE NOPRINT
BY AFX_DATE NOPRINT
BY ATX_DATE NOPRINT
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS RCPARMBA
END
-RUN
 
TABLE FILE RCPARMBA
SUM
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      BREAK_NAME
      EMAIL_ADDRS/A765 AS 'PUSH_EADDRS'
      EMAIL
BY SCHED_OWNER
BY SET_KEY
BY BREAK_KEY
BY INST_KEY
BY RPT_NAME
BY BREAK_LEVEL
BY ROLL_LEV
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS RCPARMB0
END
-RUN
 
JOIN CLEAR *
JOIN SET_KEY IN RCPARMB0 TO SET_KEY IN RPT_SET AS J1
JOIN INST_KEY IN RCPARMB0 TO INST_KEY IN RPT_INST AS J2
-RUN
 
DEFINE FILE RCPARMB0
PUSH_EADDRS1/A765=CTRAN(765, PUSH_EADDRS, 013, 032, PUSH_EADDRS1);
PUSH_EADDRS2/A765=CTRAN(765, PUSH_EADDRS1, 010, 032, PUSH_EADDRS2);
END
TABLE FILE RCPARMB0
SUM
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      BREAK_NAME
      PUSH_EADDRS2 AS PUSH_EADDRS
      RPT_SET.ROLLUP_CODE AS S_ROLLUP
      RPT_INST.ROLLUP_CODE AS I_ROLLUP
      EMAIL
BY SCHED_OWNER
BY SET_KEY
BY BREAK_KEY
BY INST_KEY
BY RPT_NAME
BY BREAK_LEVEL
BY ROLL_LEV
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS RCPARMBA
END
-RUN
 
JOIN CLEAR *
-RUN
 
DEFINE FILE RCPARMBA
-* PUSH_EADDRS2/A765 = 'lsi@tandt.com';
-* EMAIL2/A100 = 'lsi@tandt.com';
  PUSH_EADDRS2/A765 = 'dvencil@tandt.com';
 EMAIL2/A100 = 'dvencil@tandt.com';
END
TABLE FILE RCPARMBA
SUM
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      BREAK_NAME
      PUSH_EADDRS2 AS 'PUSH_EADDRS'
      EMAIL2 AS 'EMAIL'
      
BY SCHED_OWNER
BY SET_KEY
BY BREAK_KEY
BY INST_KEY
BY RPT_NAME NOPRINT
BY BREAK_LEVEL
BY ROLL_LEV
 
WHERE ROLLUP_CODE EQ I_ROLLUP AND
      ROLLUP_CODE EQ S_ROLLUP
 
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS RCPARMB1
END
-RUN



-INCLUDE PUSH_BURST_REPORTS_SCHEDULE_LS
-RUN

-QUIT

-*TABLE FILE RCPARMB1
-*LIST *
-*END
-*-RUN
-*-QUIT
 
-SET &TDAY=EDIT(&MDYY,'99/99/9999');
 
TABLE FILE RCPARMBA
" "
"eTTek Review Burst Reports"
"** Error Report for &TDAY **"
""
"Set Rollup does not match Instance Rollup"
PRINT
      SET_KEY AS 'Set,Key'
      INST_KEY AS 'Inst,Key'
      RPT_NAME AS 'Report Name'
   BREAK_LEVEL AS 'Level'
      ROLL_LEV AS 'Org. Member'
      OUTPUT_FORMAT AS 'Report,Format'
      DATETYPE AS 'Date,Type'
      AFM_DATE AS 'FM_Date'
      ATO_DATE AS 'TO_Date'
      S_ROLLUP AS 'Set,Rollup'
      I_ROLLUP AS 'Instance,Rollup'
 
      PUSH_EADDRS AS 'Push To EMail Addresses'
      EMAIL
BY SCHED_OWNER AS 'Schedule,Owner'
BY ROLLUP_CODE AS 'Rollup'
BY PUSH_EADDRS NOPRINT UNDER-LINE
WHERE ROLLUP_CODE NE I_ROLLUP OR
      ROLLUP_CODE NE S_ROLLUP
ON TABLE SET PAGE-NUM OFF
ON TABLE NOTOTAL
ON TABLE HOLD AS PRPTE2 FORMAT HTMTABLE
ON TABLE SET EMPTYREPORT OFF
ON TABLE SET HTMLCSS ON
ON TABLE SET STYLE *
     UNITS=IN,
     PAGESIZE='Letter',
     LEFTMARGIN=0.250000,
     RIGHTMARGIN=0.250000,
     TOPMARGIN=0.250000,
     BOTTOMMARGIN=0.250000,
     SQUEEZE=ON,
     ORIENTATION=PORTRAIT,
$
TYPE=REPORT,
     FONT='ARIAL',
     SIZE=10,
     COLOR='BLACK',
     BACKCOLOR='NONE',
     STYLE=NORMAL,
$
TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     BACKCOLOR=( RGB(242 242 242) 'WHITE' ),
$
TYPE=TITLE,
     COLUMN=N9,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     COLUMN=N7,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9,
     COLOR='WHITE',
     BACKCOLOR=RGB(154 175 212),
     STYLE=BOLD,
$
TYPE=HEADING,
     SIZE=12,
     COLOR=RGB(36 43 114),
     STYLE=BOLD,
     JUSTIFY=CENTER,
$
TYPE=FOOTING,
     STYLE=BOLD,
$
TYPE=SUBHEAD,
     SIZE=9,
     STYLE=BOLD,
$
TYPE=REPORT,
     IMAGE=/image/TNTLogo.gif,
     POSITION=(0.027778 0.027778),
     SIZE=(1.902778 0.652778),
$
TYPE=REPORT,
     COLUMN=N13,
     WRAP=8.000000,
$
ENDSTYLE
END
-RUN
 
 
TABLE FILE RCPARMBA
" "
"eTTek Review Burst Reports"
"Scheduled to be Pushed"
"for &TDAY"
PRINT
      SET_KEY AS 'Set,Key'
      INST_KEY AS 'Inst,Key'
      RPT_NAME AS 'Report Name'
   BREAK_LEVEL AS 'Level'
      ROLL_LEV AS 'Org. Member'
      OUTPUT_FORMAT AS 'Report,Format'
      DATETYPE AS 'Date,Type'
      AFM_DATE AS 'FM_Date'
      ATO_DATE AS 'TO_Date'
      AFX_DATE AS 'FX_Date'
      ATX_DATE AS 'TX_Date'
 
      PUSH_EADDRS AS 'Push To EMail Addresses'
      EMAIL
BY SCHED_OWNER AS 'Schedule,Owner'
BY ROLLUP_CODE AS 'Rollup'
BY PUSH_EADDRS NOPRINT UNDER-LINE
WHERE ROLLUP_CODE EQ I_ROLLUP AND
      ROLLUP_CODE EQ S_ROLLUP
ON PUSH_EADDRS SUBHEAD
"Schedule created for:"
ON TABLE SET PAGE-NUM OFF
ON TABLE NOTOTAL
ON TABLE SET LINES 99999
ON TABLE HOLD AS PRPT2 FORMAT HTMTABLE
ON TABLE SET EMPTYREPORT ON
ON TABLE SET HTMLCSS ON
ON TABLE SET STYLE *
     UNITS=IN,
     PAGESIZE='Letter',
     LEFTMARGIN=0.250000,
     RIGHTMARGIN=0.250000,
     TOPMARGIN=0.250000,
     BOTTOMMARGIN=0.250000,
     SQUEEZE=ON,
     ORIENTATION=PORTRAIT,
$
TYPE=REPORT,
     FONT='ARIAL',
     SIZE=10,
     COLOR='BLACK',
     BACKCOLOR='NONE',
     STYLE=NORMAL,
$
TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     BACKCOLOR=( RGB(242 242 242) 'WHITE' ),
$
TYPE=TITLE,
     COLUMN=N9,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     COLUMN=N7,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9,
     COLOR='WHITE',
     BACKCOLOR=RGB(154 175 212),
     STYLE=BOLD,
$
TYPE=HEADING,
     SIZE=12,
     COLOR=RGB(36 43 114),
     STYLE=BOLD,
     JUSTIFY=CENTER,
$
TYPE=FOOTING,
     STYLE=BOLD,
$
TYPE=SUBHEAD,
     SIZE=9,
     STYLE=BOLD,
$
TYPE=REPORT,
     IMAGE=/image/TNTLogo.gif,
     POSITION=(0.027778 0.027778),
     SIZE=(1.902778 0.652778),
$
TYPE=REPORT,
     COLUMN=N14,
     WRAP=8.000000,
$
ENDSTYLE
END
-RUN


-IF &RECORDS EQ 0 GOTO NOBURSTBKUP;
-QUIT
APP MAP RQBKUP D:\Data\push_rpt_backups
APP PREPENDPATH RQBKUP
-RUN
-SET &TI=EDIT(HHMMSS('A10'),'99$99$99');
-SET &FN='RQBKUP/push_burst_parms' || '&YYMD' || '&TI';
DEFINE FILE RCPARMB1
STYPE/A1='P';
RCFORMAT/A15=OUTPUT_FORMAT;
FTP1/A50='';
FTP2/A50='';
FTP3/A50='';
END
TABLE FILE RCPARMB1
PRINT   OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
      STYPE
      RCFORMAT
   BREAK_LEVEL
   ROLL_LEV
      PUSH_EADDRS
      EMAIL
BY EXFEX
BY SCHED_OWNER
BY SET_KEY
BY INST_KEY
ON TABLE SAVE AS &FN.EVAL FORMAT COMT
END
-RUN
-NOBURSTBKUP
 
JOIN CLEAR *
-RUN
USE CLEAR *
USE
BHLDMS.FOC AS BHLDAS
BHLDMYTDS.FOC AS BHLDAS
BHLDQS.FOC AS BHLDAS
BHLDQYTDS.FOC AS BHLDAS
BHLDAS.FOC AS BHLDAS
END
-RUN
 
TABLE FILE BHLDAS
SUM ATO_DATE AS LAST_PROCESS_DATE
BY BREAK_KEY
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS HLDSETS
END
-RUN
 
DEFINE FILE HLDWS
END
TABLE FILE HLDWS
SUM END_DATE AS LAST_WEEKLY_PROCESS_DATE
BY BREAK_KEY
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS HLDWSETS
END
-RUN
 
 
USE CLEAR *
USE
BHLDM.FOC AS BHLDA
BHLDMYTD.FOC AS BHLDA
BHLDQ.FOC AS BHLDA
BHLDQYTD.FOC AS BHLDA
BHLDA.FOC AS BHLDA
END
-RUN
 
TABLE FILE BHLDA
SUM ATO_DATE AS LAST_PROCESS_DATE
BY BREAK_KEY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDINST
END
-RUN
 
TABLE FILE HLDW
SUM END_DATE AS LAST_WEEKLY_PROCESS_DATE
BY BREAK_KEY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDWINST
END
-RUN
 
MODIFY FILE BURST_GROUPS
FIXFORM FROM HLDSETS
MATCH BREAK_KEY
 ON MATCH UPDATE LAST_PROCESS_DATE
DATA ON HLDSETS
END
-RUN
 
MODIFY FILE BURST_GROUPS
FIXFORM FROM HLDINST
MATCH BREAK_KEY
 ON MATCH UPDATE LAST_PROCESS_DATE
DATA ON HLDINST
END
-RUN
 
MODIFY FILE BURST_GROUPS
FIXFORM FROM HLDWSETS
MATCH BREAK_KEY
 ON MATCH UPDATE LAST_WEEKLY_PROCESS_DATE
DATA ON HLDWSETS
END
-RUN
 
MODIFY FILE BURST_GROUPS
FIXFORM FROM HLDWINST
MATCH BREAK_KEY
 ON MATCH UPDATE LAST_WEEKLY_PROCESS_DATE
DATA ON HLDWINST
END
-RUN
