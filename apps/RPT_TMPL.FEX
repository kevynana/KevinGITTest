-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**

-* File RPT_TMPL.FEX
-*
-*****   This routine allows the entry and editing of Report Template
-*****     masters and their associated fields and properties, eventually
-*****     used in generating Report Master instances, which in turn are
-*****     included in Report Sets, which in turn contain specific Report
-*****     instances for execution.
-*****   AUTHOR:  Dave Kuzanek
-*****   PRODUCTION DATE: 

MAINTAIN FILE rollup AND control AND tpl_mstr AND tpl_fld
COMPUTE LastRow/I4 =;
COMPUTE CurrRow/I4 =;
COMPUTE Prt_YN.Rad/A8 = ;
COMPUTE Srt_YN.Rad/A8 = ;
COMPUTE Sel_YN.Rad/A8 = ;
COMPUTE Sum_YN.Rad/A8 = ;
COMPUTE Rnk_YN.Rad/A8 = ;
COMPUTE Sum_TS.Rad/A8 = ;
COMPUTE Confirm_Code/A1 = ;
COMPUTE Group_Stack.Rpt_Group/A3 = ;
COMPUTE Type_Stack.Rpt_Type/A3 = ;
COMPUTE Group_Hold/A3 = ;
COMPUTE Type_Hold/A3 = ;
COMPUTE Cnt1/I4 = ;
COMPUTE Cnt2/I4 = ;

COMPUTE Group_Stack(1).Rpt_Group = 'AIR';
COMPUTE Group_Stack(2).Rpt_Group = 'CAR';
COMPUTE Group_Stack(3).Rpt_Group = 'HTL';
COMPUTE Group_Stack(4).Rpt_Group = 'C/P';
COMPUTE Group_Stack(5).Rpt_Group = 'EXC';
COMPUTE Group_Stack(6).Rpt_Group = 'CMB';
COMPUTE Group_Stack(7).Rpt_Group = 'OTH';

COMPUTE Type_Stack(1).Rpt_Type = 'DET';
COMPUTE Type_Stack(2).Rpt_Type = 'SUM';
COMPUTE Type_Stack(3).Rpt_Type = 'GRF';
COMPUTE Type_Stack(3).Rpt_Type = 'SPC';

REPOSITION CONTROL
FOR ALL NEXT CONTROL.CONTROL_ID INTO Cntl_Stack
IF Cntl_Stack.CONTROL_ID NE 'PGM' THEN
BEGIN
  TYPE " Sorry, you do not have authority to use this function ! "
  GOTO EXIT
ENDBEGIN

COMPUTE Group_Stack.FocIndex = 1;
COMPUTE Type_Stack.FocIndex = 1;

PERFORM Winform_RptTemplate

CASE Refresh_Stack
-* This case refreshes the Template Field grid object following an Update or
-*   delete action within the grid
  REPOSITION TFLD_KEY
  STACK CLEAR FLD_STACK
  FOR ALL NEXT TFLD_KEY INTO Fld_Stack WHERE TPL_FLD.TPL_ID EQ 
    Tpl_Stack(Tpl_Stack.FocIndex).TPL_MSTR.TPL_ID; 
  STACK SORT Fld_Stack BY PRT_SEQ
-* CurrRow and LastRow are used during movement from one grid row to
-*   another, to update the Radio button flags in the Template Field stack
  COMPUTE CurrRow = 1;
  COMPUTE LastRow = 0;
  COMPUTE TempFields.FldGrid.CurStkRowNum = CurrRow;
  COMPUTE Prt_YN.FocIndex = 
    IF Fld_Stack(CurrRow).PRT_OPTION EQ 'Y' THEN 1 ELSE 2;
  COMPUTE Srt_YN.FocIndex = 
    IF Fld_Stack(CurrRow).SORT_OPTION EQ 'Y' THEN 1 ELSE 2;
  COMPUTE Sel_YN.FocIndex = 
    IF Fld_Stack(CurrRow).SELECT_OPTION EQ 'Y' THEN 1 ELSE 2;
  COMPUTE Sum_YN.FocIndex = 
    IF Fld_Stack(CurrRow).SUMM_OPTION EQ 'Y' THEN 1 ELSE 2;
  COMPUTE Rnk_YN.FocIndex = 
    IF Fld_Stack(CurrRow).RANK_OPTION EQ 'Y' THEN 1 ELSE 2;
  COMPUTE Sum_TS.FocIndex = IF Fld_Stack(CurrRow).TARG_SUBJ EQ 'T' 
    THEN 1 ELSE 2;
ENDCASE

CASE Get_Rollup
-* This case retrieves the Rollup Code for the current environment
REPOSITION CONTROL
NEXT CONTROL.ROLLUP_CODE INTO Ctl_Stack
REPOSITION ROLLUP
NEXT ROLLUP.ROLLUP_CODE INTO Roll_Stack 
  WHERE ROLLUP.ROLLUP_CODE EQ Ctl_Stack(1).ROLLUP_CODE;
ENDCASE

CASE Add_Tmpl
-* This case adds a new Template Master
IF (Tpl_Stack.TPL_ID EQ ' ') OR (Tpl_Stack.TPL_ID EQ '') THEN 
BEGIN
  TYPE "You must enter a Template ID"
  GOTO ENDCASE
ENDBEGIN
FOR ALL INCLUDE TPL_MSTR.TPL_ID FROM Tpl_Stack
STACK CLEAR Tpl_Stack
ENDCASE

CASE Pop_Tmpl
-* This case populates the Template Master drop down object for selection
-*   of a Template ID
REPOSITION TPL_MSTR.TPL_ID
STACK CLEAR Tpl_Stack
FOR ALL NEXT TPL_MSTR.TPL_ID INTO Tpl_Stack
ENDCASE

case Select_Template
  COMPUTE Cnt2 = 1;
  COMPUTE Group_Stack.FocIndex = 1;
  REPEAT WHILE Cnt2 LE Group_Stack.FocCount
    IF Group_Stack(Cnt2).Rpt_Group EQ 
      Tpl_Stack(Tpl_Stack.FocIndex).RPT_GROUP 
      THEN BEGIN
        COMPUTE Group_Stack.FocIndex = Cnt2;
        GOTO EXITREPEAT
      ENDBEGIN
    COMPUTE Cnt2 = Cnt2 + 1;
  ENDREPEAT
  COMPUTE Group_Hold = Group_Stack(Group_Stack.FocIndex).Rpt_Group;
  COMPUTE Cnt2 = 1;
  COMPUTE Type_Stack.FocIndex = 1;
  REPEAT WHILE Cnt2 LE Type_Stack.FocCount
    IF Type_Stack(Cnt2).Rpt_Type EQ 
      Tpl_Stack(Tpl_Stack.FocIndex).RPT_TYPE 
      THEN BEGIN
        COMPUTE Type_Stack.FocIndex = Cnt2;
        GOTO EXITREPEAT
      ENDBEGIN
    COMPUTE Cnt2 = Cnt2 + 1;
  ENDREPEAT
  COMPUTE Type_Hold = Type_Stack(Type_Stack.FocIndex).Rpt_Type;
endcase

CASE Clr_Main
STACK CLEAR Tpl_Stack
ENDCASE

case Del_Tmpl
-* This case deletes a Template Master, along with all associated Template
-*   Fields

WINFORM SHOW DelConfirm
IF Confirm_Code EQ 'N' THEN GOTO ENDCASE

FOR ALL NEXT TFLD_KEY INTO Fld_Stack 
  WHERE TPL_FLD.TPL_ID EQ 
    Tpl_Stack(Tpl_Stack.FocIndex).TPL_ID;
FOR ALL DELETE TPL_FLD.TFLD_KEY FROM Fld_Stack
FOR 1 DELETE TPL_MSTR.TPL_MSTR FROM Tpl_Stack(Tpl_Stack.FocIndex)
COMMIT
STACK CLEAR Tpl_Stack Fld_Stack
endcase

case Pop_Fields
-* This case populates and initializes the Radio buttons used in conjunction
-*   with the Template Field grid object

COMPUTE Prt_YN(1).Rad = 'OPTIONAL';
COMPUTE Prt_YN(2).Rad = 'ALWAYS';
COMPUTE Srt_YN(1).Rad = 'OPTIONAL';
COMPUTE Srt_YN(2).Rad = 'NEVER';
COMPUTE Sel_YN(1).Rad = 'OPTIONAL';
COMPUTE Sel_YN(2).Rad = 'NEVER';
COMPUTE Sum_YN(1).Rad = 'ON';
COMPUTE Sum_YN(2).Rad = 'OFF';
COMPUTE Rnk_YN(1).Rad = 'ON';
COMPUTE Rnk_YN(2).Rad = 'OFF';
COMPUTE Sum_TS(1).Rad = 'TARGET';
COMPUTE Sum_TS(2).Rad = 'SUMMARY';
COMPUTE Prt_YN.FocIndex = 1;
COMPUTE Srt_YN.FocIndex = 1;
COMPUTE Sel_YN.FocIndex = 1;
COMPUTE Sum_YN.FocIndex = 1;
COMPUTE Rnk_YN.FocIndex = 1;
COMPUTE Sum_TS.FocIndex = 1;
PERFORM Refresh_Stack
IF FLD_STACK(CurrRow).PRT_SEQ EQ ' ' THEN
-* If the grid row is blank, default the Radio buttons to Yes
  BEGIN
    COMPUTE Prt_YN.FocIndex = 1;
    COMPUTE Srt_YN.FocIndex = 1;
    COMPUTE Sel_YN.FocIndex = 1;
    COMPUTE Sum_YN.FocIndex = 1;
    COMPUTE Rnk_YN.FocIndex = 1;
    COMPUTE Sum_TS.FocIndex = 1;
  ENDBEGIN
ELSE
  BEGIN
-* If the grid row is not blank, set the Radio buttons according to the
-*   flag value within the corresponding Template Field stack row
    COMPUTE Prt_YN.FocIndex = 
      IF Fld_Stack(CurrRow).PRT_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Srt_YN.FocIndex = 
      IF Fld_Stack(CurrRow).SORT_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Sel_YN.FocIndex = 
      IF Fld_Stack(CurrRow).SELECT_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Sum_YN.FocIndex = 
      IF Fld_Stack(CurrRow).SUMM_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Rnk_YN.FocIndex = 
      IF Fld_Stack(CurrRow).RANK_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Sum_TS.FocIndex = IF Fld_Stack(CurrRow).TARG_SUBJ EQ 'T' 
        THEN 1 ELSE 2;
  ENDBEGIN
endcase

CASE Fld_Main
WINFORM SHOW TempFields
ENDCASE

CASE Grid_Sel_Chg
-* This case changes Template Field stack values for the previous Grid
-*   row upon selection of a new grid row
IF (LastRow GT 0) AND (Fld_Stack(CurrRow).FLD_NAME GT ' ') THEN
  BEGIN
    COMPUTE Fld_Stack(CurrRow).TFLD_KEY =
      Tpl_Stack(Tpl_Stack.FocIndex).TPL_ID | Fld_Stack(CurrRow).FLD_NAME;
    COMPUTE Fld_Stack(CurrRow).TPL_ID = Tpl_Stack(Tpl_Stack.FocIndex).TPL_ID;
-* In case the previous grid row was a new Template Field, the key value
-*   is put into the DB, so that eventual grid update will process all rows
    FOR 1 INCLUDE TPL_FLD.TFLD_KEY FROM Fld_Stack(CurrRow)
    COMMIT
    COMPUTE Fld_Stack(CurrRow).PRT_OPTION = 
      IF Prt_YN.FocIndex EQ 1 THEN 'Y' ELSE 'N';
    COMPUTE Fld_Stack(CurrRow).SORT_OPTION = 
      IF Srt_YN.FocIndex EQ 1 THEN 'Y' ELSE 'N';
    COMPUTE Fld_Stack(CurrRow).SELECT_OPTION = 
      IF Sel_YN.FocIndex EQ 1 THEN 'Y' ELSE 'N';
    COMPUTE Fld_Stack(CurrRow).SUMM_OPTION = 
      IF Sum_YN.FocIndex EQ 1 THEN 'Y' ELSE 'N';
    COMPUTE Fld_Stack(CurrRow).RANK_OPTION = 
      IF Rnk_YN.FocIndex EQ 1 THEN 'Y' ELSE 'N';
    IF (Fld_Stack(CurrRow).SUMM_OPTION EQ 'Y') OR 
      (Fld_Stack(CurrRow).RANK_OPTION EQ 'Y')
    THEN
      BEGIN
        COMPUTE Fld_Stack(CurrRow).TARG_SUBJ = 
          IF Sum_TS.FocIndex EQ 1 THEN 'T' ELSE 'S';
        WINFORM SET TempFields.SumTypTxt.VISIBLE TO YES
        WINFORM SET TempFields.SumTypRad.VISIBLE TO YES
      ENDBEGIN
    ELSE
      BEGIN
        COMPUTE Fld_Stack(CurrRow).TARG_SUBJ = ' ';
        WINFORM SET TempFields.SumTypTxt.VISIBLE TO NO
        WINFORM SET TempFields.SumTypRad.VISIBLE TO NO
      ENDBEGIN
  ENDBEGIN
-* Change the current grid row pointer, maintaining a pointer to the
-*   previous grid row
COMPUTE LastRow = CurrRow;
COMPUTE CurrRow = TempFields.FldGrid.CurStkRowNum;
IF FLD_STACK(CurrRow).PRT_SEQ EQ ' ' THEN
  BEGIN
    COMPUTE Prt_YN.FocIndex = 1;
    COMPUTE Srt_YN.FocIndex = 1;
    COMPUTE Sel_YN.FocIndex = 1;
    COMPUTE Sum_YN.FocIndex = 1;
    COMPUTE Rnk_YN.FocIndex = 1;
    COMPUTE Sum_TS.FocIndex = 1;
  ENDBEGIN
ELSE
  BEGIN
    COMPUTE Prt_YN.FocIndex = 
      IF Fld_Stack(CurrRow).PRT_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Srt_YN.FocIndex = 
      IF Fld_Stack(CurrRow).SORT_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Sel_YN.FocIndex = 
      IF Fld_Stack(CurrRow).SELECT_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Sum_YN.FocIndex = 
      IF Fld_Stack(CurrRow).SUMM_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Rnk_YN.FocIndex = 
      IF Fld_Stack(CurrRow).RANK_OPTION EQ 'Y' THEN 1 ELSE 2;
    COMPUTE Sum_TS.FocIndex = IF Fld_Stack(CurrRow).TARG_SUBJ EQ 'T' 
        THEN 1 ELSE 2;
    IF (Fld_Stack(CurrRow).SUMM_OPTION EQ 'N') AND 
       (Fld_Stack(CurrRow).RANK_OPTION EQ 'N') THEN
      BEGIN
        WINFORM SET TempFields.SumTypTxt.VISIBLE TO NO
        WINFORM SET TempFields.SumTypRad.VISIBLE TO NO
      ENDBEGIN
    ELSE
      BEGIN
        WINFORM SET TempFields.SumTypTxt.VISIBLE TO YES
        WINFORM SET TempFields.SumTypRad.VISIBLE TO YES
      ENDBEGIN
  ENDBEGIN
ENDCASE

CASE Fld_Update
PERFORM Grid_Sel_Chg
-* This case updates the entire grid stack to the DB, then refreshes the
-*   grid object
FOR ALL UPDATE TPL_FLD.TPL_ID FLD_NAME FLD_DESC DEF_NAME FLD_FORMAT 
  PRT_OPTION PRT_SEQ PRT_AS SORT_OPTION SELECT_OPTION SUMM_OPTION 
  TARG_SUBJ DECODE_FLD RANK_OPTION From FLD_STACK
COMMIT
PERFORM Refresh_Stack
ENDCASE

case Del_Field
-* This case deletes the current selected grid row from the DB, then
-*   refreshes the grid object

WINFORM SHOW DelConfirm
IF Confirm_Code EQ 'N' THEN GOTO ENDCASE

FOR 1 DELETE TPL_FLD.TFLD_KEY FROM
  FLD_STACK(TempFields.FldGrid.CurStkRowNum)
COMMIT
PERFORM Refresh_Stack
endcase

case Conf_Yes
COMPUTE Confirm_Code = 'Y';
WINFORM CLOSE DelConfirm
endcase

case Conf_No
COMPUTE Confirm_Code = 'N';
WINFORM CLOSE DelConfirm
endcase

case Upd_Tmpl
Update TPL_MSTR.RPT_GROUP TPL_MSTR.RPT_TYPE TPL_MSTR.RPT_STREAM 
TPL_MSTR.TNT_BITMAP TPL_MSTR.RPT_TITLE1 TPL_MSTR.RPT_TITLE2 
TPL_MSTR.TITLE_ESC TPL_MSTR.BODY_ESC TPL_MSTR.RPT_STYLE 
TPL_MSTR.RPT_LOOK TPL_MSTR.FRQ_JOBFILE TPL_MSTR.GLOBAL_PARM 
TPL_MSTR.USE_PARM
From tpl_stack(tpl_stack.focindex)
endcase

case Group_Select
COMPUTE Tpl_Stack(Tpl_Stack.FocIndex).RPT_GROUP = 
  Group_Stack(Group_Stack.FocIndex).Rpt_Group;
endcase

case Type_Select
COMPUTE Tpl_Stack(Tpl_Stack.FocIndex).RPT_TYPE = 
  Type_Stack(Type_Stack.FocIndex).Rpt_Type;
endcase

-* >> Generated Code Section. Do not edit/add/delete this or following lines

case Winform_RptTemplate
   Winform show RptTemplate
endcase

case Winform_TempFields
   Winform show TempFields
endcase

case Winform_DelConfirm
   Winform show DelConfirm
endcase

END
