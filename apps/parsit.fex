-* File PARSIT.FEX
-************************************************************
-* THIS PROGRAM PARSES THE S_TARG VARIABLES TO DETERMINE THE
-* BY FIELDS FOR DRILL DOWN REPORTS
-************************************************************

-*** COPY GLOBALS FOR LOCAL USE ***-
-*INPUT STRINGS WILL BE A MAXIMUM OF 63 CHARATERS IN LENGTH
-REPEAT S_LOOP0 FOR &N FROM 1 TO 10 STEP 1
-SET &VS_TAR.&N=&&S_TARG.&N ;
-S_LOOP0

-PARSEIT
-SET &V_PASS=0;
-SET &VNPRT_NO=0;
-SET &VNPRT_YES=0;
-SET &VPARSEBY='OFF';
-SET &VFND_NOPRT='OFF';
-SET &VPRINT='@';

-*add for multiple hierarchy break levels 
-IF &&MULTIBREAK NE 'Y' OR &&ALTHIER NE 'Y' THEN GOTO SKIPMULTIBRK;
TABLE FILE BRPTINST
BY BREAK_LEVELS
WHERE INST_KEY EQ &&IKEY 
ON TABLE SAVE
END
-RUN

-IF &LINES EQ 0 THEN GOTO SKIPMULTIBRK;
-READ SAVE &BL.18.
-SET &LEN = ARGLEN(60, '&BL.EVAL', 'I2');
-SET &NBRLVL = &LEN / 3;
-SET &V_PASS= IF &&MULTIBREAK NE 'Y' THEN 0 ELSE &NBRLVL;

-REPEAT AllHLevels FOR &VN FROM 1 TO &NBRLVL STEP 1 
-SET &LEV = GETTOK(&BL, 18, &VN, ';', 2, 'A2');

-SET &BL = IF &LEV LT '10' THEN EDIT(&LEV,'$9') ELSE '&LEV.EVAL';
-SET &BLD = 'LEVELDESC' | '&BL.EVAL';
-SET &ALINE = 'N0' | &VN | '&BLD.EVAL';
-SET &VSTRVAL3= GETTOK(&ALINE ,&ALINE.LENGTH,1,' ',53,'A53') | 'N';

-WRITE DRILLBYS NOCLOSE &VSTRVAL3
-AllHLevels
-SKIPMULTIBRK

-REPEAT NEXT_STR FOR &VN FROM 1 TO 10 STEP 1
-SET &VEOL_PRT='OFF';
-IF &VS_TAR.&VN.LENGTH LE 1 GOTO NEXT_STR ;
-SET &VBY_POS=
- POSIT(&VS_TAR.&VN,&VS_TAR.&VN.LENGTH,'BY ',3,I2);
-IF &VBY_POS LT 1 GOTO NEXT_STR ;
-SET &VS_TAR.&VN=
- &VS_TAR.&VN | ' VEOL';
-SET &VSTRVAL1='';
-SET &VSTRVAL2='';
-REPEAT NEXT_TOK FOR &VN2 FROM 1 TO 50 STEP 1
-SET &VSTRVAL1=
- GETTOK (&VS_TAR.&VN,&VS_TAR.&VN.LENGTH,&VN2,' ',50,'A50');
-IF &VSTRVAL1 EQ 'VEOL' 
- GOTO VEOL;
-IF &VSTRVAL1 EQ 'BY'
-GOTO BY_LOCATED ;
-IF &VSTRVAL1 EQ 'HIGHEST'
-GOTO NEXT_TOK ;
-IF &VPARSEBY EQ 'ON' 
-GOTO BUILD_STR ;
-NEXT_TOK
-MSGBOX '!!!'

-VEOL
-IF &VPARSEBY='OFF'
-GOTO CONT_VEOL ;
-SET &VEOL_PRT='ON';
-SET &VPRINT='Y';
-SET &VNPRT_YES=&VNPRT_YES+1;
-GOTO WRITE_STR
-CONT_VEOL
-SET &VN2=0;
-SET &VFND_NOPRT='OFF';
-NEXT_STR

-DONE
-WRITE DRILLBYS EOF
-CLOSE
-GOTO ENDIT


-**SUB FUNCTIONS**-

-BY_LOCATED
-IF &VPARSEBY EQ 'OFF' 
-GOTO INIT_STR ;
-IF &VPARSEBY EQ 'ON'
-GOTO NEXT_BY ;

-INIT_STR
-SET &V_PASS=&V_PASS+1;
-SET &VSTRVAL2='';
-SET &VPARSEBY='ON';
-SET &VFND_NOPRT='OFF';
-IF &V_PASS LT 10 
-GOTO ADD_0 ;
-SET &VTEMP=
- N || &V_PASS;
-GOTO ADD_VTEMP
-ADD_0
-SET &VTEMP=
- N || '0' || &V_PASS;
-GOTO ADD_VTEMP

-NEXT_BY
-SET &VPRINT='Y';
-SET &VNPRT_YES=
- &VNPRT_YES+1;
-SET &VSTRVAL3=
- GETTOK (&VSTRVAL2,&VSTRVAL2.LENGTH,1,' ',53,'A53') | &VPRINT;
-WRITE DRILLBY &VSTRVAL3
-IF  &VNPRT_YES EQ 3 
-GOTO DONE ;
-SET &VPRINT='@';
-GOTO INIT_STR

-BUILD_STR
-IF &VFND_NOPRT EQ 'ON' 
-GOTO CHK_NOPRINT ;
-SET &VFND_NOPRT='ON' ;
-SET &VTOKLEN=
- ARGLEN (50, &VSTRVAL1, 'I2');
-SET &VTEMP=
- SUBSTR (50,&VSTRVAL1,1,&VTOKLEN,&VTOKLEN,'A&VTOKLEN.EVAL');
-ADD_VTEMP
-SET &VSTRVAL2=
- &VSTRVAL2 || &VTEMP ;
-GOTO NEXT_TOK

-CHK_NOPRINT
-IF &VSTRVAL1 EQ 'NOPRINT' 
-GOTO NOPRINT_VAR ;
-SET &VPRINT='Y';
-SET &VNPRT_YES=
- &VNPRT_YES+1;
-GOTO WRITE_STR
-NOPRINT_VAR
-SET &VPRINT='N';
-SET &VNPRT_NO=
- &VNPRT_NO+1;
-GOTO WRITE_STR

-WRITE_STR
-SET &VSTRVAL3=
- GETTOK (&VSTRVAL2,&VSTRVAL2.LENGTH,1,' ',53,'A53') | &VPRINT;
-WRITE DRILLBYS &VSTRVAL3
-IF &VNPRT_YES EQ 3 
-GOTO DONE ;
-SET &VPARSEBY='OFF';
-SET &VFND_NOPRT='OFF';
-SET &VPRINT='@';
-IF &VEOL_PRT EQ 'ON'
- GOTO CONT_VEOL ;
-GOTO NEXT_TOK

-ENDIT
