
-* 5/29/2015 - DEB - S-08333 CREATED FOR TSMRDFL
-INCLUDE SETECHO

-INCLUDE RDFL_DATES
-RUN

-IF '&&NOAIRREC.EVAL' EQ 'Y' AND '&&NOHTLREC.EVAL' EQ 'Y' AND '&&NOCARREC.EVAL' EQ 'Y' AND
-   '&&NOLIMREC.EVAL' EQ 'Y' THEN GOTO NORECORDS;

-SET &&HEADING = 'MONTHLY SUMMARY BY SPEND';
-* CURRENT DATES
-SET &FMM=EDIT(&&FROMDT,'$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'9999');
-SET &TOM=EDIT(&&TODT,'$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'9999');
-SET &&SP = '|';
-RUN

-SET &&RPTSUF = 'TSMRDFL';

 -INCLUDE FDEFRPTS
-RUN

JOIN ROLL WITH CATEGORY IN RDFL_TSM TO ROLLUP_CODE IN ROLLUP AS J1
-RUN
 

DEFINE FILE RDFL_TSM
KEY/A2 = IF RDFL_TSM.CAT_ORDER EQ 1 THEN 'A' ELSE
         IF RDFL_TSM.CAT_ORDER EQ 2 THEN 'B' ELSE
         IF RDFL_TSM.CAT_ORDER EQ 3 THEN 'C' ELSE 
         IF RDFL_TSM.CAT_ORDER EQ 4 THEN 'D' ELSE 
         IF RDFL_TSM.CAT_ORDER EQ 5 THEN 'E' ELSE 
         IF RDFL_TSM.CAT_ORDER EQ 6 THEN 'F' ELSE  ' ';
KEY1/A1 = IF RDFL_TSM.CAT_ORDER EQ 1 OR 3 OR 5 OR 7  AND RDFL_TSM.ROW_ORDER EQ '1' OR '2' THEN 'A' ELSE 
          IF RDFL_TSM.ROW_ORDER EQ '3' THEN 'C' ELSE 'B';  
          
-SET &&FMT = IF KEY1 EQ 'A' THEN 'MS' ELSE IF KEY2 EQ 'B' THEN 'S' ELSE '%';

-* JAN FORMAT CONVERSION
VOLJANA/D12MS = VOL_JAN;
VOL_JANA/A16 = FTOA(VOLJANA, '(D12MS)', 'A16');
VOL_JANA1/A12 = TRIM('L', VOL_JANA, 16, ' ', 4, 'A12'); 
VOLJANB/D12S = VOL_JAN;
VOL_JANB/A16 = FTOA(VOLJANB, '(D12S)', 'A16');
VOL_JANB1/A12 = TRIM('L', VOL_JANB, 16, ' ', 4, 'A12');
VOLJANC/D12% = VOL_JAN;
VOL_JANC/A16 = FTOA(VOLJANC, '(D12%)', 'A16');
VOL_JANC1/A12 = TRIM('L', VOL_JANC, 16, ' ', 4, 'A12');


VOL_JANXX/A12 = IF KEY1 EQ 'A' THEN VOL_JANA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_JANC1 ELSE VOL_JANB1;     
     
-* FEB FORMAT CONVERSION
VOLFEBA/D12MS = VOL_FEB;
VOL_FEBA/A16 = FTOA(VOLFEBA, '(D12MS)', 'A16');
VOL_FEBA1/A12 = TRIM('L', VOL_FEBA, 16, ' ', 4, 'A12'); 
VOLFEBB/D12S = VOL_FEB;
VOL_FEBB/A16 = FTOA(VOLFEBB, '(D12S)', 'A16');
VOL_FEBB1/A12 = TRIM('L', VOL_FEBB, 16, ' ', 4, 'A12');
VOLFEBC/D12% = VOL_FEB;
VOL_FEBC/A16 = FTOA(VOLFEBC, '(D12%)', 'A16');
VOL_FEBC1/A12 = TRIM('L', VOL_FEBC, 16, ' ', 4, 'A12');


VOL_FEBXX/A12 = IF KEY1 EQ 'A' THEN VOL_FEBA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_FEBC1 ELSE VOL_FEBB1;
                
-* MAR FORMAT CONVERSION
VOLMARA/D12MS = VOL_MAR;
VOL_MARA/A16 = FTOA(VOLMARA, '(D12MS)', 'A16');
VOL_MARA1/A12 = TRIM('L', VOL_MARA, 16, ' ', 4, 'A12'); 
VOLMARB/D12S = VOL_MAR;
VOL_MARB/A16 = FTOA(VOLMARB, '(D12S)', 'A16');
VOL_MARB1/A12 = TRIM('L', VOL_MARB, 16, ' ', 4, 'A12');
VOLMARC/D12% = VOL_MAR;
VOL_MARC/A16 = FTOA(VOLMARC, '(D12%)', 'A16');
VOL_MARC1/A12 = TRIM('L', VOL_MARC, 16, ' ', 4, 'A12');


VOL_MARXX/A12 = IF KEY1 EQ 'A' THEN VOL_MARA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_MARC1 ELSE VOL_MARB1;
                
-* APR FORMAT CONVERSION
VOLAPRA/D12MS = VOL_APR;
VOL_APRA/A16 = FTOA(VOLAPRA, '(D12MS)', 'A16');
VOL_APRA1/A12 = TRIM('L', VOL_APRA, 16, ' ', 4, 'A12'); 
VOLAPRB/D12S = VOL_APR;
VOL_APRB/A16 = FTOA(VOLAPRB, '(D12S)', 'A16');
VOL_APRB1/A12 = TRIM('L', VOL_APRB, 16, ' ', 4, 'A12');
VOLAPRC/D12% = VOL_APR;
VOL_APRC/A16 = FTOA(VOLAPRC, '(D12%)', 'A16');
VOL_APRC1/A12 = TRIM('L', VOL_APRC, 16, ' ', 4, 'A12');


VOL_APRXX/A12 = IF KEY1 EQ 'A' THEN VOL_APRA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_APRC1 ELSE VOL_APRB1;
                
-* MAY FORMAT CONVERSION
VOLMAYA/D12MS = VOL_MAY;
VOL_MAYA/A16 = FTOA(VOLMAYA, '(D12MS)', 'A16');
VOL_MAYA1/A12 = TRIM('L', VOL_MAYA, 16, ' ', 4, 'A12'); 
VOLMAYB/D12S = VOL_MAY;
VOL_MAYB/A16 = FTOA(VOLMAYB, '(D12S)', 'A16');
VOL_MAYB1/A12 = TRIM('L', VOL_MAYB, 16, ' ', 4, 'A12');
VOLMAYC/D12% = VOL_MAY;
VOL_MAYC/A16 = FTOA(VOLMAYC, '(D12%)', 'A16');
VOL_MAYC1/A12 = TRIM('L', VOL_MAYC, 16, ' ', 4, 'A12');


VOL_MAYXX/A12 = IF KEY1 EQ 'A' THEN VOL_MAYA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_MAYC1 ELSE VOL_MAYB1;

-* JUN FORMAT CONVERSION
VOLJUNA/D12MS = VOL_JUN;
VOL_JUNA/A16 = FTOA(VOLJUNA, '(D12MS)', 'A16');
VOL_JUNA1/A12 = TRIM('L', VOL_JUNA, 16, ' ', 4, 'A12'); 
VOLJUNB/D12S = VOL_JUN;
VOL_JUNB/A16 = FTOA(VOLJUNB, '(D12S)', 'A16');
VOL_JUNB1/A12 = TRIM('L', VOL_JUNB, 16, ' ', 4, 'A12');
VOLJUNC/D12% = VOL_JUN;
VOL_JUNC/A16 = FTOA(VOLJUNC, '(D12%)', 'A16');
VOL_JUNC1/A12 = TRIM('L', VOL_JUNC, 16, ' ', 4, 'A12');


VOL_JUNXX/A12 = IF KEY1 EQ 'A' THEN VOL_JUNA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_JUNC1 ELSE VOL_JUNB1;
                
                
-* JUL FORMAT CONVERSION
VOLJULA/D12MS = VOL_JUL;
VOL_JULA/A16 = FTOA(VOLJULA, '(D12MS)', 'A16');
VOL_JULA1/A12 = TRIM('L', VOL_JULA, 16, ' ', 4, 'A12'); 
VOLJULB/D12S = VOL_JUL;
VOL_JULB/A16 = FTOA(VOLJULB, '(D12S)', 'A16');
VOL_JULB1/A12 = TRIM('L', VOL_JULB, 16, ' ', 4, 'A12');
VOLJULC/D12% = VOL_JUL;
VOL_JULC/A16 = FTOA(VOLJULC, '(D12%)', 'A16');
VOL_JULC1/A12 = TRIM('L', VOL_JULC, 16, ' ', 4, 'A12');


VOL_JULXX/A12 = IF KEY1 EQ 'A' THEN VOL_JULA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_JULC1 ELSE VOL_JULB1;
                
-* AUG FORMAT CONVERSION
VOLAUGA/D12MS = VOL_AUG;
VOL_AUGA/A16 = FTOA(VOLAUGA, '(D12MS)', 'A16');
VOL_AUGA1/A12 = TRIM('L', VOL_AUGA, 16, ' ', 4, 'A12'); 
VOLAUGB/D12S = VOL_AUG;
VOL_AUGB/A16 = FTOA(VOLAUGB, '(D12S)', 'A16');
VOL_AUGB1/A12 = TRIM('L', VOL_AUGB, 16, ' ', 4, 'A12');
VOLAUGC/D12% = VOL_AUG;
VOL_AUGC/A16 = FTOA(VOLAUGC, '(D12%)', 'A16');
VOL_AUGC1/A12 = TRIM('L', VOL_AUGC, 16, ' ', 4, 'A12');


VOL_AUGXX/A12 = IF KEY1 EQ 'A' THEN VOL_AUGA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_AUGC1 ELSE VOL_AUGB1;
                
-* SEP FORMAT CONVERSION
VOLSEPA/D12MS = VOL_SEP;
VOL_SEPA/A16 = FTOA(VOLSEPA, '(D12MS)', 'A16');
VOL_SEPA1/A12 = TRIM('L', VOL_SEPA, 16, ' ', 4, 'A12'); 
VOLSEPB/D12S= VOL_SEP;
VOL_SEPB/A16 = FTOA(VOLSEPB, '(D12S)', 'A16');
VOL_SEPB1/A12 = TRIM('L', VOL_SEPB, 16, ' ', 4, 'A12');
VOLSEPC/D12% = VOL_SEP;
VOL_SEPC/A16 = FTOA(VOLSEPC, '(D12%)', 'A16');
VOL_SEPC1/A12 = TRIM('L', VOL_SEPC, 16, ' ', 4, 'A12');


VOL_SEPXX/A12 = IF KEY1 EQ 'A' THEN VOL_SEPA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_SEPC1 ELSE VOL_SEPB1;
                
-* OCT FORMAT CONVERSION
VOLOCTA/D12MS = VOL_OCT;
VOL_OCTA/A16 = FTOA(VOLOCTA, '(D12MS)', 'A16');
VOL_OCTA1/A12 = TRIM('L', VOL_OCTA, 16, ' ', 4, 'A12'); 
VOLOCTB/D12S = VOL_OCT;
VOL_OCTB/A16 = FTOA(VOLOCTB, '(D12S)', 'A16');
VOL_OCTB1/A12 = TRIM('L', VOL_OCTB, 16, ' ', 4, 'A12');
VOLOCTC/D12% = VOL_OCT;
VOL_OCTC/A16 = FTOA(VOLOCTC, '(D12%)', 'A16');
VOL_OCTC1/A12 = TRIM('L', VOL_OCTC, 16, ' ', 4, 'A12');


VOL_OCTXX/A12 = IF KEY1 EQ 'A' THEN VOL_OCTA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_OCTC1 ELSE VOL_OCTB1;
                
-* NOV FORMAT CONVERSION
VOLNOVA/D12MS = VOL_NOV;
VOL_NOVA/A16 = FTOA(VOLNOVA, '(D12MS)', 'A16');
VOL_NOVA1/A12 = TRIM('L', VOL_NOVA, 16, ' ', 4, 'A12'); 
VOLNOVB/D12S = VOL_NOV;
VOL_NOVB/A16 = FTOA(VOLNOVB, '(D12S)', 'A16');
VOL_NOVB1/A12 = TRIM('L', VOL_NOVB, 16, ' ', 4, 'A12');
VOLNOVC/D12% = VOL_NOV;
VOL_NOVC/A16 = FTOA(VOLNOVC, '(D12%)', 'A16');
VOL_NOVC1/A12 = TRIM('L', VOL_NOVC, 16, ' ', 4, 'A12');


VOL_NOVXX/A12 = IF KEY1 EQ 'A' THEN VOL_NOVA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_NOVC1 ELSE VOL_NOVB1;
                
-* DEC FORMAT CONVERSION
VOLDECA/D12MS = VOL_DEC;
VOL_DECA/A16 = FTOA(VOLDECA, '(D12MS)', 'A16');
VOL_DECA1/A12 = TRIM('L', VOL_DECA, 16, ' ', 4, 'A12'); 
VOLDECB/D12S = VOL_DEC;
VOL_DECB/A16 = FTOA(VOLDECB, '(D12S)', 'A16');
VOL_DECB1/A12 = TRIM('L', VOL_DECB, 16, ' ', 4, 'A12');
VOLDECC/D12% = VOL_DEC;
VOL_DECC/A16 = FTOA(VOLDECC, '(D12%)', 'A16');
VOL_DECC1/A12 = TRIM('L', VOL_DECC, 16, ' ', 4, 'A12');


VOL_DECXX/A12 = IF KEY1 EQ 'A' THEN VOL_DECA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_DECC1 ELSE VOL_DECB1;

-* YTD FORMAT CONVERSION
VOLYTDA/D12MS = VOL_YTD;
VOL_YTDA/A16 = FTOA(VOLYTDA, '(D12MS)', 'A16');
VOL_YTDA1/A12 = TRIM('L', VOL_YTDA, 16, ' ', 4, 'A12'); 
VOLYTDB/D12S = VOL_YTD;
VOL_YTDB/A16 = FTOA(VOLYTDB, '(D12S)', 'A16');
VOL_YTDB1/A12 = TRIM('L', VOL_YTDB, 16, ' ', 4, 'A12');
VOLYTDC/D12% = VOL_YTD;
VOL_YTDC/A16 = FTOA(VOLYTDC, '(D12%)', 'A16');
VOL_YTDC1/A12 = TRIM('L', VOL_YTDC, 16, ' ', 4, 'A12');


VOL_YTDXX/A12 = IF KEY1 EQ 'A' THEN VOL_YTDA1 ELSE
                IF KEY1 EQ 'C' THEN VOL_YTDC1 ELSE VOL_YTDB1;               
                
KEY3/A1 = IF ROW_ORDER EQ '3' AND YEAR EQ '% Change' THEN 'Y' ELSE 'N';
KEY4/A1 = IF ROW_ORDER EQ '1' OR '3' THEN 'Y' ELSE 'N';
NOWTOD/A8 WITH CAT_ORDER = HHMMSS (NOWTOD);
ROLL/A8='&&ROLLUP.EVAL';
LVL/A60='&&LVL_DSC.EVAL';
RPHONE/A15=EDIT(ROLL_PHONE,'9-999-999-9999');
RN/A60=TRIM('B', '&&RPT_TTL1.EVAL', 60, ' ', 1, 'A60');
TDATE1/A8MDYY='&MDYY';
TDATE2/A10=EDIT(TDATE1,'99/99/9999');
TIME1/A8=HHMMSS('A8');
TIME2/A8=EDIT(TIME1,'99$:99$:99');
RD/A10 = 'Run Date:';
RT/A10 = 'Run Time:';  
AIR_ROW/A1 = IF (CAT_ORDER EQ 1) AND (ROW_ORDER LT 30) THEN 'Y' ELSE 'N';
HTL_ROW/A1 = IF (CAT_ORDER EQ 2) AND (ROW_ORDER LT 6) THEN 'Y' ELSE 'N';
CAR_ROW/A1 = IF (CAT_ORDER EQ 3) AND (ROW_ORDER LT 6) THEN 'Y' ELSE 'N';
LIM_ROW/A1 = IF (CAT_ORDER EQ 4) AND (ROW_ORDER LT 5) THEN 'Y' ELSE 'N';
TTL_ROW/A1 = IF (CAT_ORDER EQ 5) AND (ROW_ORDER EQ 1) THEN 'Y' ELSE 'N';
P1/A25=EDIT(&&FROMDT.EVAL,'$$$$$99999/') | EDIT(&&FROMDT.EVAL,'9999') | ' - ' | EDIT(&&TODT.EVAL,'$$$$$99999/') | EDIT(&&TODT.EVAL,'9999');
RLABEL/A25 = IF ROW_ORDER EQ '1' THEN ROW_LABEL ELSE ' ';
NEW_CAT/A8 = IF CAT_ORDER EQ 1 OR 2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 THEN ' ' ELSE CATEGORY;
NYEAR1/A2 = EDIT(YEAR, '$$99');
NYEAR2/A2 = EDIT('&&TODT.EVAL','99');
NWYEAR/A4 = NYEAR2 || NYEAR1;
NEW_YEAR/A8 = IF YEAR CONTAINS '% Change' THEN YEAR ELSE NWYEAR;
END

-SET &&REPT = TRUNCATE(&&RPT_TTL1);
-SET &&REPLD = TRUNCATE(&&LVL_DSC);



TABLE FILE RDFL_TSM
PRINT KEY3 NOPRINT KEY4 NOPRINT NEW_YEAR AS ' '
    &&SUM1.EVAL
    &&SUM2.EVAL
    &&SUM3.EVAL
    &&SUM4.EVAL
    &&SUM5.EVAL
    &&SUM6.EVAL
    &&SUM7.EVAL
    &&SUM8.EVAL
    &&SUM9.EVAL
    &&SUM10.EVAL
    &&SUM11.EVAL
    &&SUM12.EVAL
    &&SUM13.EVAL
BY RDFL_TSM.CAT_ORDER NOPRINT
BY RDFL_TSM.ROW_ORDER NOPRINT
BY KEY NOPRINT
BY RLABEL AS ' '
 
ON RDFL_TSM.CAT_ORDER SUBHEAD
"<ST.RDFL_TSM.NEW_CAT"
-*"<ST.RDFL_TSM.CATEGORY"

ON TABLE NOTOTAL
ON TABLE SET PAGE-NUM OFF


&&OUTLINE1
&&OUTLINE2
HEADING 
"<ROLL_NAME"
"<ROLL_CONTACT"
"<RPHONE" 
"&&DTDESC"
"&FMM/&FMD/&FMY - &TOM/&TOD/&TOY"
" "
"<RN" 
"<LVL"
" "
FOOTING BOTTOM
-INCLUDE CRIGHT_FOOTER
"</2"
"<15 &M1.EVAL <45 &M2.EVAL <75 &M3.EVAL"

ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT
ON TABLE SET STYLE *


TYPE=HEADING, SIZE=8, STYLE=BOLD, FONT='ARIAL', COLOR=RGB(31 114 164), BACKCOLOR=NONE, $
TYPE=HEADING, HEADALIGN=BODY, $
TYPE=HEADING, LINE=1, COLSPAN=2, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=2, COLSPAN=2, JUSTIFY=LEFT, $

TYPE=HEADING, LINE=5, COLSPAN=2, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=7, COLSPAN=15, SIZE=10, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=8, COLSPAN=16, SIZE=10,JUSTIFY=CENTER, $

TYPE=DATA,
 -*    COLUMN=N4,
     COLUMN=N5,
     
     SIZE=10, 
     STYLE=BOLD,
$     
TYPE=DATA,
-*     COLUMN=N6,
     COLUMN=N7,
     BORDER-RIGHT=LIGHT,
     BORDER-RIGHT-COLOR='SILVER',
     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$   
TYPE=DATA,
-*     COLUMN=N6,
     COLUMN=N7,
     BORDER-RIGHT=LIGHT,
     BORDER-RIGHT-COLOR='SILVER',     
     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 3 ,
$

TYPE=DATA,
-*     COLUMN=N7,
     COLUMN=N8,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
     WHEN=KEY4 EQ 'Y' ,
$
TYPE=DATA,
-*     COLUMN=N7,
     COLUMN=N8,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$

TYPE=DATA,
-*     COLUMN=N8,
     COLUMN=N9,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
     WHEN=KEY4 EQ 'Y' ,
$
TYPE=DATA,
-*     COLUMN=N8,
     COLUMN=N9,
     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
ENDSTYLE
END
-RUN

TYPE=DATA,
     COLUMN=N9,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N9,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
ENDSTYLE
END
-RUN

-*-GOTO SKIPDEB;
TYPE=DATA,
     COLUMN=N10,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N10,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N11,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N11,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N12,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N12,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N13,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N13,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N14,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$

TYPE=DATA,
     COLUMN=N14,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N15,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N15,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N16,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N16,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N17,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N17,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N18,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N18,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$
TYPE=DATA,
     COLUMN=N19,

     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9, 
     BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
$
TYPE=DATA,
     COLUMN=N19,

     STYLE=BOLD,
     WHEN=ROW_ORDER EQ 1 ,
$

TYPE=TITLE,

     SIZE=10,

     STYLE=BOLD,$
     COLSPAN=3, 
$

-SKIPDEB   
TYPE=TABFOOTING, FONT=ARIAL, COLOR=GRAY,SIZE=7,$
     
TYPE=FOOTING, FONT=ARIAL, COLOR=GRAY,SIZE=7,$

TYPE=SUBHEAD,
     SIZE=9,
     STYLE=BOLD,
$



ENDSTYLE
END
-RUN
-GOTO XXIT;

 
-NORECORDS

-SET &FMM=EDIT(&&FROMDT,'$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'9999');
-SET &TOM=EDIT(&&TODT,'$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'9999');
-SET &&SP = '|';
-SET &&SP1A = IF &&ROLLNME EQ ' ' THEN ' ' ELSE &&SP;
-SET &&SP1 = IF &&ROLLCS EQ ' ' THEN ' ' ELSE &&SP1A;
-SET &&SP3 = IF &&ROLLCNCT EQ ' ' THEN ' ' ELSE &&SP;
-SET &&SP4 = IF &&ROLLPHN EQ ' ' THEN ' ' ELSE &&SP;
-SET &&RCNCT = &&ROLLCNCT.LENGTH;
-SET &&CSL = &&ROLLCS.LENGTH;
-SET &&CSLPA = IF &&RCNCT.EVAL GE 15 OR &&CSL.EVAL GE 10 THEN 68 ELSE 75;
-SET &&CSLP = IF '&&ROLLUP.EVAL' EQ 'BOOZ-R' THEN 88 ELSE &&CSLPA;
-RUN

-SET &&RPTSUF = 'MSG';
-INCLUDE FDEFRPTS
-RUN
JOIN SET_KEY IN BRPTINST TO SET_KEY IN BRPT_SET AS J1
DEFINE FILE BRPTINST
EMPTY/A35 = 'NO RECORDS FOUND FOR THIS SELECTION';
NOWTOD/A8 WITH INST_KEY = HHMMSS (NOWTOD);
END

TABLE FILE BRPTINST
"</6"
"&&DTDESC &FMM/&FMD/&FMY - &TOM/&TOD/&TOY  <&&CSLP &&ROLLNME <+0> &&SP1 <+0> &&ROLLCS <+0> &&SP3 <+0> &&ROLLCNCT <+0> &&SP4 <+0> &&ROLLPHN"
-* <75 &&ROLLNME <+0> &&SP1 <+0> &&ROLLCS <+0> &&SP <+0> &&ROLLCNCT <+0> &&SP <+0> &&ROLLPHN"
"Page:<TABPAGENO"
" "
"<35 &&RPT_TTL1"
"<35 &&RPT_TTL2"
PRINT EMPTY AS 'REPORT,MESSAGE'
BY ROLLUP_CODE AS 'ROLLUP,CODE'
BY RPT_NAME AS 'REPORT,NAME'
BY SELECT_LEV AS 'BREAK,LEVEL'
IF INST_KEY EQ &&IKEY
IF RECORDLIMIT EQ 1
-INCLUDE FOOTERDT
ON TABLE SUBFOOT
-INCLUDE SBFOOT
ON TABLE SET PAGE-NUM OFF
ON TABLE SET STYLE *
-INCLUDE &&DTSTY
ENDSTYLE
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN
-GOTO XXIT
 
 


-XXIT;

