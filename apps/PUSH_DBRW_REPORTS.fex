-INCLUDE SETECHO
-TYPE STARTING PUSH_DBRW_REPORTS
 
-******************************************************************************
-* Program name:  PUSH_DBRW_REPORTS.fex
-* functions: The program runs weekly scheduled reports from Push Technology
-*            in Dashboard Reporting and mail the reports to the users.
-******************************************************************************
SET BASEURL='&&SRVR.EVAL'
SET EMPTYREPORT=OFF
SET BYDISPLAY=ON
SET LINES=99999
 
-INCLUDE CLASSPATH
-SET &&WPATH1=TEMPPATH(50,'A50');
-SET &&JPATH=STRREP(50,'&&WPATH1.EVAL',1,'\',2,'\\',150,'A150');
 
-SET &&PushTeck = 'Y';
-SET &&RunYTD = 'Y';
-SET &RUNF = 'Weekly';
 
-DEFAULTS &LEVEL = ' ', &DEPT = ' ', &BREAKBY='' ;
-DEFAULTS &FROMDT = ' ', &TODT = ' ';
-DEFAULTS &DODTYPE = ' ', &DOMINTL = ' ', &FMT=' ', &PCNTSHIFT=' ';
 
-* Indicator to tell if reports are generated
-SET &&DBRW='N';
 
-SET &&WEB_PATH=TEMPPATH(50,'A50');
-*SET EDAPATH=+&&WEB_PATH;
APP MAP WEBTEMP &&WEB_PATH
APP APPENDPATH WEBTEMP

-******************************************************************************
-* &BASE is used to determine the last Sunday or the Sunday before last
-* Calculate &FROMDT and &TODT and construct &WHERE2
-* 0: Current week; 1: a week before last; 2: 2 weeks before last
-******************************************************************************
-DEFAULT &THRU=0;
-*-SET &THRU = '20090501';
-SET &TDATE=IF &THRU EQ 0 THEN &YYMD ELSE &THRU;
-SET &BASE = 7 * 0 ;
-SET &DAY = DOWK(&TDATE,'A3');
-SET &LastSunday = IF &DAY EQ 'MON' THEN AYMD(&TDATE,-(&BASE+1), 'I8YYMD')
-             ELSE IF &DAY EQ 'TUE' THEN AYMD(&TDATE,-(&BASE+2), 'I8YYMD')
-             ELSE IF &DAY EQ 'WED' THEN AYMD(&TDATE,-(&BASE+3), 'I8YYMD')
-             ELSE IF &DAY EQ 'THU' THEN AYMD(&TDATE,-(&BASE+4), 'I8YYMD')
-             ELSE IF &DAY EQ 'FRI' THEN AYMD(&TDATE,-(&BASE+5), 'I8YYMD')
-             ELSE IF &DAY EQ 'SAT' THEN AYMD(&TDATE,-(&BASE+6), 'I8YYMD')
-             ELSE IF &DAY EQ 'SUN' THEN AYMD(&TDATE,-(&BASE+7), 'I8YYMD')
-             ELSE 0;
-SET &PastSunday = &LastSunday;
-SET &LastSunday = EDIT(&LastSunday,'$$$$99') | '/' | EDIT(&LastSunday,'$$$$$$99') | '/' | EDIT(&LastSunday,'9999');
-SET &CurrMY = EDIT(&PastSunday,'$$$$99') | '/' | EDIT(&PastSunday,'9999');
-*&FROMDT is the &CurrMY, and &TODT is the &CurrMY as well.
-SET &FROMDT = &CurrMY;
-SET &TODT = &FROMDT;
-SET &WHERE2 = 'WHERE INVOICE_MY IS-FROM ' | '''&FROMDT.EVAL''' | ' TO ' | '''&TODT.EVAL''';
 
-*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-* Determine the rollup codes to run
-*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
JOIN ROLLUP_CODE IN PTREPORT TO ROLLUP_CODE IN ROLLUP
 
DEFINE FILE PTREPORT
  LASTSUNDAY/MDYY = '&LastSunday.EVAL';
END
 
TABLE FILE PTREPORT
PRINT SECURITY LASTSUNDAY
 BY ROLLUP_CODE
 BY COMP
 BY ROLL_FY
WHERE LOAD_GRP EQ 'V' OR 'W' OR 'L' OR 'G'
WHERE WEEKLY EQ 1
-*WHERE END_DATE EQ '&LastSunday.EVAL'
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_WEEKLY_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE LASTSUNDAY AND LASTSUNDAY GT LAST_WEEKLY_PROCESS_DATE
ON TABLE HOLD AS ALLROLLS FORMAT FOCUS INDEX ROLLUP_CODE
END
-RUN
-IF &LINES EQ 0 THEN GOTO ENDDBRWKPUSH;
 
-SET &&DBRW='Y';
 
JOIN CLEAR *
JOIN RECEIVERID IN PTBATCH TO RECEIVERID IN PTUSER AS J2
-RUN
 
DEFINE FILE PTBATCH
EM/A80=SUBSTR(100, EMAIL, 1, 80, 80, EM);
EADDRS/A500=IF SELECTIONID EQ LAST SELECTIONID THEN SUBSTR(400, EADDRS, 1, 400, 400, 'A400') || ';' || EM ELSE EM;
EADDRS1/A500=EMAIL;
END
TABLE FILE PTBATCH
BY SELECTIONID
BY EADDRS1 AS EADDRS
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDSEML1 FORMAT FOCUS INDEX SELECTIONID
END
-RUN
TABLE FILE PTBATCH
SUM EADDRS
BY SELECTIONID
ON TABLE HOLD AS HLDSEML2 FORMAT FOCUS INDEX SELECTIONID
END
-RUN
 
FILEDEF RCPDBRW1 DISK RCPDBRW1.FTM
-RUN
 
JOIN CLEAR *
JOIN INNER PTREPORT.ROLLUP_CODE IN PTREPORT TO ROLLUP_CODE IN ALLROLLS AS J1
JOIN INNER PTREPORT.SELECTIONID IN PTREPORT TO SELECTIONID IN HLDSEML2 AS J2
JOIN INNER PTREPORT.PTREPORT.MANAGERID IN PTREPORT TO UNIQUE
  USRTBL.USRTBL.USER_NAME IN USRTBL TAG J0 AS J0
END
-RUN
 
DEFINE FILE PTREPORT
EXFEX/A10='DBRPT_PUSH';
STYPE/A1='D';
RUNQ/A1 = 'N';
RUNY/A1 = 'N';
FromQMYY/MYY = ;
IsFirstQ/A1='N' ;
IsFirstM/A1 ='W' ;
ADS/A3=EDIT(EDIT(ADVSHIFT),'$$$999');
ONS/A3=EDIT(EDIT(ONLINESHIFT),'$$$999');
END
TABLE FILE PTREPORT
PRINT RPTE01
      RPTS01
   RPTO01
   RPTA01
   RPTA02
   RPTA03
   RPTC01
   RPTH01
   HIER_LEVEL
   ONLINE
   DOMINTL
   ADS
   ONS
   BREAKLVL
   FMT
   RPTNAME
   MANAGERID
   STYPE
   SECURITY
   EMAIL
   EADDRS
BY EXFEX
BY ROLLUP_CODE
BY COMP
BY ROLL_FY
BY RUNQ
BY RUNY
BY FromQMYY
BY IsFirstQ
BY IsFirstM
BY SELECTIONID
WHERE SECURITY EQ 'H'
WHERE ALLROLLS.ROLLUP_CODE GT ''
WHERE WEEKLY EQ 1

-*added on 09/20/2012 to retrieve individual ones only, not kick off 
-*all push reports in that rollup code
WHERE LASTSUNDAY GT LAST_WEEKLY_PROCESS_DATE

ON TABLE HOLD AS RCPDBRW1
END
-RUN
 
 
FILEDEF RCPDBRW1 DISK RCPDBRW1.FTM (APPEND
-RUN
 
JOIN CLEAR *
JOIN INNER PTREPORT.ROLLUP_CODE IN PTREPORT TO ROLLUP_CODE IN ALLROLLS AS J1
JOIN INNER PTREPORT.SELECTIONID IN PTREPORT TO ALL SELECTIONID IN HLDSEML1 AS J2
JOIN INNER PTREPORT.PTREPORT.MANAGERID IN PTREPORT TO UNIQUE
  USRTBL.USRTBL.USER_NAME IN USRTBL TAG J0 AS J0
END
END
-RUN
 
DEFINE FILE PTREPORT
EXFEX/A10='DBRPT_PUSH';
STYPE/A1='D';
RUNQ/A1 = 'N';
RUNY/A1 = 'N';
FromQMYY/MYY = ;
IsFirstQ/A1='N' ;
IsFirstM/A1 ='W' ;
ADS/A3=EDIT(EDIT(ADVSHIFT),'$$$999');
ONS/A3=EDIT(EDIT(ONLINESHIFT),'$$$999');
END
TABLE FILE PTREPORT
PRINT RPTE01
      RPTS01
   RPTO01
   RPTA01
   RPTA02
   RPTA03
   RPTC01
   RPTH01
   HIER_LEVEL
   ONLINE
   DOMINTL
   ADS
   ONS
   BREAKLVL
   FMT
   RPTNAME
   MANAGERID
   STYPE
   SECURITY
   EMAIL
   EADDRS
BY EXFEX
BY ROLLUP_CODE
BY COMP
BY ROLL_FY
BY RUNQ
BY RUNY
BY FromQMYY
BY IsFirstQ
BY IsFirstM
BY SELECTIONID
WHERE SECURITY EQ 'L';
WHERE ALLROLLS.ROLLUP_CODE GT ''
WHERE WEEKLY EQ 1

-*added on 09/20/2012 to retrieve individual ones only, not kick off 
-*all push reports in that rollup code
WHERE LASTSUNDAY GT LAST_WEEKLY_PROCESS_DATE

ON TABLE HOLD AS RCPDBRW1
END
-RUN
 
-*HOLD ALLIDS TO UPDATE LAST_WEEKLY_PROCESS_DATE
JOIN CLEAR *
JOIN ROLLUP IN RCPDBRW1 TO ROLLUP IN ALLROLLS AS JR
DEFINE FILE RCPDBRW1
  LAST_WEEKLY_PROCESS_DATE/YYMD = LASTSUNDAY;
END
TABLE FILE RCPDBRW1
PRINT LAST_WEEKLY_PROCESS_DATE
BY SELECTIONID
ON TABLE HOLD AS WALLIDS
END
-RUN
 
-SET &TDAY=EDIT(&MDYY,'99/99/9999');
 
TABLE FILE RCPDBRW1
" "
"eTTek Review Dashboard Reports"
"Weekly Scheduled Reports Being Executed"
"for &TDAY"
PRINT
      RPTNAME AS 'Report Name'
      FMT AS 'Report,Format'
      RPTE01 AS 'Executive,Overview
      RPTS01 AS 'Summary,by,Hierarchy'
      RPTO01 AS 'Online,vs,Traditional'
      RPTA01 AS 'Advance,Purchase'
      RPTA02 AS 'Performance'
      RPTA03 AS 'City,Pair'
      RPTC01 AS 'Car'
      RPTH01 AS 'Hotel'
      EADDRS AS 'Push To EMail Addresses'
      EMAIL
BY MANAGERID AS 'Schedule,Owner'
BY ROLLUP_CODE AS 'Rollup'
BY EADDRS NOPRINT
BY SELECTIONID NOPRINT UNDER-LINE
ON SELECTIONID SUBHEAD
"Schedule created for:"
ON TABLE SET PAGE-NUM OFF
ON TABLE NOTOTAL
ON TABLE SET EMPTYREPORT ON
ON TABLE HOLD AS PRPT4 FORMAT HTMTABLE
ON TABLE SET HTMLCSS ON
ON TABLE SET STYLE *
     UNITS=IN,
     PAGESIZE='Letter',
     LEFTMARGIN=0.250000,
     RIGHTMARGIN=0.250000,
     TOPMARGIN=0.250000,
     BOTTOMMARGIN=0.250000,
     SQUEEZE=ON,
     ORIENTATION=PORTRAIT,
$
TYPE=REPORT,
     FONT='ARIAL',
     SIZE=10,
     COLOR='BLACK',
     BACKCOLOR='NONE',
     STYLE=NORMAL,
$
TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     BACKCOLOR=( RGB(242 242 242) 'WHITE' ),
$
TYPE=TITLE,
     COLUMN=N9,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     COLUMN=N7,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9,
     COLOR='WHITE',
     BACKCOLOR=RGB(154 175 212),
     STYLE=BOLD,
$
TYPE=HEADING,
     SIZE=12,
     COLOR=RGB(36 43 114),
     STYLE=BOLD,
     JUSTIFY=CENTER,
$
TYPE=FOOTING,
     STYLE=BOLD,
$
TYPE=SUBHEAD,
     SIZE=9,
     STYLE=BOLD,
$
TYPE=REPORT,
     IMAGE=/image/TNTLogo.gif,
     POSITION=(0.027778 0.027778),
     SIZE=(1.902778 0.652778),
$
TYPE=REPORT,
     COLUMN=N13,
     WRAP=8.000000,
$
ENDSTYLE
END
-RUN
 
MODIFY FILE PTREPORT
FIXFORM FROM WALLIDS
MATCH SELECTIONID
 ON MATCH UPDATE LAST_WEEKLY_PROCESS_DATE
DATA ON WALLIDS
END
-RUN
-ENDDBRWKPUSH
