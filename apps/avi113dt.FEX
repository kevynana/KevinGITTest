-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-INCLUDE SETECHO
-* File AVIW11DT.FEX
-*********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERDT
-*8/18/00      IBISTL-KR            INCLUDE WHERE STATEMENTS WHEN
-*                                  DRILLED_RUN EQ 'Y'.
-*03/30/01     DEB BUCKNER/WTORRES  VIEW AMENDED TO NOT INCLUDE CARRIERS
-*                                  W/NO NAME
-*04/09/01     SCORDS/JKALHORN      COMMENTED OUT THE CARRIERS W/NO NAME
-*                                  COMMENTED OUT THE IF FARE > 0
-*07/03/02   STEVE              CHANGED TO eTTek Review and Copyright
-*10/22/03    JOY               CARRIED THRU LEVEL1
-*4/28/8/04   JOY               REMOVED LEVEL_DESC SORT TO ELIMINATE ERRORS
-*                              WHEN CHOOSING LOWER LEVEL_DESC SORT
-*10/29/04    DEB               CHANGED TO ADD GLOBAL CURRENCY
-*09/21/05 CREATED FOR CARRIER USAGE SUMMARY BY BOOKING TYPE REPORT
-* 07/03/2017 - RSB - S-35420 Report view to be updated with standard footer (part 3)
-* 09/13/2017   RSB  S-39793 Footer changes to be backed out of story S-35420
-*
-**********************************************************************
-*
SET ASNAMES = ON
-RUN
-SET &&RANK_METH =  'NET_TKT_CNT';
-SET &&RANK_LIMIT =    50;
-SET &&RANK_LIMIT2 = 10;



-IF &&SETF EQ 'ABONCARI' AND &&CURRENCY NE 'USD' THEN GOTO CARIR
-ELSE GO TO NEXT;

-CARIR;

-SET &&SUBHEAD = <NAMEC;
-SET &FBASE_CUR = 'BASE FARE, (' | &&CURRENCY || ')';
-SET &&PRINT7='PAID_FARE1/D16.2CS AS ' | '''&FBASE_CUR.EVAL''';
-SET &&PRINT8='KILO AS ''TOTAL,KLMTRS''';


-NEXT 


-*INSERT AVI113SM

-TYPE CREATE HOLD1

-IF &&SETF EQ 'RFONCARI' GOTO RDFL;

TABLE FILE AIRCARI2
SUM BASE_FARE 
  COMM_SEG	
  CP_FARE_PD AS 'FARE'
  FARE_BASE1/D20.6CS AS 'GBASE_FARE'
  FARE_TTL1/D20.6CS AS 'GTTL_FARE'	
  INTCNT
  KILO
  MILES	
  LEVEL_DESC
  NAMEC
  NET_COMM
  NET_FARE
  NET_TKT_CNT
  NET_FARE
  NEW_SEG_MILES
  PAID_FARE1/D20.6CS AS 'GFARE'
  TAX_TTL1/D20.6CS AS 'GTTL_TAX'
  TOTAL_FARE
  TOTAL_TAX	
BY AIRLINE_NAME
BY IFLAG
BY CLASS_CAT
ON TABLE HOLD AS HOLD1
END
-RUN

-GOTO NORDFL;

-RDFL;
TABLE FILE AIRCARI2
SUM BASE_FARE 
  COMM_SEG	
  CP_FARE_PD AS 'FARE'
  FARE_BASE1/D20.6CS AS 'GBASE_FARE'
  FARE_TTL1/D20.6CS AS 'GTTL_FARE'	
  INTCNT
  KILO
  MILES	
  LEVEL_DESC
  NAMEC
  NET_COMM
  NET_FARE
  NET_TKT_CNT
  NET_FARE
  NEW_SEG_MILES
  PAID_FARE1/D20.6CS AS 'GFARE'
  TAX_TTL1/D20.6CS AS 'GTTL_TAX'
  TOTAL_FARE
  TOTAL_TAX
  IFLAG
BY AIRLINE_NAME
BY CLASS_CAT
ON TABLE HOLD AS HOLD1
END
-RUN

-NORDFL;

-TYPE CREATE HOLD2
TABLE FILE HOLD1
PRINT BASE_FARE 
    CLASS_CAT
    COMM_SEG	
    FARE
    GBASE_FARE
    GTTL_FARE
    IFLAG
    INTCNT
    KILO
    MILES	
    LEVEL_DESC
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NET_FARE
    NEW_SEG_MILES
    GFARE
    GTTL_TAX
    TOTAL_FARE
    TOTAL_TAX	
BY AIRLINE_NAME
RANKED BY HIGHEST &&RANK_METH

ON TABLE HOLD AS HOLD2
END
-RUN

DEFINE FILE HOLD2
  DRANK/D5      = RANK ;
  ARANKX/A6     = FTOA(DRANK, '(D5)', 'A6');
  ARANK/A5      = EDIT(ARANKX,'$99999');
  RANK_LIMIT/I5 = &&RANK_LIMIT2 ;
  RNK_VAL/A5 = IF (RANK_LIMIT EQ 0) THEN (ARANK) ELSE
                  IF RANK GT RANK_LIMIT THEN 'OTHER' ELSE ARANK;
END
-RUN

-TYPE CREATE HOLD3

TABLE FILE HOLD2
PRINT   BASE_FARE 
    CLASS_CAT
    COMM_SEG	
    FARE
    GBASE_FARE
    GTTL_FARE
    IFLAG
    INTCNT
    KILO
    MILES	
    LEVEL_DESC
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NET_FARE
    NEW_SEG_MILES
    GFARE
    GTTL_TAX
    TOTAL_FARE
    TOTAL_TAX	
 BY AIRLINE_NAME
 BY RNK_VAL
 ON TABLE HOLD AS HOLD3
 END
 -RUN
 
DEFINE FILE HOLD3
AIRL_PRINT/A12 = IF RNK_VAL LE '&&RANK_LIMIT2' 
	THEN AIRLINE_NAME ELSE 'OTHER';
END
-RUN

-TYPE CREATE HOLD4

TABLE FILE HOLD3
PRINT AIRL_PRINT 
    BASE_FARE 
    CLASS_CAT
    COMM_SEG	
    FARE
    GBASE_FARE
    GTTL_FARE
    IFLAG
    INTCNT
    KILO
    MILES	
    LEVEL_DESC
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NET_FARE
    NEW_SEG_MILES
    GFARE
    GTTL_TAX
    TOTAL_FARE
    TOTAL_TAX
    RNK_VAL
BY AIRLINE_NAME
ON TABLE HOLD AS HOLD4
END
-RUN
  
-TYPE CREATE RHOLD1 
TABLE FILE HOLD1
SUM &&RANK_METH
BY AIRLINE_NAME
ON TABLE HOLD AS RHOLD1
END
-RUN


-TYPE CREATE RHOLD2
TABLE FILE RHOLD1
PRINT &&RANK_METH
RANKED BY HIGHEST &&RANK_METH AS 'SEG_RANK'
BY AIRLINE_NAME
ON TABLE HOLD AS RHOLD2
END
-RUN

-TYPE CREATE HOLD5
MATCH FILE HOLD4
PRINT AIRL_PRINT
    BASE_FARE 
    CLASS_CAT
    COMM_SEG	
    FARE
    GBASE_FARE
    GTTL_FARE
    IFLAG
    INTCNT
    KILO
    MILES	
    LEVEL_DESC
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NET_FARE
    NEW_SEG_MILES
    GFARE
    GTTL_TAX
    TOTAL_FARE
    TOTAL_TAX
    RNK_VAL
BY AIRLINE_NAME
ON TABLE HOLD
RUN
FILE RHOLD2
SUM SEG_RANK
BY AIRLINE_NAME
AFTER MATCH HOLD AS HOLD5 OLD-OR-NEW
END
-RUN

-TYPE CREATE HOLD6
TABLE FILE HOLD5
PRINT AIRL_PRINT
    AIRLINE_NAME 
    BASE_FARE 
    CLASS_CAT
    COMM_SEG	
    FARE
    GBASE_FARE
    GTTL_FARE
    IFLAG
    INTCNT
    KILO
    MILES	
    LEVEL_DESC
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NET_FARE
    NEW_SEG_MILES
    GFARE
    GTTL_TAX
    TOTAL_FARE
    TOTAL_TAX
    RNK_VAL
RANKED BY HIGHEST SEG_RANK
ON TABLE HOLD AS HOLD6
END
-RUN

DEFINE FILE HOLD6
  ORG_LIMIT/I2 = &&RANK_LIMIT ;
  OLIMIT/A2    = EDIT(ORG_LIMIT) ;
  CRANK/D5     = RANK;
  BRANK/A6     = FTOA(CRANK, '(D5)', 'A6');
  LIST/D6 = IF AIRLINE_NAME NE LAST AIRLINE_NAME THEN (LAST LIST + 1) 
    ELSE LAST LIST;
  FRANKX/A7 = FTOA(LIST, '(D6)', 'A7');
  FRANK/A6  = EDIT(FRANKX,'$999999'); 
  ORG_VALUE/A6 = IF ORG_LIMIT EQ 0 THEN BRANK ELSE
               IF LIST GT ORG_LIMIT THEN 'OTHER' ELSE FRANK;
END
-RUN

-TYPE CREATE HOLD7
TABLE FILE HOLD6
SUM AIRLINE_NAME 
    BASE_FARE 
    CLASS_CAT
    COMM_SEG	
    FARE
    GBASE_FARE
    GTTL_FARE
    IFLAG
    INTCNT
    KILO
    MILES	
    LEVEL_DESC
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NET_FARE
    NEW_SEG_MILES
    OLIMIT
    GFARE
    GTTL_TAX
    TOTAL_FARE
    TOTAL_TAX
BY ORG_VALUE
BY RNK_VAL
BY AIRL_PRINT
ON TABLE HOLD AS HOLD7 
END
-RUN

-TYPE CREATE FILE HOLD8
TABLE FILE HOLD7
PRINT BASE_FARE 
    CLASS_CAT
    COMM_SEG	
    FARE
    GBASE_FARE
    GTTL_FARE
    IFLAG
    INTCNT
    KILO
    MILES	
    LEVEL_DESC
    NAMEC
    NET_COMM
    NET_FARE
    NET_TKT_CNT
    NET_FARE
    NEW_SEG_MILES
    OLIMIT
    GFARE
    GTTL_TAX
    TOTAL_FARE
    TOTAL_TAX
    ORG_VALUE
    RNK_VAL
    AIRL_PRINT
BY AIRLINE_NAME
ON TABLE HOLD AS HOLD8 FORMAT FOCUS INDEX AIRLINE_NAME
END
-RUN

-*This starts the detail

-TYPE CREATE AIRHOLD1
TABLE FILE AIRCARI2
SUM 
  COMM_SEG AS 'TCOMM'
  CP_FARE_PD AS 'PBFARE'
  FARE_TTL1/D16.2CS AS 'GPTFARE' 
  KILO AS 'PTKILO' 
  MILES AS 'PTMILES'
  NET_COMM AS 'NFARE'
  PAID_FARE1/D16.2CS AS 'GPBFARE'
  TAX_TTL1/D16.2CS AS 'GTTAX'
  TOTAL_FARE AS 'TFARE'
  TOTAL_TAX AS 'TTAX'
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
ON TABLE HOLD AS AIRHOLD1
END
-RUN

-TYPE CREATE XTWO
TABLE FILE AIRCARI2
PRINT 
  AIRLINE	
  AIRLINE_NAME	
  CLASS_CAT
  COMM_SEG	
  CP_FARE_PD	
  DPT_DAY	
  DPT_TIME	
  EMB_APT_CD	
  EMB_APT_NM	
  EMB_CTY_NM
  FARE_TTL1/D16.2CS
  IFLAG
  KILO
  LEVEL1
  LEVEL_DESC
  MILES
  NAMEC	
  NET_COMM	
  NET_FARE	
  NET_TKT_CNT
  PAID_FARE1/D16.2CS  	
  REFUSE_CODE	
  RTE_APT_CD	
  RTE_APT_NM	
  RTE_CTY_NM
  TAX_TTL1/D16.2CS 	
  TKT_NUM	
  TKT_TYPE	
  TOTAL_FARE	
  TOTAL_TAX	
  XDPT_DT	
  XTRAN_DT	
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD AS XTWO
END
-RUN

-TYPE CREATE MATCH AIRHOLD2
MATCH FILE XTWO
PRINT 
  AIRLINE	
  AIRLINE_NAME	
  CLASS_CAT
  COMM_SEG	
  CP_FARE_PD	
  DPT_DAY	
  DPT_TIME	
  EMB_APT_CD	
  EMB_APT_NM	
  EMB_CTY_NM
  FARE_TTL1	
  IFLAG
  KILO
  LEVEL_DESC
  LEVEL1
  MILES	
  NET_COMM	
  NET_FARE	
  NET_TKT_CNT
  PAID_FARE1	
  REFUSE_CODE	
  RTE_APT_CD	
  RTE_APT_NM	
  RTE_CTY_NM
  TAX_TTL1	
  TKT_NUM	
  TKT_TYPE	
  TOTAL_FARE	
  TOTAL_TAX	
  XDPT_DT	
  XTRAN_DT	
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD
RUN
FILE AIRHOLD1
PRINT
  GPTFARE
  GPBFARE
  GTTAX
  PBFARE
  NFARE
  TCOMM 
  TFARE
  PTMILES	
  TTAX
  PTKILO	
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
AFTER MATCH HOLD AS AIRHOLD2 OLD-OR-NEW
END
-RUN

-TYPE CREATE AIRHOLD3 FOCUS
TABLE FILE AIRHOLD2
PRINT 
  AIRLINE	
  AIRLINE_NAME	
  PBFARE	
  CLASS_CAT
  COMM_SEG	
  CP_FARE_PD	
  DPT_DAY	
  DPT_TIME	
  EMB_APT_CD	
  EMB_APT_NM	
  EMB_CTY_NM
  FARE_TTL1
  GPTFARE
  GPBFARE
  GTTAX	
  IFLAG
  KILO
  LEVEL_DESC
  LEVEL1
  MILES	
  NET_COMM	
  NET_FARE	
  NET_TKT_CNT	
  NFARE
  PAID_FARE1
  PTKILO	
  REFUSE_CODE	
  RTE_APT_CD	
  RTE_APT_NM	
  RTE_CTY_NM
  TAX_TTL1	
  TCOMM	
  TFARE	
  TKT_NUM	
  TKT_TYPE	
  PTMILES	
  TOTAL_FARE	
  TOTAL_TAX	
  TRN_DATE	
  TTAX	
  XDPT_DT	
  XPSNGR_NM	
  XTRAN_DT
BY TKT_SORT
BY SEG_NBR
ON TABLE HOLD AS AIRHOLD3 FORMAT FOCUS INDEX AIRLINE_NAME
END
-RUN

JOIN AIRHOLD3.AIRLINE_NAME IN AIRHOLD3 TO ALL HOLD8.AIRLINE_NAME IN HOLD8
-RUN


DEFINE FILE AIRHOLD3
   PASNGR_NAME/A15 = IF TKT_NUM NE LAST TKT_NUM THEN XPSNGR_NM ELSE ' ';
   RREFUSE_CODE/A2 = IF TKT_NUM NE LAST TKT_NUM THEN REFUSE_CODE ELSE '';
   TICKET_NMBR/A10 = IF TKT_NUM NE LAST TKT_NUM THEN TKT_NUM ELSE ' ';
   XT_DTE/A8=EDIT(TRN_DATE);
   XTKT_SRT/A10 = EDIT(TKT_SORT,'9999999999$');
  
-* ****DEFINES ON PREVIOUS DEFINES****
   SRT_DT/A100 = TKT_SORT||XT_DTE||LEVEL_DESC||XPSNGR_NM;
   GBASE_FARE/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN GPBFARE ELSE 0;
   BASE_FARE/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN PBFARE ELSE 0;
   COMM_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TCOMM ELSE 0;
   FARE_PAID/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TFARE ELSE 0;
   NET_FARE/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN NFARE ELSE 0;
   TOTAL_KILO/D9CS = IF SRT_DT NE LAST SRT_DT THEN PTKILO ELSE 0;
   TOTAL_MILES/D9CS = IF SRT_DT NE LAST SRT_DT THEN PTMILES ELSE 0;
   TOTAL_TAX/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TTAX ELSE 0;
-*********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERDT
-**********************************************************************
  NOWTOD/A8 WITH LEVEL_DESC = HHMMSS (NOWTOD);
  XTS_FLAG/A1 = IF XTKT_SRT NE LAST XTKT_SRT THEN 'Y' ELSE 'N';

END

-IF &&DRILLED_RUN EQ 'N' GOTO SKIP_DRIL;
-************************************************************
-* INCLUDE PROGRAM TO GEN WHERE STATEMENTS
-************************************************************
-SET &&DRILLRPT = 'AIRHOLD3';
-INCLUDE DRILWHRS
-************************************************************
-SKIP_DRIL

-SET &&PAHDR = IF '&&OUTFMT.EVAL' EQ 'PDF' OR 'PPT' OR 'COM' THEN 'HEADAIR' ELSE 'HDREXLS'; 
-SET &&PASTYD = IF '&&OUTFMT.EVAL' NE 'PDF' OR 'PPT' OR 'COM' THEN 'DTEXL' ELSE &&DTSTY;
-RUN

TABLE FILE AIRHOLD3
-INCLUDE &&PAHDR
"&&SUBHEAD"
-IF &&PAHDR EQ 'HDREXLS' GOTO NOSPC;
"</2"
-NOSPC;
-**********************************************************************
-* Print statement with fields passed from the user profile database
-**********************************************************************
-*
&&PRINT1
&&PRINT2
&&PRINT3
&&PRINT4
&&PRINT5
&&PRINT6
&&PRINT7
&&PRINT8
&&PRINT9
&&PRINT10
-*
-**********************************************************************
-* By statements (one per field)
-**********************************************************************
-*
&&BY1
&&BY2
&&BY3
&&BY4
&&BY5
&&BY6
&&BY7
&&BY8
&&BY9
&&BY10
BY XTS_FLAG NOPRINT

-*
-*********************************************************************
-*DATE           NAME               DESCRIPTION 
-*8/18/00      IBISTL-KR            INCLUDE WHERE STATEMENTS WHEN
-*                                  DRILLED_RUN EQ 'Y'.
-*********************************************************************
-*
-**********************************************************************
-* Where statements for Drilled Report
-**********************************************************************
-*
-IF &&DRILLED_RUN EQ 'N' GOTO SKIP_WHR;
-INCLUDE &&DRILLWHR
-SKIP_WHR
-*
-**********************************************************************
-* On Table statements for code appropriate to On Table commands
-**********************************************************************
-*
&&ONTABLE1
&&ONTABLE2
&&ONTABLE3
&&ONTABLE4
&&ONTABLE5
&&ONTABLE6
&&ONTABLE7
&&ONTABLE8
&&ONTABLE9
&&ONTABLE10
-*
-INCLUDE FOOTERDT
-*
-*ON TABLE SET STYLE &&DTSTY
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT

-**************************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT 
-*                                  WITH AN INCLUDE
-**************************************************************************
ON TABLE SET STYLE *
-INCLUDE &&PASTYD

ENDSTYLE
-*
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN
