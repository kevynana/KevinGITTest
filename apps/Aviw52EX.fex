-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* File RNKEXTRT.FEX
-********************************************************************
-********************************************************************
-*
-* This program extracts data for a drillable frequent flyer report
-* Added defines for ref_tkts and non_tkts JK 9/29/04
-* ADDED CODE FOR GLOBAL CURRENCY - DV 11/9/04
-* ADDED AA_TKT DL_TKT NW_TKT UA_TKT OTH_TKT DEFINE - DEB 11/17/04
-* ADDED TRP_LEN  - DEB 6/30/05
-* ADDED DOD_TYPE H TO OTFLAG DEFINE - DEB - 10/11/05
-* ADDED NEW_ADV_PUR - DEB 9/22/06 
-* Added FLT_RANGE DEFINE - JK 10/28/13
-*1/23/14 UPDATED ONLINE/TRADITIONAL DEFINES TO USE ONLINE_TRADITIONAL FIELD INSTEAD OF DOD_TYPE
-* ADDED TRANTYPE INCLUDE - JK 12/12/14 STORY ID S-06492
-*12/08/15 - JEM - S-13286 Updated to allow reports to sort/subtotal by id-levels
-*7/15/16 -DLV -  S-20630   Commented define for EMP_ID  

-********************************************************************
-* -*SET &ECHO=ALL;
-INCLUDE SETECHO

SET ASNAMES = ON
-SET HOLDATTR = ON;

-SET &&IDLEVELBREAK = '';

-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';

-INCLUDE IDLEVROLLDEF
-RUN

DEFINE FILE &&EXTRACT
  COMM_SEG/D12.2S   = SEG_COM;
  FARE_PAID/D12.2CS   = SEG_AMT + SEG_TAX;
-*  EMP_ID/A9 = EDIT(LEVEL2,'999999999');
  EMP_NO/A60 = LEVEL4;
  KILO/D9      = CITYPAIR.SEG_MILES * 1.60934 ;  
  LEVEL_DESC1/A80      = &&LDESC;
  MRK_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (EX_FLAG NE ' ') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (RF_FLAG NE ' ') THEN (-1) ELSE 0;
  NET_COMM/D12.2S     = (SEG_AMT - SEG_COM);
  NET_FARE/D12.2S  = IF (EX_FLAG EQ ' ') AND (RF_FLAG EQ ' ')
                         THEN SEG_AMT ELSE 0;
  NET_TKT_CNT/D8S    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  NEW_ADV_PURCH/D9    = ADV_PURCH;                         
  NEW_SEG_LOWEST/D9 = SEG_LOWEST;
  NEW_SEG_MILES/D9 = SEG_MILES;
  NEW_STAY/D9 = STAY;
  NEW_TRIP_LENGTH/D12 = TRIP_LENGTH;
  
  OTFLAG/A33 = ONLINE_TRADITIONAL;

  REF_EXCH_CNT/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 0 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;  
  TKT_AMOUNT/D12.2CS  = TICKET_AMT + TAX_AMT;
  TKT_PURCH/D8CS      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 0;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TOTAL_FARE/D12.2S = SEG_AMT + SEG_TAX;
  TRAN_MONTH/MT = TRN_DATE;
  VASAVINGS/D11.2CS = SEG_DISCOUNT - TOTAL_FARE;
  XPSNGR_NM/A15        = 
  EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
  XDPT_DT/MDYY         = DPT_DATE;
  XTRAN_DT/MDYY        = TRN_DATE;
  AIRLINE_FEE/D8.2CS = IF EMBARK EQ 'FP2' OR 'FP3' THEN FARE_PAID ELSE 0;
  TRP_LEN/D8CS = TRIP_LENGTH * NET_TKT_CNT;
-* ****DEFINES ON PREVIOUS DEFINES****
  CPMILE/D12.2CS = IF ((SEG_MILES LT 1) AND (SEG_MILES GT (-1))) THEN 0 ELSE
                      (FARE_PAID/SEG_MILES);
  DISSAVINGS/D11.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
  AIRFEE_CNT/D8CS = IF AIRLINE_FEE GT 0 THEN 1 ELSE 0;
  NON_TKTS/P8CS = IF NONREF_FLAG EQ 'N' THEN NET_TKT_CNT ELSE 0;
  REF_TKTS/P8CS = IF NONREF_FLAG NE 'N' THEN NET_TKT_CNT ELSE 0;
  AA_TKT/P8CS = IF VAL_AIRLINE EQ 'AA' THEN NET_TKT_CNT ELSE 0;
  UA_TKT/P8CS = IF VAL_AIRLINE EQ 'UA' THEN NET_TKT_CNT ELSE 0;
  NW_TKT/P8CS = IF VAL_AIRLINE EQ 'NW' THEN NET_TKT_CNT ELSE 0;
  DL_TKT/P8CS = IF VAL_AIRLINE EQ 'DL' THEN NET_TKT_CNT ELSE 0;
  OTH_TKT/P8CS = IF VAL_AIRLINE NE 'AA' OR 'UA' OR 'NW' OR 'DL' THEN
                  NET_TKT_CNT ELSE 0;

  FLT_LEN1A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 1, '-', 5, FLT_LEN1A);
  FLT_LEN2A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 2, '-', 5, FLT_LEN2A);
  FLT_LEN3A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 3, '-', 5, FLT_LEN3A);
  FLT_LEN4A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 4, '-', 5, FLT_LEN4A);
  FLT_LEN5A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 5, '-', 5, FLT_LEN5A);
  FLT_LEN6A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 6, '-', 5, FLT_LEN6A);
  FLT_LEN7A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 7, '-', 5, FLT_LEN7A);
  FLT_LEN8A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 8, '-', 5, FLT_LEN8A);
  FLT_LEN9A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 9, '-', 5, FLT_LEN9A);
  FLT_LEN10A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 10, '-', 5, FLT_LEN10A);
 

  FLEN1D/D9.2 = ATODBL(FLT_LEN1A,  '5', FLEN1D);
  FLEN2D/D9.2 = ATODBL(FLT_LEN2A,  '5', FLEN2D);
  FLEN3D/D9.2 = ATODBL(FLT_LEN3A,  '5', FLEN3D);
  FLEN4D/D9.2 = ATODBL(FLT_LEN4A,  '5', FLEN4D);
  FLEN5D/D9.2 = ATODBL(FLT_LEN5A,  '5', FLEN5D);
  FLEN6D/D9.2 = ATODBL(FLT_LEN6A,  '5', FLEN6D);
  FLEN7D/D9.2 = ATODBL(FLT_LEN7A,  '5', FLEN7D);
  FLEN8D/D9.2 = ATODBL(FLT_LEN8A,  '5', FLEN8D);
  FLEN9D/D9.2 = ATODBL(FLT_LEN9A,  '5', FLEN9D);
  FLEN10D/D9.2 = ATODBL(FLT_LEN10A,  '5', FLEN10D);

  FLT_LEN1/D5 = FLEN1D;
  FLT_LEN2/D5 = FLEN2D;
  FLT_LEN3/D5 = FLEN3D;
  FLT_LEN4/D5 = FLEN4D;
  FLT_LEN5/D5 = FLEN5D;
  FLT_LEN6/D5 = FLEN6D;
  FLT_LEN7/D5 = FLEN7D;
  FLT_LEN8/D5 = FLEN8D;
  FLT_LEN9/D5 = FLEN9D;
  FLT_LEN10/D5 = FLEN10D;
  
 MAX_FLT/D5 = IF FLT_LEN1 GE FLT_LEN2 AND FLT_LEN1 GE FLT_LEN3 AND FLT_LEN1 GE FLT_LEN4 AND FLT_LEN1 GE FLT_LEN5 AND FLT_LEN1 GE FLT_LEN6 AND
                 FLT_LEN1 GE FLT_LEN7 AND FLT_LEN1 GE FLT_LEN8 THEN FLT_LEN1 ELSE
              IF FLT_LEN2 GE FLT_LEN1 AND FLT_LEN2 GE FLT_LEN3 AND FLT_LEN2 GE FLT_LEN4 AND FLT_LEN2 GE FLT_LEN5 AND FLT_LEN2 GE FLT_LEN6 AND
                 FLT_LEN2 GE FLT_LEN7 AND FLT_LEN2 GE FLT_LEN8 THEN FLT_LEN2 ELSE   
              IF FLT_LEN3 GE FLT_LEN1 AND FLT_LEN3 GE FLT_LEN2 AND FLT_LEN3 GE FLT_LEN4 AND FLT_LEN3 GE FLT_LEN5 AND FLT_LEN3 GE FLT_LEN6 AND
                 FLT_LEN3 GE FLT_LEN7 AND FLT_LEN3 GE FLT_LEN8 THEN FLT_LEN3 ELSE   
              IF FLT_LEN4 GE FLT_LEN1 AND FLT_LEN4 GE FLT_LEN2 AND FLT_LEN4 GE FLT_LEN3 AND FLT_LEN4 GE FLT_LEN5 AND FLT_LEN4 GE FLT_LEN6 AND
                 FLT_LEN4 GE FLT_LEN7 AND FLT_LEN4 GE FLT_LEN8 THEN FLT_LEN4 ELSE        
              IF FLT_LEN5 GE FLT_LEN1 AND FLT_LEN5 GE FLT_LEN2 AND FLT_LEN5 GE FLT_LEN3 AND FLT_LEN5 GE FLT_LEN4 AND FLT_LEN5 GE FLT_LEN6 AND
                 FLT_LEN5 GE FLT_LEN7 AND FLT_LEN5 GE FLT_LEN8 THEN FLT_LEN5 ELSE    
              IF FLT_LEN6 GE FLT_LEN1 AND FLT_LEN6 GE FLT_LEN2 AND FLT_LEN6 GE FLT_LEN3 AND FLT_LEN6 GE FLT_LEN4 AND FLT_LEN6 GE FLT_LEN6 AND
                 FLT_LEN6 GE FLT_LEN7 AND FLT_LEN6 GE FLT_LEN8 THEN FLT_LEN6 ELSE   
              IF FLT_LEN7 GE FLT_LEN1 AND FLT_LEN7 GE FLT_LEN2 AND FLT_LEN7 GE FLT_LEN3 AND FLT_LEN7 GE FLT_LEN4 AND FLT_LEN7 GE FLT_LEN7 AND
                 FLT_LEN7 GE FLT_LEN6 AND FLT_LEN7 GE FLT_LEN8 THEN FLT_LEN7 ELSE FLT_LEN8; 

FLT_RANGE/A16 = IF MAX_FLT LT 239 THEN '< 4 HOURS' ELSE '> 4 HOURS';                  

-INCLUDE TRANTYPE  
-INCLUDE IDLEVDEFINE 

END
-RUN

TABLEF FILE &&EXTRACT
PRINT   AA_TKT
        AIR_KEY
        AIRLINE
        AIRLINE_FEE
        AIRFEE_CNT  
        AIR_MAIN.INTL_DOM   
        AR_BRANCH
        BR_CL_IDX
        CITYPAIR.EMBARK      AS 'EMB_APT_CD'    
        CITYPAIR.ROUTE       AS 'RTE_APT_CD'    
        CLASS
        CLIENT_NUM  
        COMM_SEG
        DL_TKT
        EMB_CTY.COUNTRY_CODE AS 'EMB_CNTRY_CODE'
        CPMILE  
        DISSAVINGS
        DPT_TIME
        EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'    
        EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'
        EMP_ID
        EMP_NO
        FARE_BAS        
        FARE_PAID
        FLT_RANGE
        KILO
        LEVEL_DESC  
        LEVEL1  
        LEVEL2  
        LEVEL3
        MRK_TKT_CNT
        NET_COMM    
        NET_FARE    
        NET_TKT_CNT
        NEW_ADV_PUR
        NEW_SEG_LOWEST
        NEW_SEG_MILES
        NEW_STAY
        NEW_TRIP_LENGTH
        NON_TKTS
        NW_TKT
        OTFLAG
        OTH_TKT
        PASSNGR_NAME
        REFUSE_CODE
        REF_TKTS
        RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'
        RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'    
        SAVINGS 
        SEG_AMT 
        SEG_COUNT   
        SEG_DISCOUNT    
        SEG_LOWEST
        SEG_NBR 
        SEG_STANDARD    
        SEG_TAX 
        STAY
        TICKET_BRANCH   
        TKT_AMOUNT
        TKT_DATE    
        TKT_NUM 
        TKT_PURCH
        TKT_SORT
        TKT_TYPE    
        TOTAL_FARE
        TRP_LEN
        TRN_DATE
        UA_TKT  
        VAL_AIRLINE 
        VASAVINGS
        XDPT_DT 
        XPSNGR_NM   
        XTRAN_DT
         

-INCLUDE &AIRDATES
WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10


-INCLUDE RPTPARMS

ON TABLE HOLD AS GCTOPTVL 

END
-RUN

TABLE FILE GCTOPTVL
PRINT AA_TKT
        AIR_KEY
        AIRLINE
        AIRLINE_FEE
        AIRFEE_CNT  
        INTL_DOM    
        AR_BRANCH
        BR_CL_IDX        
        CLASS
        CLIENT_NUM  
        COMM_SEG                
        EMB_CNTRY_CODE
        CPMILE  
        DISSAVINGS
        DL_TKT
        DPT_TIME
        EMB_APT_CD
        EMB_APT_NM  
        EMB_CTY_NM
        EMP_ID
        EMP_NO
        FARE_BAS        
        FARE_PAID
        FLT_RANGE
        KILO
        LEVEL_DESC  
        LEVEL1  
        LEVEL2  
        LEVEL3
        MRK_TKT_CNT
        NET_COMM    
        NET_FARE    
        NET_TKT_CNT 
        NEW_ADV_PUR
        NEW_SEG_LOWEST
        NEW_SEG_MILES
        NEW_STAY
        NEW_TRIP_LENGTH
        NON_TKTS
        NW_TKT
        OTFLAG
        OTH_TKT
        PASSNGR_NAME
        REFUSE_CODE
        REF_TKTS
        RTE_APT_CD
        RTE_APT_NM
        RTE_CTY_NM  
        SAVINGS 
        SEG_AMT 
        SEG_COUNT   
        SEG_DISCOUNT    
        SEG_LOWEST
        SEG_NBR 
        SEG_STANDARD    
        SEG_TAX 
        STAY
        TICKET_BRANCH   
        TKT_AMOUNT  
        TKT_NUM 
        TKT_PURCH
        TKT_SORT
        TKT_TYPE    
        TOTAL_FARE
        TRP_LEN
        TRN_DATE
        UA_TKT  
        VAL_AIRLINE 
        VASAVINGS
        XDPT_DT 
        XPSNGR_NM   
        XTRAN_DT
BY TKT_DATE 
ON TABLE HOLD AS TOPTRVL FORMAT FOCUS INDEX TKT_DATE
END
-RUN


-* Global Reporting JOIN
JOIN TOPTRVL.TKT_DATE IN TOPTRVL TO GLOBAL.DATE IN GLOBAL AS J1


DEFINE FILE TOPTRVL
NAMEC/A30 = CNAME;

-******************************************************************************
-*                         Global Currency Conversion Defines
-******************************************************************************
CURR1X/D20.6 = 1 / USDPU ;

-* DEFINES ON PREVIOUS DEFINES
PAID_FAREX/D20.6 = FARE_PAID * CURR1X;

-* DEFINES ON PREVIOUSLY DEFINES DEFINES

PAID_FARE1/D20.6C = PAID_FAREX;
END
-RUN



TABLE FILE TOPTRVL
PRINT AA_TKT
        AIR_KEY
        AIRLINE
        AIRLINE_FEE
        AIRFEE_CNT  
        INTL_DOM    
        AR_BRANCH
        BR_CL_IDX        
        CLASS
        CLIENT_NUM  
        COMM_SEG
        DL_TKT                  
        EMB_CNTRY_CODE
        CPMILE  
        DISSAVINGS
        DPT_TIME
        EMB_APT_CD
        EMB_APT_NM  
        EMB_CTY_NM
        EMP_ID
        EMP_NO
        FARE_BAS        
        FARE_PAID
        FLT_RANGE
        KILO
        LEVEL_DESC  
        LEVEL1  
        LEVEL2  
        LEVEL3
        MRK_TKT_CNT
        NAMEC
        NET_COMM    
        NET_FARE    
        NET_TKT_CNT
        NEW_ADV_PUR
        NEW_SEG_LOWEST
        NEW_SEG_MILES
        NEW_STAY
        NEW_TRIP_LENGTH
        NON_TKTS
        NW_TKT
        OTFLAG
        OTH_TKT
        PASSNGR_NAME
        REFUSE_CODE
        REF_TKTS
        RTE_APT_CD
        RTE_APT_NM
        RTE_CTY_NM  
        SAVINGS 
        SEG_AMT 
        SEG_COUNT   
        SEG_DISCOUNT    
        SEG_LOWEST
        SEG_NBR 
        SEG_STANDARD    
        SEG_TAX 
        STAY
        TICKET_BRANCH   
        TKT_AMOUNT  
        TKT_NUM 
        TKT_PURCH
        TKT_SORT
        TKT_TYPE    
        TOTAL_FARE
        TRP_LEN
        TRN_DATE
        UA_TKT  
        VAL_AIRLINE 
        VASAVINGS
        XDPT_DT 
        XPSNGR_NM   
        XTRAN_DT
        PAID_FAREX
        PAID_FARE1
WHERE GLOBAL.COUNTRYCODE EQ '&&CURRENCY'
ON TABLE HOLD AS TOPTVL
END
-RUN

-* -QUIT


-*-EXIT


        
