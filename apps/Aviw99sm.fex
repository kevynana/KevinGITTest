-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* 10/14/04 - DEB - ADDED DEFINE TO PRINT TRADITIONAL BOOKINGS FIRST
-* 11/2/04    DEB   ADDED CODE FOR GLOBAL CURRENCY
-* 12/19/11   GSE   Removed parens from around OLIMIT in DEFINEs for 7.7.03
-*03/12/13  CHANGED CLASS_CAT DEFINE DUE TO CLASS CATEGORY CHANGES - DV
-*1/27/14 UPDATED ONLINE/TRADITIONAL DEFINES TO USE ONLINE_TRADITIONAL FIELD INSTEAD OF DOD_TYPE

-**********************************************************************


-INCLUDE SETECHO
-* File SMRYRPT.FEX
-**********************************************************************

SET ASNAMES = ON
-RUN


-RUN

-IF &&CURRENCY EQ 'USD' THEN GOTO NEXT;

-SET &&SUBHEAD = <NAMEC;
-SET &BASF_CUR = 'BASE,FARE, (' | &&CURRENCY || ')';
-SET &AVG_FLTP = 'AVG,FLT,PRICE, (' | &&CURRENCY || ')';
-SET &&S_SUBJ2='GFARE/D16.2C AS ' | '''&BASF_CUR.EVAL''';
-SET &&S_SUBJ3='PER_GFARE AS ''% OF,FARE'' KILO AS ''KLMTRS''';
-SET &&S_SUBJ4='KILO_PCT AS ''% OF,KLMTR'' ';
-SET &&S_SUBJ5='COMPUTE AVG_FLT/P14.2= IF ((NET_TKT_CNT LT 1) AND'; 
-SET &&S_SUBJ6='(NET_TKT_CNT GT (-1))) THEN 0 ELSE (GFARE/NET_TKT_CNT); AS';
-SET &&S_SUBJ7='''&AVG_FLTP.EVAL''' ;
-SET &&S_SUBJ8='COMPUTE COST_PER_KILO/P12.2C= IF ((KILO LT 1) AND';
-SET &&S_SUBJ9='(KILO GT (-1))) THEN 0 ELSE (GFARE/KILO); AS';
-SET &&S_SUBJ10=' ''COST,/KLM''';
-SET &&SUMM_ON5='GFARE KILO AVG_FLT COST_PER_KILO AS ''TOTAL''';




-NEXT;

TABLE FILE INTPMP1
SUM COMM_SEG
    CP_AIRLINE	
    CP_FARE_PD AS 'FARE'
    PAID_FAREX AS 'GFARE'
    DEMB_APT 	
    DISSAVINGS
    DPT_TIME
    DRTE_APT	
    EMB_APT
    FARE_BAS1
    KILO
    LABEL1
    LABEL2
    LEVEL3	
    LEVEL_DESC
    NAMEC
    MILES	
    NET_COMM	
    NET_FARE 	
    NET_TKT_CNT	
    NEW_SEG_COUNT	
    RTE_APT	
    SAVINGS	
    SEGMT	
    TOTAL_FARE	
    VASAVINGS	
    BUSINESS
    PREMIUM
    ECONOMY
    UPGRADE
    FIRST
    DEFAULT    
BY ORGDST
BY CGBOOK
ON TABLE HOLD AS HOLD1
END
-RUN



TABLE FILE HOLD1
PRINT CGBOOK	
      COMM_SEG	
      CP_AIRLINE
      DEMB_APT	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      EMB_APT
      FARE
      FARE_BAS1
      GFARE	
      KILO
      LABEL1
      LABEL2
      LEVEL3
      LEVEL_DESC	
      MILES
      NAMEC	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      RTE_APT
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS	
      BUSINESS
      PREMIUM
      ECONOMY
      UPGRADE
      FIRST
      DEFAULT          
BY ORGDST
RANKED BY HIGHEST &&RANK_METH   
ON TABLE HOLD AS HOLD2
END
-RUN

-* -SET &&RANK_LIMIT2 = 5;
-* -SET &&RANK_LIMIT = 50;


DEFINE FILE HOLD2
  DRANK/D5      = RANK ;
  ARANKX/A6     = FTOA(DRANK, '(D5)', 'A6');
  ARANK/A5      = EDIT(ARANKX,'$99999');
-*  RANK_LIMIT/I5 = &&RANK_LIMIT2 ;
  RANK_LIMIT/I5 = &&RANK_LIMIT; 
  RNK_VAL/A5 = IF (RANK_LIMIT EQ 0) THEN (ARANK) ELSE
                  IF RANK GT RANK_LIMIT THEN 'OTHER' ELSE ARANK;
END
-RUN

TABLE FILE HOLD2
PRINT 
      CGBOOK	
      COMM_SEG	
      CP_AIRLINE
      DEMB_APT 	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      EMB_APT
      FARE_BAS1
      FARE
      GFARE	
      KILO
      LABEL1
      LABEL2
      LEVEL3
      LEVEL_DESC	
      MILES
      NAMEC	
      NET_COMM	
      NET_FARE	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      RTE_APT
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS	
      BUSINESS
      PREMIUM
      ECONOMY
      UPGRADE
      FIRST
      DEFAULT              
BY ORGDST  
BY RNK_VAL
ON TABLE HOLD AS HOLD3
END
-RUN



DEFINE FILE HOLD3
CGBOOK_PRINT/A42 = IF RNK_VAL LE '&&RANK_LIMIT' THEN CGBOOK ELSE 'OTHER';
END
-RUN

TABLE FILE HOLD3
SUM COMM_SEG
    CP_AIRLINE
    DEMB_APT	
    DISSAVINGS
    DPT_TIME
    DRTE_APT	
    EMB_APT
    FARE
    GFARE
    FARE_BAS1	
    KILO
    LABEL1
    LABEL2
    LEVEL3
    LEVEL_DESC	
    MILES
    NAMEC	
    NET_COMM	
    NET_FARE	
    NET_TKT_CNT	
    NEW_SEG_COUNT	
    RTE_APT	
    SAVINGS	
    SEGMT	
    TOTAL_FARE	
    VASAVINGS
    BUSINESS
    PREMIUM
    ECONOMY
    UPGRADE
    FIRST
    DEFAULT            
BY ORGDST 
BY RNK_VAL 
BY CGBOOK_PRINT 
 ON TABLE HOLD AS HOLD4
END
-RUN


TABLE FILE HOLD1
SUM &&RANK_METH 
BY ORGDST
ON TABLE HOLD AS RHOLD1 
END
-RUN


TABLE FILE RHOLD1
PRINT &&RANK_METH
RANKED BY HIGHEST &&RANK_METH AS 'SEG_RANK'
BY ORGDST
ON TABLE HOLD AS RHOLD2
END
-RUN


MATCH FILE HOLD4
PRINT CGBOOK_PRINT 	
      COMM_SEG
      CP_AIRLINE
      DEMB_APT	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      EMB_APT
      FARE	
      FARE_BAS1
      GFARE
      KILO
      LABEL1
      LABEL2
      LEVEL3	
      LEVEL_DESC
      MILES
      NAMEC	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      RNK_VAL	
      RTE_APT
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS	
      BUSINESS
      PREMIUM
      ECONOMY
      UPGRADE
      FIRST
      DEFAULT              
BY ORGDST 
ON TABLE HOLD
RUN
FILE RHOLD2
SUM SEG_RANK
BY ORGDST
AFTER MATCH HOLD AS HOLD5 OLD-OR-NEW
END
-RUN


TABLE FILE HOLD5
PRINT CGBOOK_PRINT	
      COMM_SEG
      CP_AIRLINE
      DEMB_APT	
      DISSAVINGS
      DPT_TIME
      DRTE_APT	
      EMB_APT	
      FARE
      FARE_BAS1	
      GFARE
      KILO
      LABEL1
      LABEL2
      LEVEL3
      LEVEL_DESC	
      MILES
      NAMEC	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT	
      NEW_SEG_COUNT	
      ORGDST	
      RNK_VAL	
      RTE_APT	
      SAVINGS	
      SEGMT	
      TOTAL_FARE	
      VASAVINGS
     BUSINESS
      PREMIUM
      ECONOMY
      UPGRADE
      FIRST
      DEFAULT         
RANKED BY HIGHEST SEG_RANK 
ON TABLE HOLD AS HOLD6
END
-RUN



DEFINE FILE HOLD6
  ORG_LIMIT/I2 = &&RANK_LIMIT ;
  OLIMIT/A2    = EDIT(ORG_LIMIT) ;
  CRANK/D5     = RANK;
  BRANK/A6     = FTOA(CRANK, '(D5)', 'A6');
  LIST/D6 = IF ORGDST NE LAST ORGDST THEN (LAST LIST + 1) 
    ELSE LAST LIST;
  FRANKX/A7 = FTOA(LIST, '(D6)', 'A7');
  FRANK/A6  = EDIT(FRANKX,'$999999'); 
  ORG_VALUE/A6 = IF ORG_LIMIT EQ 0 THEN BRANK ELSE
               IF LIST GT ORG_LIMIT THEN 'OTHER' ELSE FRANK;
END
-RUN

TABLE FILE HOLD6
SUM COMM_SEG
    CP_AIRLINE
    DEMB_APT	
    DISSAVINGS
    DPT_TIME
    DRTE_APT	
    EMB_APT
    FARE
    FARE_BAS1	
    GFARE
    KILO
    LABEL1
    LABEL2
    LEVEL3
    LEVEL_DESC	
    MILES
    NAMEC	
    NET_COMM	
    NET_FARE  	
    NET_TKT_CNT	
    NEW_SEG_COUNT	
    OLIMIT	
    ORG_LIMIT	
    RTE_APT	
    SAVINGS	
    SEG_RANK	
    SEGMT	
    TOTAL_FARE	
    VASAVINGS	
    BUSINESS
    PREMIUM
    ECONOMY
    UPGRADE
    FIRST
    DEFAULT        
BY ORG_VALUE
BY ORGDST
BY RNK_VAL
BY CGBOOK_PRINT
ON TABLE HOLD AS HOLD7
END
-RUN

DEFINE FILE HOLD7
-INCLUDE STDTIME1
  EMBARK_APT/A21 = IF ORG_VALUE LT OLIMIT THEN EMB_APT ELSE 'ALL OTHER'; 
  ORG_PRINT/A55 =IF ORG_VALUE LT OLIMIT THEN ORGDST ELSE 'ALL OTHER';
  RO_PRINT/A42  =IF ORG_VALUE LT OLIMIT THEN CGBOOK_PRINT ELSE 
                 IF ORG_PRINT EQ 'ALL OTHER' THEN CGBOOK ELSE ' ';
  ROUTE_APT/A21 = IF ORG_VALUE LT OLIMIT THEN RTE_APT ELSE 'ALL OTHER';
  EMB_LBL/A25 = IF ORG_VALUE LT OLIMIT THEN LABEL1 ELSE 'ALL OTHER';
  RTE_LBL/A25 = IF ORG_VALUE LT OLIMIT THEN LABEL2 ELSE 'ALL OTHER';
END
-RUN

TABLE FILE HOLD7
SUM COMM_SEG
    CP_AIRLINE
    DISSAVINGS
    DPT_TIME
    EMBARK_APT
    EMB_LBL
    FARE
    FARE_BAS1	
    GFARE
    KILO
    LEVEL3
    LEVEL_DESC	
    MILES
    NAMEC	
    NET_COMM	
    NET_FARE	
    NET_TKT_CNT
    NEW_SEG_COUNT
    ORGDST	
    ROUTE_APT
    RTE_LBL
    SAVINGS	
    SEG_RANK	
    SEGMT
    TIME_DPT	
    TOTAL_FARE	
    VASAVINGS
    BUSINESS
      PREMIUM
      ECONOMY
      UPGRADE
      FIRST
      DEFAULT           
BY ORG_VALUE     
BY ORG_PRINT  
BY RNK_VAL
BY RO_PRINT
ON TABLE HOLD AS HOLD8
END
-RUN

TABLE FILE HOLD7
SUM MILES AS 'C_MILES'
    NET_COMM AS 'NC_FARE'
    NET_FARE AS 'C_FARE' 
    NET_TKT_CNT AS 'C_SEGMT'
    KILO AS 'C_KILO'
    GFARE AS 'G_FARE'
BY ORG_PRINT  
ON TABLE HOLD AS HOLD9
END
-RUN

MATCH FILE HOLD8
PRINT COMM_SEG
      CP_AIRLINE
      DISSAVINGS
      DPT_TIME
      EMBARK_APT
      EMB_LBL	
      FARE
      FARE_BAS1	
      GFARE
      KILO
      LEVEL3
      LEVEL_DESC	
      MILES
      NAMEC	
      NET_COMM	
      NET_FARE 	
      NET_TKT_CNT 	
      NEW_SEG_COUNT	
      ORGDST
      ORG_VALUE	
      RNK_VAL	
      RO_PRINT	
      ROUTE_APT	
      RTE_LBL
      SAVINGS	
      SEG_RANK	
      SEGMT
      TIME_DPT	
      TOTAL_FARE	
      VASAVINGS	
      BUSINESS
      PREMIUM
      ECONOMY
      UPGRADE
      FIRST
      DEFAULT        
BY ORG_PRINT 
ON TABLE HOLD
RUN
FILE HOLD9
SUM C_FARE
    C_MILES
    C_SEGMT
    NC_FARE
    C_KILO
    G_FARE
BY ORG_PRINT 
AFTER MATCH HOLD AS HOLD10 OLD-OR-NEW
END
-RUN




-SET &&RPTSUF = 'SMY';
-INCLUDE FDEFRPTS
-RUN

-TYPE BEFORE DEFINES

DEFINE FILE HOLD10
  RO_PRINT2/A1 = IF RO_PRINT EQ 'TRADITIONAL BOOKINGS' THEN 'A'
                      ELSE IF RO_PRINT EQ 'ONLINE BOOKINGS' THEN 'B'
                      ELSE IF RO_PRINT EQ 'EXCHANGE FROM ONLINE BOOKING'
                         THEN 'C' ELSE 'D';
  RANK_VALUE/A5 = IF ORG_PRINT EQ 'ALL OTHER' THEN '1' ELSE RNK_VAL;
  PER_FARE/D8.1=    IF ((C_FARE LT 1) AND (C_FARE GT (-1))) THEN 0
                    ELSE ((FARE/C_FARE)*100);
  PER_GFARE/D8.1=   IF ((G_FARE LT 1) AND (G_FARE GT (-1))) THEN 0
                    ELSE ((GFARE/G_FARE)*100);
  PER_NFARE/D8.1=   IF ((NC_FARE LT 1) AND (NC_FARE GT (-1))) THEN 0
                    ELSE ((NET_COMM/NC_FARE)*100);
  SEGPER/D8.1 =     IF ((C_SEGMT LT 1) AND (C_SEGMT GT (-1))) THEN 0
                    ELSE ((NET_TKT_CNT/C_SEGMT)*100);
  MILE_PCT/D8.1=    IF ((C_MILES LT 1) AND (C_MILES GT (-1))) THEN 0
                    ELSE ((MILES/C_MILES)*100);
  COSTPER_MILE/D8.2=IF ((MILES LT 1) AND (MILES GT (-1))) THEN 0
                    ELSE (FARE/MILES);
  AVGSEG_AMT/D8.2 = IF ((SEGMT LT 1) AND (SEGMT GT (-1))) THEN 0
                    ELSE (NET_FARE/SEGMT);
  AVGFLT/D8.2 =     IF ((NET_TKT_CNT LT 1) AND (NET_TKT_CNT GT (-1))) THEN 0
                    ELSE (NET_FARE/NET_TKT_CNT);
  KILO_PCT/D8.1=    IF ((C_KILO LT 1) AND (C_KILO GT (-1))) THEN 0
                    ELSE ((KILO/C_KILO)*100);
  COSTPER_KILO/D14.2=IF ((KILO LT 1) AND (KILO GT (-1))) THEN 0
                    ELSE (GFARE/KILO);

-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-**********************************************************************
  NOWTOD/A8 WITH ORG_VALUE = HHMMSS (NOWTOD);
END

-SET &&PAHDR = IF '&&OUTFMT.EVAL' EQ 'PDF' OR 'PPT' OR 'COM' THEN 'HEADER' ELSE 'HDREXLS'; 
-SET &&PASTYS = IF '&&OUTFMT.EVAL' NE 'PDF' OR 'PPT' OR 'COM' THEN 'SMEXL' ELSE &&SMSTY;
-RUN

TABLE FILE HOLD10
-INCLUDE &&PAHDR
"&&SUBHEAD"
-IF &&PAHDR EQ 'HDREXLS' GOTO NOSPC;
"</1"
-NOSPC;

   &&S_SUBJ1
   &&S_SUBJ2
   &&S_SUBJ3
   &&S_SUBJ4
   &&S_SUBJ5
   &&S_SUBJ6
   &&S_SUBJ7
   &&S_SUBJ8
   &&S_SUBJ9
   &&S_SUBJ10
   &&S_TARG1
   &&S_TARG2
   &&S_TARG3
   &&S_TARG4
   &&S_TARG5
   &&S_TARG6
   &&S_TARG7
   &&S_TARG8
   &&S_TARG9
   &&S_TARG10
   &&SUMM_ON1
   &&SUMM_ON2
   &&SUMM_ON3
   &&SUMM_ON4
   &&SUMM_ON5
   &&SUMM_ON6
   &&SUMM_ON7
   &&SUMM_ON8
   &&SUMM_ON9
   &&SUMM_ON10
-INCLUDE FOOTERSM
-*ON TABLE SET STYLE &&SMSTY
-**************************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT 
-*                                  WITH AN INCLUDE
-**************************************************************************
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT 

ON TABLE SET STYLE *
-IF &&CURRENCY EQ 'TRL' THEN GOTO SMALLER;
-INCLUDE &&PASTYS
-GOTO FINFONT;
-SMALLER
-INCLUDE SM7
-FINFONT


-**********************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/18/00      IBISTL-KR            INCLUDE STYLESHEET PARAMS FOR 
-*                                  DRILLABLE REPORTS.
-**********************************************************************
-IF &&DRILLABLE EQ 'N' GOTO SKIP_DRILL;
-IF '&&SETF.EVAL' EQ 'UPINTPND' GOTO SKIP_DRILL;
-INCLUDE &&DSTY

-SKIP_DRILL


ENDSTYLE
&&OUTLINE1
&&SUMMDEST
&&OUTLINE2
END
-RUN

-IF &&DRILLABLE EQ 'Y' GOTO SKIP_R3;

EX REPORT_3

-SKIP_R3
-*-*-EXIT






