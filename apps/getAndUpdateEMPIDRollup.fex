-**************************************************************************************************
-* getAndUpdateEMPIDRollup.fex
-* this program is a one time task to query the rollup codes which used employee id in rpt_flds
-*
-* lsi 08/18/2016
-**************************************************************************************************
-INCLUDE SETECHO
SET ASNAME = ON

-SET &DIR = 'D:\TEMP\LSI\';

DEFINE FILE EMPIDRollup
  LVL/A11 = EDIT(EMPIDLEVEL);
  EMPIDFLD/A10='ID_LEVEL' | EDIT(LVL,'$$$$$$$$$$9');
  LEVEL/A1= EDIT(LVL,'$$$$$$$$$$9');
END
TABLE FILE EMPIDRollup
BY LEVEL 
ON TABLE SAVE AS 'LEVELGRP'
END
-RUN

-SET &GROUPS = &LINES;
-SET &LASTLEVEL = '0';

-REPEAT TOALLGROUPS &GROUPS TIMES
-READ LEVELGRP NOCLOSE &LEVEL.1.

-SET &FIELDNAME = 'LEVEL' | &LEVEL;

-SET &ROLLFILENAME = 'ROLLUP' | &LEVEL;
-SET &SAVEFILE = &DIR | '&ROLLFILENAME.EVAL' | '.TXT';

FILEDEF &ROLLFILENAME DISK &SAVEFILE
-RUN

DEFINE FILE EMPIDRollup
	ROLL/A10 = '''' | ROLLUP_CODE | '''';
END
TABLE FILE EMPIDRollup
PRINT ROLL 
BY ROLLUP_CODE NOPRINT
WHERE EMPIDLEVEL EQ &LEVEL
ON TABLE SAVE AS &ROLLFILENAME.EVAL
END
-RUN


-SET &FIELDNAME = 'ID_LEVEL' | &LEVEL;
-SET &IDLEVEL = 'ID_LEVEL' | &LEVEL;;

-IF &LASTLEVEL EQ &LEVEL THEN SKIPFILEDEF;

-SET &DDNAME = 'HOLD' | &LEVEL;
-SET &HOLDX = &DIR | &DDNAME;
-*-SET &HOLDFILE = &HOLDX | '.FTM (APPEND ';  
-SET &HOLDFILE = &HOLDX | '.FTM';  
FILEDEF &DDNAME DISK &HOLDFILE
-RUN

-SKIPFILEDEF

JOIN CLEAR *
JOIN SET_KEY IN RPT_INST TO SET_KEY IN RPT_SET AS J1
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J2
END

TABLE FILE RPT_INST
PRINT COMMON2.SEQ_NO   &FIELDNAME
BY ROLLUP_CODE AS 'ROLLUP'
BY USER_NAME
BY SET_KEY 
BY SET_NAME
BY INST_KEY
BY RPT_NAME
-*WHERE ROLLUP_CODE EQ '&ROLLUP.EVAL'
WHERE ROLLUP_CODE IN FILE &ROLLFILENAME.EVAL
WHERE &IDLEVEL NE ' '

ON TABLE HOLD AS  &DDNAME
END
-RUN

-NEXTONE
-SET &LASTIDLEVEL = &LEVEL;

-TOALLGROUPS
-CLOSE LEVELGRP

-*generate reports from hold
-REPEAT TOEND2 &GROUPS TIMES
-READ LEVELGRP NOCLOSE &LEVEL.1.

-*&FILENAME should be the &DDNAME (-SET &DDNAME = 'HOLD' | &LEVEL;), which is the hold file in previous query
-SET &FILENAME = 'HOLD' | &LEVEL;
-SET &FIELDNAME = 'ID_LEVEL' | &LEVEL;

-SET &DDNAME = 'HOLDLVL' | &LEVEL;
-SET &HOLDFILE = &DIR | 'HOLDLVL' | &LEVEL |'.xls';
FILEDEF &DDNAME DISK &HOLDFILE
-RUN

-SET &HOLDF = 'HOLDRPT' | &LEVEL;
-* move values to emp_id field, erase the original values in ID_LEVEL# fields
-SET &FLDFMT = IF &LEVEL LE 3 THEN 'F1/A15' ELSE IF &LEVEL EQ 4 THEN 'F1/A60' ELSE IF &LEVEL LT 7 THEN 'F1/A20' ELSE 'F1/A50';
-SET &FLDLEN = IF &LEVEL LE 3 THEN '15' ELSE IF &LEVEL EQ 4 THEN '60' ELSE IF &LEVEL LT 7 THEN '20' ELSE '50';

-SET &SLVLEMP = 'SLVLEMP' | &LEVEL;


DEFINE FILE &FILENAME
  &FLDFMT = '';
  TEMPEMP/A15 = EDIT(&FIELDNAME.EVAL, '999999999999999');
END
TABLE FILE &FILENAME
-*PRINT F1 AS '&FIELDNAME.EVAL'  &FIELDNAME AS 'EMP_ID'
PRINT F1 AS '&FIELDNAME.EVAL'  TEMPEMP AS 'EMP_ID'
BY INST_KEY
BY SEQ_NO
-*ON TABLE HOLD AS &HOLDF.EVAL
-*ON TABLE HOLD AS &DDNAME FORMAT EXL2K
ON TABLE SAVE AS &SLVLEMP.EVAL
END
-RUN

-* UPDATE won't be able to set a field with blank value if data is from HOLD file, but can do in SAVE
MODIFY FILE RPT_FLDS
-*FIXFORM FROM &HOLDF.EVAL
FIXFORM INST_KEY/7 SEQ_NO/2 &FIELDNAME.EVAL/&FLDLEN.EVAL EMP_ID/15
MATCH INST_KEY
  ON MATCH CONTINUE
  ON NOMATCH REJECT
MATCH * KEYS SEG COMMON2
  ON NOMATCH REJECT
  ON MATCH UPDATE &FIELDNAME.EVAL EMP_ID
-*DATA ON &HOLDF.EVAL
DATA ON &SLVLEMP.EVAL
END
-RUN

-TOEND2
-CLOSE LEVELGRP

-****************************************************************************************
-* step 2: retrieve include/exclude for EMPLOYEE NUMBER/ID in id_level# fields
-****************************************************************************************

-SET &LASTLEVEL = '0';
-REPEAT TOEND3 &GROUPS TIMES
-READ LEVELGRP NOCLOSE &LEVEL.1.

-SET &ROLLFILENAME = 'ROLLUP' | &LEVEL;
-SET &FIELDNAME = IF &LEVEL LE 3 THEN 'INCL' | &LEVEL ELSE 'INCLL' | &LEVEL;


-IF &LASTLEVEL EQ &LEVEL THEN SKIPFILEDEF3;
-*HOLD INCLUDE/EXCLUDE
-SET &DDNAME = 'HOLDIE' | &LEVEL;
-SET &HOLDX = &DIR | &DDNAME;
-*-SET &HOLDFILE = &HOLDX | '.FTM (APPEND ';  
-SET &HOLDFILE = &HOLDX | '.FTM';  
FILEDEF &DDNAME DISK &HOLDFILE
-RUN

-SKIPFILEDEF3

JOIN CLEAR *
JOIN SET_KEY IN RPT_INST TO SET_KEY IN RPT_SET AS J1
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J2
END

TABLE FILE RPT_INST
PRINT SEG COMMON1.INCL1  
-*&FIELDNAME
BY ROLLUP_CODE AS 'ROLLUP'
BY USER_NAME
BY SET_KEY 
BY SET_NAME
BY INST_KEY
BY RPT_NAME

WHERE ROLLUP_CODE IN FILE &ROLLFILENAME.EVAL
WHERE &FIELDNAME NE 0

ON TABLE HOLD AS  &DDNAME
END
-RUN

-NEXTONE3
-SET &LASTIDLEVEL = &LEVEL;
-TOEND3
-CLOSE SAVE


-*generate reports from hold
-REPEAT TOEND4 &GROUPS TIMES
-READ LEVELGRP NOCLOSE &LEVEL.1.

-*THE &FILENAME SHOULD BE SAME AS &DDNAME IN ABOVE HOLD (-SET &DDNAME = 'HOLDIE' | &LEVEL;)
-SET &FILENAME = 'HOLDIE' | &LEVEL;
-SET &FIELDNAME = IF &LEVEL LE 3 THEN 'INCL' | &LEVEL ELSE 'INCLL' | &LEVEL;

-SET &DDNAME = 'HOLDINC' | &LEVEL;
-SET &HOLDFILE = &DIR | 'HOLDINC' | &LEVEL |'.xls';
FILEDEF &DDNAME DISK &HOLDFILE
-RUN

-SET &HOLDR3 = 'HOLD3R' | &LEVEL;

-IF &LEVEL GT 1 THEN GOTO NEXTLEVEL;
-*THIS ONLY APPLY FOR ID_LEVEL1 USED AS EMPLOYEE NUMBER/ID
-*delete the original segment in common1 as INCL1 is a key field and the value can not be altered.
TABLE FILE &FILENAME
PRINT INCL1
BY INST_KEY
ON TABLE HOLD AS &HOLDR3.EVAL
END
-RUN

MODIFY FILE RPT_FLDS
FIXFORM FROM &HOLDR3.EVAL
  MATCH INST_KEY INCL1
   ON MATCH DELETE
   ON NOMATCH REJECT
DATA ON &HOLDR3.EVAL
END
-RUN

-*move include/exclude FROM INCL1 to INCLEMP field, set INCL1 TO 0
DEFINE FILE &FILENAME
  INCLX/I1 = 0;
END
TABLE FILE &FILENAME
PRINT INCLX AS 'INCL1' INCL2 INCL3 INCL4 INCL5 INCLL4 INCLGEO INCLL5 INCLL6 INCLL7 &FIELDNAME AS 'INCLEMP'
BY INST_KEY
ON TABLE HOLD AS HOLDRPT4
END
-RUN

-*move include/exclude FROM INCL1 to INCLEMP field, and everything else back to the original fields
MODIFY FILE RPT_FLDS
FIXFORM FROM HOLDRPT4
  MATCH INST_KEY INCL1
   ON NOMATCH INCLUDE
   ON MATCH REJECT
DATA ON HOLDRPT4
END
-RUN
-GOTO TOEND4;


-NEXTLEVEL

-*NOT FOR ID_LEVEL1 
-*move include/exclude value to INCLEMP field, ERASE THE ORIGINAL VALUE TO 0
DEFINE FILE &FILENAME
  INCLORG/I1 = 0;
END
TABLE FILE &FILENAME
PRINT INCL1 INCLORG AS '&FIELDNAME.EVAL' &FIELDNAME AS 'INCLEMP'
BY INST_KEY
ON TABLE HOLD AS HOLDRPT5
END
-RUN

-*move include/exclude value to INCLEMP field
MODIFY FILE RPT_FLDS
FIXFORM FROM HOLDRPT5
  MATCH INST_KEY INCL1
   ON NOMATCH REJECT
   ON MATCH UPDATE &FIELDNAME.EVAL INCLEMP
DATA ON HOLDRPT5
END
-RUN

-TOEND4


-EXIT
