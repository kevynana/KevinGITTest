-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* File AVI145SM.FEX
-**********************************************************************
-*DATE           NAME               DESCRIPTION 
-*04/24/17 DLV S-32644 - New view created from AVIEW9 for ABTPEXOP
-*05/25/17 -    DLV     - S-34806 - Updated add collection to balance
-*                                  ABEXCH2 and ABLDCO  
-**********************************************************************  

SET ASNAMES = ON
-RUN
 
-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-**********************************************************************
-INCLUDE SETECHO

DEFINE FILE TOPTVL1
 AC_AMT   /D12.2   = IF TKT_SORT NE LAST TKT_SORT THEN ADDCOLLECT ELSE 0;
 AP_DAYS  /D9      = IF TKT_NUM NE LAST TKT_NUM THEN NEW_ADV_PURCH ELSE 0;
 FARE     /D12.2CS = (FARE_PAID * (-1));
 PNLTY_AMT/D12.2CS = 0;
-* ORGSALE    /D12.2CS = 0;
-*03/18/2016 - DEB - CHANGED ORGSALE DEFINE
 ORGSALE  /D12.2CS =  IF TKT_NUM NE LAST TKT_NUM THEN FARE_PAID2 ELSE 0;

 C_ITIN2  /A67     = IF C_ITIN EQ ' ' THEN 'MISCELL. CHARGE -MCO' ELSE C_ITIN;
END
-*
TABLE FILE TOPTVL1
PRINT  
  TKT_DATE
  C_ITIN2 AS 'C_ITIN'  
  AP_DAYS
  TKT_NUM 
  DOC_NUMBER 
-*
-* RBaker 3/02/2016 - add DOC_TYPE for new logic in EX_CNT define.
  DOC_TYPE
-* RBaker 3/04/2016 - add EXCHG_SALE and ADDCOLLECT for determining 'OUT OF POCKET EXPENSES' or OFARE.
  EXCHG_SALE
  ADDCOLLECT
-*
  EX_FLAG
  VAL_AIRLINE
  PNLTY_AMT
  AC_AMT
  FST_DPT_DATE
  FARE 
  ORGSALE
  NET_TKT_CNT
  PASSNGR_NAME
  PNR_LOCATOR
  TKT_PURCH
  EXG_ISS
  PEXG_ISS1 AS 'PEXG_ISS'
  INTL_DOM AS 'IDOM'
BY XPSNGR_NM
BY TKT_NUM NOPRINT
BY TKT_SORT

BY TRN_DATE
WHERE EX_FLAG NE ' '
ON TABLE HOLD AS EXHOLD FORMAT FOCUS
END
-RUN

 


 
 
DEFINE FILE TOPTVL1
 PNLTY_AMT/D12.2  = IF TKT_SORT NE LAST TKT_SORT THEN AIRLINE_FEE ELSE 0;
 DOCNBR   /A9     = EDIT(DOC_NUMBER, '$999999999');
 AP_DAYS /D9      = IF TKT_NUM NE LAST TKT_NUM THEN NEW_ADV_PURCH ELSE 0;
 FARE    /D12.2CS = IF TKT_NUM NE LAST TKT_NUM THEN FARE_PAID2 ELSE 0;
 ORGSALE /D12.2CS = IF TKT_NUM NE LAST TKT_NUM THEN ORG_SALE ELSE 0;
-* AC_AMT  /D12.2CS = IF ORGSALE GT FARE THEN 0 ELSE FARE - ORGSALE;
 AC_AMT/D12.2CS = IF ORGSALE EQ 0 THEN 0 ELSE
                  IF ORGSALE GT FARE THEN 0 ELSE FARE - ORGSALE;
 C_ITIN2 /A67     = IF C_ITIN EQ ' ' THEN 'MISCELL. CHARGE -MCO' ELSE C_ITIN;
END
-*
TABLE FILE TOPTVL1 
PRINT  
  TKT_DATE 
  C_ITIN2 AS 'C_ITIN'  
  AP_DAYS
  TKT_NUM 
  DOC_NUMBER 
-*
-* RBaker 3/02/2016 - add DOC_TYPE for new logic in EX_CNT define.
  DOC_TYPE
-* RBaker 3/04/2016 - add EXCHG_SALE and ADDCOLLECT for determining 'OUT OF POCKET EXPENSES' or OFARE.
  EXCHG_SALE
  LST.ADDCOLLECT
-*
  EX_FLAG
  VAL_AIRLINE 
  PNLTY_AMT
  AC_AMT 
  FST_DPT_DATE
  FARE 
  ORGSALE
  NET_TKT_CNT
  PASSNGR_NAME
  PNR_LOCATOR
  TKT_PURCH
  EXG_ISS
  PEXG_ISS1 AS 'PEXG_ISS'
  INTL_DOM AS 'IDOM'
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE 
WHERE ((EXCHG_SALE NE ' ') AND (SEG_COUNT GE 0)) OR
((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0)) 
WHERE EX_FLAG EQ ' '
ON TABLE HOLD AS EXHOLD2 FORMAT FOCUS
END
-RUN

-*

-SET &HLDPATH=TEMPPATH(50,'A50');
-SET &HNKA=&HLDPATH || 'EXHOLD.FOC';
-SET &HNKB=&HLDPATH || 'EXHOLD2.FOC';
-RUN

-SET &FILENAME = 'EXHOLD'; 
-RUN

-DOS STATE &HNKA
-SET &HOLDFILEA = IF &RETCODE.EVAL EQ 0 THEN &HNKA | ' AS ' | &FILENAME ELSE ' ';

-DOS STATE &HNKB
-SET &HOLDFILEB = IF &RETCODE.EVAL EQ 0 THEN &HNKB | ' AS ' | &FILENAME ELSE ' ';

USE ADD 
&HOLDFILEA
&HOLDFILEB
END
-RUN


TABLE FILE EXHOLD
SUM 
  TKT_NUM
  PASSNGR_NAME
  TKT_DATE 
  FST_DPT_DATE
  EX_FLAG
  TRN_DATE
  AP_DAYS
  FARE
  C_ITIN  
  AC_AMT
  PNLTY_AMT
  VAL_AIRLINE 
  ORGSALE
  NET_TKT_CNT
  PNR_LOCATOR
  TKT_PURCH
  EXG_ISS
  PEXG_ISS
  IDOM
-*
-* RBaker 3/02/2016 - add DOC_TYPE for new logic in EX_CNT define.
  DOC_TYPE
-* RBaker 3/04/2016 - add EXCHG_SALE and ADDCOLLECT for determining 'OUT OF POCKET EXPENSES' or OFARE.
  EXCHG_SALE
  LST.ADDCOLLECT
-*
BY XPSNGR_NM  
BY TKT_SORT
BY TKT_NUM NOPRINT
BY DOC_NUMBER  
BY TKT_DATE NOPRINT
BY TRN_DATE NOPRINT
ON TABLE HOLD AS EXAIRHLD
END
-RUN


-*

DEFINE FILE EXAIRHLD ADD
 TRN_DT/MDYY = IF EX_FLAG NE ' ' THEN TRN_DATE ELSE '        ';
 ADD_COLL/D12.2CS = IF EX_FLAG EQ ' ' THEN AC_AMT ELSE 0;
-* XPSNGR_NM/A10 = EDIT(PASSNGR_NAME, '9999999999');
 XPSNGR_NM/A15 = EDIT(PASSNGR_NAME, '999999999999999');

 KEY/A1 = 'A';
 KEY2/A1 = 'B';
-*03/18/16 - DEB - ADDED FARE DEFINE
FARE/D12.2CS = IF EX_FLAG EQ 'P' OR 'F' THEN ORGSALE ELSE FARE;
END
-*
TABLE FILE EXAIRHLD
SUM 
 TKT_NUM
 PASSNGR_NAME  
 TKT_DATE  
 FST_DPT_DATE  
 EX_FLAG  
 TRN_DT    
 AP_DAYS  
 FARE  
 C_ITIN  
 ADD_COLL 
 PNLTY_AMT  
 TKT_SORT 
 DOC_NUMBER
-*
-* RBaker 3/02/2016 - add DOC_TYPE for new logic in EX_CNT define.
 DOC_TYPE
-* RBaker 3/04/2016 - add EXCHG_SALE and ADDCOLLECT for determining 'OUT OF POCKET EXPENSES' or OFARE.
  EXCHG_SALE
  LST.ADDCOLLECT
-*
 EX_FLAG
 NET_TKT_CNT
 PNR_LOCATOR
 TKT_PURCH
 EXG_ISS
 PEXG_ISS
 IDOM
BY XPSNGR_NM 
BY KEY
BY TKT_NUM  
BY TRN_DATE
WHERE EX_FLAG NE ' '
ON TABLE HOLD AS EXHOLD3 FORMAT FOCUS
END
-RUN


-*

TABLE FILE EXAIRHLD
SUM 
 TKT_NUM
 PASSNGR_NAME  
 TKT_DATE  
 FST_DPT_DATE  
 EX_FLAG  
 TRN_DT    
 AP_DAYS  
 FARE  
 C_ITIN  
 ADD_COLL 
 PNLTY_AMT  
 TKT_SORT 
 DOC_NUMBER
-*
-* RBaker 3/02/2016 - add DOC_TYPE for new logic in EX_CNT define.
 DOC_TYPE
-* RBaker 3/04/2016 - add EXCHG_SALE and ADDCOLLECT for determining 'OUT OF POCKET EXPENSES' or OFARE.
  EXCHG_SALE
  LST.ADDCOLLECT 
-*
 EX_FLAG
 NET_TKT_CNT
 PNR_LOCATOR
 TKT_PURCH
 EXG_ISS
 PEXG_ISS
 IDOM
BY XPSNGR_NM 
BY KEY2 AS 'KEY' 
BY TKT_NUM  
BY TRN_DATE
WHERE EX_FLAG EQ ' '
ON TABLE HOLD AS EXHOLD4 FORMAT FOCUS
END
-RUN

-*


USE CLEAR *
-RUN

-SET &HLDPATH=TEMPPATH(50,'A50');
-SET &HNKC=&HLDPATH || 'EXHOLD3.FOC';
-SET &HNKD=&HLDPATH || 'EXHOLD4.FOC';
-RUN

-SET &FILENAME = 'EXHOLD3'; 
-RUN

-DOS STATE &HNKC
-SET &HOLDFILEC = IF &RETCODE.EVAL EQ 0 THEN &HNKC | ' AS ' | &FILENAME ELSE ' ';

-DOS STATE &HNKD
-SET &HOLDFILED = IF &RETCODE.EVAL EQ 0 THEN &HNKD | ' AS ' | &FILENAME ELSE ' ';

USE ADD 
&HOLDFILEC
&HOLDFILED  
END
-RUN

DEFINE FILE EXHOLD3
 PEX_FLAG  /A1     = IF PEXG_ISS NE 0 THEN 'Y' ELSE 'N';
 PEX_FLAG1 /A1     = IF  PEX_FLAG EQ 'Y' THEN 'Y' ELSE 'N';
 PEX_FLAG2 /A1     = IF PEX_FLAG EQ 'Y' AND PEX_FLAG1 EQ 'Y'  THEN 'Y' ELSE 'N';
 PEX_FLAG3 /A1     = IF PEX_FLAG2 EQ 'Y' AND PEX_FLAG NE LAST PEX_FLAG THEN 'Y' ELSE 'N';
 PEX_CNT2  /D12CS  = IF PEX_FLAG3 EQ 'Y' THEN PEXG_ISS ELSE 0;
 NPEX_FLAG5/A1     = IF TKT_NUM NE LAST TKT_NUM THEN 'Y' ELSE
                     IF TKT_NUM EQ LAST TKT_NUM AND EX_FLAG NE LAST EX_FLAG THEN 'Y' ELSE  'N'  ;
 NPEX_CNT2 /D12CS  = IF NPEX_FLAG5 EQ 'Y' THEN PEXG_ISS ELSE 0;
 PEX_CNT   /D12CS  = IF NPEX_CNT2 EQ 0 AND PEX_CNT2 NE 0 THEN PEX_CNT2 ELSE NPEX_CNT2;
OFARE2/D12.2C = IF  (EXCHG_SALE EQ ' ') THEN FARE ELSE ADDCOLLECT;

END
-*
TABLE FILE EXHOLD3
PRINT TKT_NUM
 PASSNGR_NAME  
 TKT_DATE  
 FST_DPT_DATE  
 EX_FLAG  
 TRN_DT    
 AP_DAYS  
 FARE  
 C_ITIN  
 ADD_COLL 
 PNLTY_AMT  
 TKT_SORT 
 DOC_NUMBER
-*
-* RBaker 3/02/2016 - add DOC_TYPE for new logic in EX_CNT define.
 DOC_TYPE
-* RBaker 3/04/2016 - add EXCHG_SALE and ADDCOLLECT for determining 'OUT OF POCKET EXPENSES' or OFARE.
  EXCHG_SALE
  ADDCOLLECT
-*
 EX_FLAG
 NET_TKT_CNT
 PNR_LOCATOR
 TKT_PURCH
 EXG_ISS
 PEXG_ISS
 PEX_FLAG
 PEX_FLAG1
 PEX_FLAG2
 PEX_FLAG3
 NPEX_FLAG5
 PEX_CNT
 NPEX_CNT2
 IDOM
 TKT_NUM
 OFARE2
-*BY KEY
BY XPSNGR_NM 
BY TKT_NUM 
BY KEY
BY TRN_DATE
ON TABLE HOLD AS EXHOLD5
END
-RUN

DEFINE FILE EXHOLD5
OFARE/D12.2C = IF (TKT_NUM EQ LAST TKT_NUM) AND (EX_FLAG EQ 'P') THEN OFARE2 ELSE
               IF (TKT_NUM NE LAST TKT_NUM) THEN OFARE2 ELSE 0;
END
TABLE FILE EXHOLD5
PRINT TKT_NUM
 PASSNGR_NAME  
 TKT_DATE  
 FST_DPT_DATE  
 EX_FLAG  
 TRN_DT    
 AP_DAYS  
 FARE  
 C_ITIN  
 ADD_COLL 
 PNLTY_AMT  
 TKT_SORT 
 DOC_NUMBER
 DOC_TYPE
 EXCHG_SALE
 ADDCOLLECT
 EX_FLAG
 NET_TKT_CNT
 PNR_LOCATOR
 TKT_PURCH
 EXG_ISS
 PEXG_ISS
 PEX_FLAG
 PEX_FLAG1
 PEX_FLAG2
 PEX_FLAG3
 NPEX_FLAG5
 PEX_CNT
 NPEX_CNT2
 IDOM
 TKT_NUM
 OFARE2
 OFARE
 OFARE AS 'TOFARE'
 KEY
 TRN_DATE
BY XPSNGR_NM 
BY TKT_NUM
BY EX_FLAG
ON TABLE HOLD AS EXHOLD6
END
-RUN

TABLE FILE EXHOLD6
SUM TOFARE
BY PASSNGR_NAME
ON TABLE HOLD AS RANKHLD
END
-RUN
 


-SET &&RANK_METH = 'TOFARE';
-SET &&RANK_LIMIT = 500;

TABLE FILE RANKHLD
SUM  TOFARE
RANKED BY HIGHEST &&RANK_METH
BY PASSNGR_NAME
ON TABLE HOLD AS RNKHLD2
END
-RUN


 

DEFINE FILE RNKHLD2
  DRANK/D9 = RANK;
  ARANKX/A11 = FTOA(DRANK, '(D9)', 'A11');
  ARANK/A9 = EDIT(ARANKX,'$$999999999');
  LIST/D9 = (LAST LIST + 1);
  CRANKX/A11 = FTOA(LIST, '(D9)', 'A11');
  CRANK/A9 = EDIT(CRANKX,'$$999999999');
  RANK_VALUE/A9 = IF &&RANK_LIMIT EQ 0 THEN ARANK ELSE 
                  IF LIST GT &&RANK_LIMIT THEN 'ALL OTHER' ELSE 
                  CRANK;
  RANK_VAL/A9 = IF &&RANK_LIMIT EQ 0 THEN ARANK ELSE
                IF RANK GT &&RANK_LIMIT THEN 'ALL OTHER' ELSE
                ARANK;
  RANK_LAB1/A60 = IF RANK_VAL NE 'ALL OTHER' THEN &&RANK_LABEL1
                  ELSE 'ALL OTHER';
  RANK_LABEL1/A60 = IF RANK_VALUE NE 'ALL OTHER' THEN &&RANK_LABEL1
                      ELSE ' ';
  RANK_LABEL2/A60 = IF RANK_VALUE NE 'ALL OTHER' THEN &&RANK_LABEL2
                      ELSE ' ';
  RANK_LABEL3/A60 = IF RANK_VALUE NE 'ALL OTHER' THEN &&RANK_LABEL3
                      ELSE ' ';
END
-RUN

 
TABLE FILE RNKHLD2
SUM TOFARE
    RANK_VALUE
    RANK_LABEL1
BY PASSNGR_NAME
ON TABLE HOLD AS RNKHLD3
END
-RUN
 




DEFINE FILE RNKHLD3
PAX_NM/A33 = IF RANK_VALUE NE 'ALL OTHER' THEN PASSNGR_NAME ELSE 'ALL OTHER';
END
TABLE FILE RNKHLD3
SUM RANK_VALUE RANK_LABEL1
BY PAX_NM AS 'PASSNGR_NAME'
ON TABLE HOLD AS RNKHLD4
END
-RUN





TABLE FILE EXHOLD6
SUM EXG_ISS AS 'TFEXCH' PEXG_ISS AS 'TPEXCH' FARE AS 'TFARE'
    PNLTY_AMT AS 'TPNLTY' ADD_COLL AS 'TADDCOLL' 
BY PASSNGR_NAME
BY TKT_SORT
BY TRN_DATE
ON TABLE HOLD AS EXHOLD7
END
-RUN

MATCH FILE EXHOLD7
PRINT TFEXCH
      TPEXCH
      TFARE
      TPNLTY
      TADDCOLL
      TKT_SORT
      TRN_DATE
BY PASSNGR_NAME
ON TABLE HOLD
RUN
FILE RNKHLD4
SUM 
    RANK_VALUE
    RANK_LABEL1
BY PASSNGR_NAME
AFTER MATCH HOLD AS XONE OLD-OR-NEW
END
-RUN



DEFINE FILE XONE
RNK_VAL/A9 = IF RANK_VALUE EQ ' ' THEN 'ALL OTHER' ELSE RANK_VALUE;
END
TABLE FILE XONE
PRINT TFEXCH
      TPEXCH
      TFARE
      TPNLTY
      TADDCOLL
      TKT_SORT
      TRN_DATE 
      RNK_VAL AS 'RANK_VALUE'
      RANK_LABEL1
BY PASSNGR_NAME
ON TABLE HOLD AS XTWO
END
-RUN



MATCH FILE EXHOLD6
PRINT TKT_NUM
 TKT_DATE  
 FST_DPT_DATE  
 EX_FLAG  
 TRN_DT    
 AP_DAYS  
 FARE  
 C_ITIN  
 ADD_COLL 
 PNLTY_AMT  
 DOC_NUMBER
 DOC_TYPE
 EX_FLAG
 EXCHG_SALE
 ADDCOLLECT
 EX_FLAG
 NET_TKT_CNT
 PNR_LOCATOR
 TKT_PURCH
 TRN_DATE
 EXG_ISS
 PEXG_ISS
 PEX_FLAG
 PEX_FLAG1
 PEX_FLAG2
 PEX_FLAG3
 NPEX_FLAG5
 PEX_CNT
 NPEX_CNT2
 IDOM
 TKT_NUM
 KEY
 TRN_DATE
 OFARE
BY  PASSNGR_NAME  
BY TKT_SORT
ON TABLE HOLD
RUN
FILE XTWO
SUM TFEXCH
    TPEXCH
    TFARE
    TPNLTY
    TADDCOLL
    RANK_VALUE
    RANK_LABEL1
BY  PASSNGR_NAME  
BY TKT_SORT
AFTER MATCH HOLD AS FINALHLD OLD-OR-NEW
END
-RUN

 

 

-*
-* START 
-* RBaker 2/29/2016 Need to calulate the median for Advance Purchase Days
-*
-* Calulate median BY PASSNGR_NAME
-*
TABLE FILE FINALHLD
SUM CNT.AP_DAYS
BY PASSNGR_NAME
PRINT AP_DAYS AS 'MEDIAN'
 COMPUTE BYFIELDS /A33 = PASSNGR_NAME ;  
 COMPUTE M_LIST   /I5  = IF BYFIELDS EQ LAST BYFIELDS THEN M_LIST + 1 ELSE 1;
         M1       /I4  = INT(CNT.AP_DAYS + 1) / 2;  
 COMPUTE M2       /I4  = INT(CNT.AP_DAYS + 2) / 2;  
 COMPUTE OK       /I1  = (M_LIST EQ M1) OR (M_LIST EQ M2);
         DOC_TYPE
         TKT_NUM
BY PASSNGR_NAME
BY AP_DAYS
-*
-* RBaker 3/4/2016 Added the WHERE to excludes records based on the same logic 
-*                  as EX_CNT below.
WHERE TKT_NUM NE LAST TKT_NUM AND DOC_TYPE NE '1'
-*
IF TOTAL OK IS TRUE
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS MEDIAN_HOLD
END
-RUN
-*
TABLEF FILE MEDIAN_HOLD
 SUM AVE.MEDIAN AS 'Median_APD'
  COMPUTE JKEY/A1 = 'A';
BY PASSNGR_NAME
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS MEDIAN_DATA FORMAT FOCUS INDEX PASSNGR_NAME
END
-RUN
-*
-* Calulate median for all Advance Purchase Days for all passengers
-*
TABLE FILE FINALHLD
SUM CNT.AP_DAYS
PRINT AP_DAYS AS 'TOT_MEDIAN'
 COMPUTE M_LIST/I5 = M_LIST + 1;
         M1    /I4 = INT(CNT.AP_DAYS + 1) / 2;          
 COMPUTE M2    /I4 = INT(CNT.AP_DAYS + 2) / 2;          
 COMPUTE OK    /I1 = (M_LIST EQ M1) OR (M_LIST EQ M2);  
 BY AP_DAYS    
-*
-* RBaker 3/4/2016 Added the WHERE to excludes records based on the same logic 
-*                  as EX_CNT below.
WHERE TKT_NUM NE LAST TKT_NUM AND DOC_TYPE NE '1'
-*
IF TOTAL OK IS TRUE
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS MEDIAN_TOTAL
END
-RUN
-*
TABLE FILE MEDIAN_TOTAL
 SUM AVE.TOT_MEDIAN AS 'TOTAL_MEDIAN'
    COMPUTE JKEY/A1 = 'A';
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS MEDIAN_TOTAL FORMAT FOCUS INDEX JKEY
END
-RUN
-*

JOIN CLEAR *
JOIN LEFT_OUTER PASSNGR_NAME IN FINALHLD TO PASSNGR_NAME IN MEDIAN_DATA  AS J1
JOIN LEFT_OUTER JKEY         IN FINALHLD TO JKEY         IN MEDIAN_TOTAL AS J2
-*
-* RBaker 2/29/2016 Need to calulate the median for Advance Purchase Days
-* END 
-*
DEFINE FILE FINALHLD  
 NOWTOD   /A8 WITH TKT_NUM = HHMMSS (NOWTOD);
 XT_DTE   /A8  = EDIT(TKT_DATE);
 XPSNGR_NM/A10 = EDIT(PASSNGR_NAME, '9999999999');
 TSORT    /A10 = EDIT(TKT_SORT, '9999999999');
 FSORT    /A28 = IF DOC_NUMBER EQ '0000000000' THEN XT_DTE||TKT_NUM||DOC_NUMBER ELSE XT_DTE||DOC_NUMBER||TSORT;
 XTS_FLAG /A1  = IF XPSNGR_NM NE LAST XPSNGR_NM THEN 'Y' ELSE 'N';
-*
-* RBaker 3/02/2016 changing the EX_CNT logic per Steve Cords
-* old logic
-* EX_CNT /D8 = IF TKT_NUM NE LAST TKT_NUM AND AP_DAYS NE 0 THEN 1 ELSE 0;
-*
-* new logic
 EX_CNT   /D8 = IF TKT_NUM NE LAST TKT_NUM AND DOC_TYPE NE '1' THEN 1 ELSE 0;
-*
-* RBaker 3/04/2016 Creating AVG_APD to calculate the average **AVG
 AVG_APD  /D9   = IF EX_CNT EQ 1 THEN AP_DAYS ELSE 0;
-*
 EX_CNT1  /D8   = IF EX_FLAG EQ 'F' THEN 1 ELSE
                  IF EX_FLAG EQ 'P' AND TKT_NUM NE LAST TKT_NUM THEN 1 ELSE 0;
-* PEN_AMT/D12.2CS = IF EXG_ISS EQ 1 OR PEXG_ISS EQ 1 THEN PNLTY_AMT ELSE 0;
 FLAG     /A5   = 'TOTAL';
-*
-* RBaker 3/10/2016 Change date format from YYYY/MM/DD to MM/DD/YYYY
 DEPART_DATE/MDYY = FST_DPT_DATE;
 TICKET_DATE/MDYY = TKT_DATE;
-*
END
-IF &&DRILLED_RUN EQ 'N' GOTO SKIP_DRIL;
-************************************************************
-* INCLUDE PROGRAM TO GEN WHERE STATEMENTS
-************************************************************
-SET &&DRILLRPT = 'FINALHLD';
-INCLUDE DRILWHRS
-SKIP_DRIL
-************************************************************
 
-*
-SET &&PAHDR  = IF '&&OUTFMT.EVAL' EQ 'PDF' OR 'PPT' OR 'COM' THEN 'HEADAIR' ELSE 'HDREXLS'; 
-SET &&PASTYD = IF '&&OUTFMT.EVAL' NE 'PDF' OR 'PPT' OR 'COM' THEN 'DTEXL'   ELSE &&DTSTY;
-RUN



TABLE FILE FINALHLD
-INCLUDE &&PAHDR
"&&SUBHEAD"
-IF &&PAHDR EQ 'HDREXLS' GOTO NOSPC;
"</2" 
-NOSPC;
PRINT PASSNGR_NAME AS 'PASSENGER,NAME'
TKT_NUM AS 'TICKET,NUMBER'
PNR_LOCATOR AS 'PNR' TICKET_DATE AS 'ISSUE,DATE'
DEPART_DATE AS 'DEPART,DATE'
EX_CNT NOPRINT
EX_FLAG AS 'EXCHANGE,FLAG' EXCHG_SALE NOPRINT  TRN_DT AS 'EXCHANGE,DATE'
CNT.MEDIAN NOPRINT MEDIAN NOPRINT AP_DAYS AS 'ADVANCE,PURCHASE,DAYS'
TOTAL_MEDIAN NOPRINT FARE AS 'TICKET,PRICE'
C_ITIN AS 'ITINERARY' 
ADD_COLL AS 'ADD,COLLECT'  TKT_PURCH NOPRINT AVG_APD NOPRINT 
PNLTY_AMT AS 'FORFEIT/PENALTY,AMOUNT' 
OFARE AS 'OUT OF,POCKET,EXPENSE'
EXG_ISS AS 'FULL,EXCHANGE,CNT'
PEX_CNT AS 'PARTIAL,EXCHANGE,CNT'

BY RANK_VALUE NOPRINT  BY FLAG NOPRINT  BY PASSNGR_NAME NOPRINT 
BY FSORT NOPRINT
ON FLAG COMPUTE */A1=' ';

ON PASSNGR_NAME COMPUTE AVG/P8= IF ((EX_CNT LT 1) AND 
            (EX_CNT GT (-1))) THEN 0 ELSE (AVG_APD/EX_CNT); 

ON PASSNGR_NAME COMPUTE MED/P8= IF CNT.MEDIAN EQ 0 THEN 
                0 ELSE MEDIAN / CNT.MEDIAN ; 
ON PASSNGR_NAME SUBTOTAL ADD_COLL PNLTY_AMT OFARE
              TKT_PURCH EXG_ISS PEX_CNT AS 'TOTAL FOR'

ON FLAG COMPUTE TTLAVG/P8= IF ((EX_CNT LT 1) AND
                (EX_CNT GT (-1))) THEN 0 ELSE (AVG_APD/EX_CNT); 

ON FLAG COMPUTE TTLMED/P8= IF CNT.MEDIAN EQ 0 THEN 
                0 ELSE TOTAL_MEDIAN / CNT.MEDIAN ; 
 
 
 




-*
-*********************************************************************
-*DATE           NAME               DESCRIPTION 
-*8/18/00      IBISTL-KR            INCLUDE WHERE STATEMENTS WHEN
-*                                  DRILLED_RUN EQ 'Y'.
-*********************************************************************
-*
-**********************************************************************
-* Where statements for Drilled Report
-**********************************************************************
-*
-IF &&DRILLED_RUN EQ 'N' GOTO SKIP_WHR;
-INCLUDE &&DRILLWHR
-SKIP_WHR
-*
-**********************************************************************
-* On Table statements for code appropriate to On Table commands
-**********************************************************************
-*
 
-GOTO SKIPIT;
-IF &&INTLDOMT EQ 2 THEN GOTO DOM;
-IF &&INTLDOMT EQ 3 THEN GOTO INTL;
-IF &&INTLDOMT EQ 1 THEN GOTO ENDINTWHR;
-DOM;
WHERE IDOM EQ 'D' 
-GOTO ENDINTWHR;
-INTL
WHERE IDOM EQ 'I'
-ENDINTWHR;   
 
-SKIPIT
-*ON TABLE COLUMN-TOTAL
-INCLUDE FOOTERSM
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT

-**********************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT 
-*                                  WITH AN INCLUDE
-**********************************************************************
ON TABLE SET STYLE *
-INCLUDE &&PASTYD

-**********************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/18/00      IBISTL-KR            INCLUDE STYLESHEET PARAMS FOR 
-*                                  DRILLABLE REPORTS.
-**********************************************************************


ENDSTYLE
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN



-XXIT;
