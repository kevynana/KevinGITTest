-*=========================================================================================================================
-* program name: QueryBuilder.fex
-* This program reads data from AdhocReports and AdhocReportFields table and generate a query.
-* REPORT_TYPE: D - use PRINT command; S - use SUM command
-* QUERY_TYPE:  T - TABLE query; G - GRAPH query
-* GRAPH_TYPE:  Pie or Bar or Line etc... 
-*
-* COLUMN_TYPE: N: NON-SORT FIELD; B: BY field; H: NOPRINT BY filed, U: Underline BY fld, S: Skipline BY fld, 
-*              X: SKIPLINE AND NOPRINT sort field; Y: UNDERLINE AND NOPRINT sort field
-* OR 'H' OR 'U' OR 'S' OR 'X' OR 'Y'
-*
-* COLUMN_FMT: T-Field can be used to calculate totals; N-numeric, but not usefule for totals; A-alpha; P-percentage
-* COMPUTED: C - a computed field; D - a defined field
-*
-* Add subtotal by Report Break Level selected (&&BREAKBY.1. &&BRK_LVL.2.).
-*
-* Make changes for RANK BY TOP (a new field RANKBYTOP in adhocreport table).
-* These two fields RPT_GROUP and RANKBYTOP in adhocreport table are used to make logic, combined with the fields
-* RANBYTOP1/RANKBYTOP2/RANKMETHOD in RPT_FLDS (these portion should be coded in codegen).
-* 
-* THE VARIABLE &ADHOCRANKBYTOP contains value of RANKBYTOP in AdhocReports table.
-* GROUP+Value of RANKBYTOP from ADHOCREPROT+RPT_FLDS:RankByTop1+RankByTop2    +   	RankMethod
-*  AIR	  1     Top Travellers   (ABTOPTVL)            YES           NO          	(Fare Paid, Tickets and Miles)
-*  AIR	  2     Top Market Share (ABMKT299)            YES(emb,rte)  YES(carrier)	(Markets, Amount and Miles)
-*  CAR	  1     Top Car Renters                        YES(passenger)NO     	(Days and Amount)
-*  CAR	  2     Top Car By City  (ABTOPCAR)            YES(CityName) NO (vendor?)  	(Days and Amount)
-*  HTL	  1     Top Hotel Renters                      YES           NO     	(Days and Amount)
-*  HTL	  2     Top Hotel By City(ABTOPHTL)            YES(CITY)     YES(htlName)	(Days and Amount)
-*  HTL	  3     Top Hotel By Chain                     YES           NO     	(Days and Amount)
-*=========================================================================================================================
-*  Date        Author       Modification
-*  01/05/2012  GSE          Added code to allow PowerPoint format graphs
-*  06/12/2013  JK           Expanded on which header to use based upon print or sum verb
-*  8/20/13     JK           Updated grandtotal to use summarize instead of column-total
-* 07/27/15 - DEB - S-10299 COMMENTED OUT SET &ECHO=ALL
-* 08/13/2016 LSI S-20631 Added EMP_ID field TO ADHOC
-**************************************************************************************************************************
-INCLUDE SETECHO 
-*-SET &ECHO=ALL;
SET TEMPERASE = OFF
-SET &&AROLL_DSC = IF &&BRK_LVL LT 10 THEN 'AROLL_DSC' | EDIT(&&BRK_LVL,'$9') ELSE 'AROLL_DSC' | EDIT(&&BRK_LVL,'99');
-SET &&AROLL_LEV = IF &&BRK_LVL LT 10 THEN 'AROLL_LEV' | EDIT(&&BRK_LVL,'$9') ELSE 'AROLL_LEV' | EDIT(&&BRK_LVL,'99');

TABLE FILE ADHOCREPORTS
PRINT REPORT_TYPE QUERY_TYPE 
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE 
END
-RUN
-READ SAVE &REPORTTYPE.1. &QUERYTYPE.1.

-SET &VERB = IF &QUERYTYPE EQ 'T' AND &REPORTTYPE EQ 'D' THEN 'PRINT ' 
- ELSE IF &QUERYTYPE EQ 'T' AND &REPORTTYPE EQ 'S' THEN 'SUM '
- ELSE IF &QUERYTYPE EQ 'G' THEN 'SUM';

-SET &&QVERB = &VERB;

-IF &&RPTGRP NE 'AIR' THEN GOTO NoExtrJob;
-*-IF '&&UNAME.EVAL' EQ 'lusheng' THEN GOTO AVIEW0SM2;
EX AVIEW0SM
-RUN

-GOTO NoExtrJob;
-AVIEW0SM2
-*EX AVIEW0SM_LS
-RUN

-NoExtrJob

-SET &ADHOCQUERY = &&WEB_PATH || 'ADHOCQUERY.FEX';
FILEDEF ADHOCQUERY DISK &ADHOCQUERY
-RUN
-WRITE ADHOCQUERY 
-CLOSE ADHOCQUERY 

TABLE FILE ADHOCREPORTS
PRINT REPORT_TYPE QUERY_TYPE GRAPH_TYPE SUBTOTALS GRANDTOTALS RPT_GROUP RANKBYTOP
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE AS QUERYINF
END
-RUN
-IF &LINES EQ 0 THEN GOTO XXXIT;

-READ QUERYINF &REPORTTYPE.1. &QUERYTYPE.1. &GRAPHTYPE.20. &SUBTOTALS.6. &GRANDTOTALS.6. &RPTGROUP.3. &ADHOCRANKBYTOP.6.

-SET &QUERY = IF &QUERYTYPE EQ 'T' THEN 'TABLE FILE &&RPT_HOLD.EVAL' ELSE 'GRAPH FILE &&RPT_HOLD.EVAL';
-SET &VERB = IF &QUERYTYPE EQ 'T' AND &REPORTTYPE EQ 'D' THEN 'PRINT ' 
- ELSE IF &QUERYTYPE EQ 'T' AND &REPORTTYPE EQ 'S' THEN 'SUM '
- ELSE IF &QUERYTYPE EQ 'G' THEN 'SUM';


-*TABLE FILE STANDARDREPORTFIELDS
-*PRINT COLUMN_NAME COLUMN_TITLE COLUMN_FMT COMPUTED
-*WHERE USE_PARM EQ '&&VIEW.EVAL'
-*ON TABLE HOLD AS STANDFLD FORMAT FOCUS INDEX COLUMN_NAME
-*END
-*-RUN

-*TABLE FILE ADHOCREPORTFIELDS
-*PRINT *
-*WHERE INST_KEY EQ &&IKEY
-*ON TABLE HOLD AS SELCOLUMNS FORMAT FOCUS INDEX COLUMN_NAME
-*END
-*-RUN

-*JOIN COLUMN_NAME IN ADHOCREPORTFIELDS TO COLUMN_NAME IN STANDFLD AS J1
-*TABLE FILE ADHOCREPORTFIELDS
-*PRINT COLUMN_NAME COLUMN_TYPE COLUMN_TITLE STANDFLD.COLUMN_FMT AS 'COLUMN_FMT' COMPUTED
-*BY COLUMN_ORDER 
-*WHERE INST_KEY EQ &&IKEY
-*ON TABLE HOLD AS ALLCOLUMNS FORMAT FOCUS
-*END
-*-RUN

TABLE FILE ADHOCREPORTFIELDS
PRINT *
WHERE INST_KEY EQ &&IKEY
ON TABLE HOLD AS SELCOLUMNS FORMAT FOCUS INDEX COLUMN_NAME
END
-RUN

JOIN COLUMN_NAME IN SELCOLUMNS TO ALL COLUMN_NAME IN STANDARDREPORTFIELDS AS J1

TABLE FILE SELCOLUMNS
PRINT INST_KEY USE_PARM COLUMN_ORDER COLUMN_NAME COLUMN_TITLE COLUMN_TYPE COLUMN_FMT COMPUTED
WHERE USE_PARM EQ '&&VIEW.EVAL'
ON TABLE HOLD AS ALLCOLUMNS FORMAT FOCUS
END
-RUN

-SET &SubtotalColumns = ' ';
-SET &GrandtotalColumns = ' ';
-SET &RANKSubtotalColumns = '';
-*SubtotalLine1 for subtotal by hierarchy
-SET &SubtotalLine1 = '';
-*SubtotalLine2 for subtotal by first selected sort column
-SET &SubtotalLine2 = '';
-SET &GrandTotalLIne = IF &GRANDTOTALS EQ 0 THEN 'ON TABLE NOTOTAL' ELSE '';

-SET &TotalByLines = 0;
-SET &TotalDetailLines = 0;

-IF &SUBTOTALS EQ 0 AND &GRANDTOTALS EQ 0 THEN GOTO NoSubtotals;
-*get total and subtotal fields, 'P' fmt can not be totalled.
DEFINE FILE ALLCOLUMNS
  TOTAL_FLAG/A1 = IF COLUMN_FMT EQ 'P' THEN 'N' ELSE 'Y'; 
END
TABLE FILE ALLCOLUMNS
PRINT COLUMN_NAME TOTAL_FLAG 
BY COLUMN_ORDER NOPRINT
-*WHERE COLUMN_FMT EQ 'T' OR COLUMN_NAME LIKE 'PCT%'
WHERE COLUMN_FMT EQ 'T' OR COLUMN_FMT EQ 'N' OR COLUMN_FMT EQ 'P'
ON TABLE SAVE AS TOTCOLS
END
-RUN

-IF &LINES EQ 0 THEN GOTO NoSubtotals;
-SET &CNT = &LINES;

-REPEAT ALLTOTALS &CNT TIMES
-READ TOTCOLS NOCLOSE &COLUMNNAME.20. &TFLAG.1.

-SET &GrandtotalColumns = IF '&TFLAG.EVAL' EQ 'Y' THEN '&GrandtotalColumns.EVAL ' | &COLUMNNAME ELSE &GrandtotalColumns;
-SET &SubtotalColumns = '&SubtotalColumns.EVAL ' | &COLUMNNAME ;
-SET &RANKSubtotalColumns = IF '&TFLAG.EVAL' EQ 'Y' THEN '&RANKSubtotalColumns.EVAL ' | &COLUMNNAME ELSE &RANKSubtotalColumns ;

-ALLTOTALS
-CLOSE TOTCOLS;
-* -SET &GrandTotalLIne = IF &GRANDTOTALS EQ 0 THEN 'ON TABLE NOTOTAL' ELSE  'ON TABLE COLUMN-TOTAL ' | '&GrandtotalColumns.EVAL';
-SET &GrandTotalLIne = IF &GRANDTOTALS EQ 0 THEN 'ON TABLE NOTOTAL' ELSE  'ON TABLE SUMMARIZE ' | '&GrandtotalColumns.EVAL';
-* -SET &GrandTotalLIne = IF &GRANDTOTALS EQ 0 THEN 'ON TABLE NOTOTAL' ELSE  'ON TABLE SUMMARIZE ';

-NoSubtotals

-TYPE &GrandTotalLIne 


-*retrieve non sort columns , fmt 'I' was eliminated.
TABLE FILE ALLCOLUMNS
PRINT COLUMN_NAME COLUMN_TYPE COLUMN_TITLE COLUMN_FMT COMPUTED
BY COLUMN_ORDER 
WHERE COLUMN_TYPE EQ 'N' OR 'I' OR 'P'
ON TABLE SAVE AS COLUMNS
END
-RUN

-SET &CNT = &LINES;
-SET &TotalLines = &LINES;
-SET &TotalDetailLines = &LINES;

-SET &INDX = 1;
-SET &CORDER = 1;

-****** COLUMNTYPE, COLUMNFMT COMPUTED SHOULD STORE IN THE ARRAYS. **********

-REPEAT ToEndQuery1 &CNT TIMES 
-READ COLUMNS NOCLOSE &CORDER.11. &COLUMNNAME.20. &COLUMNTYPE.1. &COLUMNTITLE.30. &COLUMNFMT.1. &COMPUTED.1.

-SET &ORDER.&INDX = &CORDER;
-SET &COLUMN.&INDX = IF '&QUERYTYPE.EVAL' EQ 'G' AND '&COLUMNFMT.EVAL' EQ 'A' THEN 'CNT.'| '&COLUMNNAME.EVAL' 
- ELSE '&COLUMNNAME.EVAL';

-IF &COMPUTED NE 'C' THEN GOTO chkFldNames;
-INCLUDE getComputedFields
-RUN

-chkFldNames
-SET &NAMEPART1 = EDIT(&COLUMNNAME,'99999'); 
-IF '&NAMEPART1.EVAL' EQ 'AROLL' OR '&NAMEPART1.EVAL' EQ 'LEVEL' OR '&COLUMNNAME.EVAL' EQ 'EMP_ID' THEN GOTO ChangeTitle1 ELSE GOTO NoMoreFldChk;
-ChangeTitle1
-INCLUDE getAdhocColumnTitle
-RUN

-NoMoreFldChk
-TYPE &COLUMNTITLE

-SET &LEN = ARGLEN(30, &COLUMNTITLE, 'I2');
-SET &ATEMP = TRIM('B', &COLUMNTITLE, 30, ' ', 1, 'A&LEN.EVAL');
-SET &ATEMP = CTRAN(&LEN, &ATEMP,95, 44, 'A&LEN.EVAL');
-SET &COLTITLE.&INDX = '&ATEMP.EVAL';

-SET &INDX = &INDX + 1;         
-ToEndQuery1
-CLOSE COLUMNS;

-chkHierachy
-SET &ONTABLE = '';
-SET &ByIndex = &INDX;

-IF &ADHOCRANKBYTOP GT 0 THEN GOTO GetSortCols;

-*As all adhoc reports have subtotal selected in report settings
-*check if hierarchy level or hierarchy description are selected as columns in adhoc
TABLE FILE ALLCOLUMNS
PRINT COLUMN_NAME COLUMN_TYPE COLUMN_TITLE COLUMN_FMT
BY COLUMN_ORDER
WHERE COLUMN_NAME EQ '&&AROLL_LEV.EVAL' OR COLUMN_NAME EQ '&&AROLL_DSC.EVAL'
WHERE COLUMN_TYPE EQ 'B' OR 'H' OR 'U' OR 'S' OR 'X' OR 'Y'
ON TABLE SAVE
END
-RUN

-SET &TotalByLines = &LINES;

-IF &LINES GT 0 THEN GOTO GetSortCols;
-*write Report Break Level without print as the column is NOT selected

-SET &ORDER.&INDX = &CORDER;
-SET &COLUMN.&INDX = 'BY &&AROLL_DSC.EVAL NOPRINT';
-SET &COLTITLE.&INDX = '';
-SET &INDX = &INDX + 1;  
-*-SET &SubtotalLine1 = 'ON &&AROLL_DSC.EVAL RECOMPUTE MULTILINES &SubtotalColumns.EVAL ' ;
-SET &SubtotalLine1 = 'ON &&AROLL_DSC.EVAL RECOMPUTE MULTILINES &SubtotalColumns.EVAL AS ' | '''Total For ''' ;
-SET &TotalLines = &TotalLines + 1;

-GetSortCols
-* sort columns, sort columns can not have computed fields
TABLE FILE ALLCOLUMNS
PRINT COLUMN_NAME COLUMN_TYPE COLUMN_TITLE COLUMN_FMT 
BY COLUMN_ORDER 
WHERE COLUMN_TYPE EQ 'B' OR 'H' OR 'U' OR 'S' OR 'X' OR 'Y' AND NOT COMPUTED IN ('C','D')
ON TABLE SAVE AS BYCOLUMN
END
-RUN

-SET &CNT = &LINES;
-SET &TotalLines = &TotalLines + &LINES;
-SET &TotalByLines = &TotalByLines + &LINES;
-SET &STARTX = &INDX;

-******?????????? COLUMNNAME, COLUMNTYPE, COLUMNFMT SHOULD STORE IN THE ARRAYS. **********

-SET &CNT2 = 1;
-REPEAT ToEndQuery2 &CNT TIMES 
-READ BYCOLUMN NOCLOSE &CORDER.11. &COLUMNNAME.20. &COLUMNTYPE.1. &COLUMNTITLE.30. &COLUMNFMT.1. 

-SET &ORDER.&INDX = &CORDER;
-SET &COLUMN.&INDX = IF &QUERYTYPE EQ 'T' THEN 'BY &COLUMNNAME.EVAL' ELSE 'ACROSS &COLUMNNAME.EVAL';
-**********************************************************************************************************
-*Updated 
-**********************************************************************************************************
-SET &BYCOLUMNX.&INDX = IF '&QUERYTYPE.EVAL' EQ 'G' THEN '&COLUMN.&INDX' ELSE 'BY &COLUMNNAME.EVAL';
-**********************************************************************************************************

-SET &COLUMN.&INDX = IF &QUERYTYPE EQ 'G' THEN &COLUMN.&INDX
- ELSE IF &COLUMNTYPE EQ 'B' THEN 'BY &COLUMNNAME.EVAL'
- ELSE IF &COLUMNTYPE EQ 'H' THEN 'BY &COLUMNNAME.EVAL NOPRINT' 
- ELSE IF &COLUMNTYPE EQ 'U' THEN 'BY &COLUMNNAME.EVAL UNDER-LINE' 
- ELSE IF &COLUMNTYPE EQ 'S' THEN 'BY &COLUMNNAME.EVAL SKIP-LINE' 
- ELSE IF &COLUMNTYPE EQ 'X' THEN 'BY &COLUMNNAME.EVAL SKIP-LINE NOPRINT' 
- ELSE IF &COLUMNTYPE EQ 'Y' THEN 'BY &COLUMNNAME.EVAL UNDER-LINE NOPRINT'  ELSE &COLUMN.&INDX;
-**********************************************************************************************************

-SET &NAMEPART1 = EDIT(&COLUMNNAME,'99999'); 
-IF '&NAMEPART1.EVAL' EQ 'AROLL' OR '&NAMEPART1.EVAL' EQ 'LEVEL' OR '&COLUMNNAME.EVAL' EQ 'EMP_ID' THEN GOTO ChangeTitle2 ELSE GOTO NoFldChk2;
-ChangeTitle2
-INCLUDE getAdhocColumnTitle
-RUN
-NoFldChk2

-SET &LEN = ARGLEN(30, &COLUMNTITLE, 'I2');
-SET &ATEMP = TRIM('B', &COLUMNTITLE, 30, ' ', 1, 'A&LEN.EVAL');
-SET &ATEMP = CTRAN(&LEN, &ATEMP,95, 44, 'A&LEN.EVAL');
-SET &COLTITLE.&INDX = '&ATEMP.EVAL';

-*-SET &ONTABLE = IF &SUBTOTALS EQ 1 AND &CNT2 EQ 1 THEN 'ON ' | &COLUMNNAME || ' SUBTOTAL  MULTILINES ' ELSE &ONTABLE;
-SET &ONTABLE = IF &SUBTOTALS EQ 1 AND &CNT2 EQ 1 THEN 'ON ' | &COLUMNNAME || ' RECOMPUTE  MULTILINES ' ELSE &ONTABLE;
-SET &CNT2 = &CNT2 + 1;
-SET &INDX = &INDX + 1;         
-ToEndQuery2
-CLOSE BYCOLUMN;

-**** Start - added for rank by top *********************************************************************************************
-IF &ADHOCRANKBYTOP EQ 0 THEN GOTO SkipFFormat;
-SET &SORTFLD = &BYCOLUMNX.&STARTX ;
-SET &LEN=ARGLEN(100, '&SORTFLD.EVAL', 'I2') - 3;
-SET &SORTFLD = SUBSTR(100,'&SORTFLD.EVAL',4,&LEN+3, &LEN, 'A&LEN.EVAL');
-SET &SORTFLD = TRIM('B', &SORTFLD, &LEN, ' ', 1, 'A&LEN.EVAL' );

-SET &INDX = &STARTX;
TABLE FILE &&RPT_HOLD
-REPEAT ALLSORTFLDS1 &TotalByLines TIMES
-SET &Q1 = &BYCOLUMNX.&INDX ;
&Q1
-SET &INDX = &INDX + 1;
-ALLSORTFLDS1
WHERE RECORDLIMIT EQ 1
ON TABLE HOLD AS HOLDXXX
END
-RUN

-SET &INDX = &STARTX;
-SET &NAMEWHERE = 'IF NAME EQ '; 
-REPEAT ALLSORTFLDS2 &TotalByLines TIMES
-SET &SORTFLD = &BYCOLUMNX.&INDX ;
-SET &LEN=ARGLEN(100, '&SORTFLD.EVAL', 'I2') - 3;
-SET &SORTFLD = SUBSTR(100,'&SORTFLD.EVAL',4,&LEN+3, &LEN, 'A&LEN.EVAL');
-SET &SORTFLD = TRIM('B', &SORTFLD, &LEN, ' ', 1, 'A&LEN.EVAL' );
-SET &NAMEWHERE = IF &INDX EQ &STARTX THEN &NAMEWHERE | '&SORTFLD.EVAL' ELSE &NAMEWHERE | ' OR ' | '&SORTFLD.EVAL' ;
-SET &INDX = &INDX + 1;
-ALLSORTFLDS2
-TYPE &NAMEWHERE

-*retrieve no print fields and load into global variable
TABLE FILE ADHOCREPORTFIELDS
BY COLUMN_NAME 
WHERE INST_KEY EQ &&IKEY AND COLUMN_TYPE EQ 'H'
ON TABLE SAVE AS NPNTCOLS 
END
-RUN
-SET &&NOPRINTLINES = &LINES;
-IF &LINES EQ 0 THEN GOTO NONOPRINT;

-SET &CNT = 1;
-REPEAT ALLNOPRINT &&NOPRINTLINES TIMES
-READ NPNTCOLS NOCLOSE &COLNAME.A20.
-TYPE &COLNAME
-SET &&NPCOLNAME.&CNT = &COLNAME;
-SET &CNT = &CNT + 1;
-ALLNOPRINT
-CLOSE NPNTCOLS;
-NONOPRINT

-SET &TABLENAME = 'HOLDXXX';
TABLE FILE SYSCOLUM
PRINT NAME
      USAGE
   BY SEGNAME NOPRINT
   BY SEGNO   NOPRINT
WHERE TBNAME EQ '&TABLENAME'
&NAMEWHERE
-*WHERE NAME EQ '&SORTFLD.EVAL'
WHERE RECORDLIMIT EQ &TotalByLines
ON TABLE SAVE
ON TABLE SET HOLDLIST PRINTONLY
END
-RUN

-IF &LINES EQ 0 THEN GOTO SkipFFormat;

-SET &CNT2 = 1;
-REPEAT ALLSORTFLDS3 &TotalByLines TIMES
-READ SAVE NOCLOSE &FieldName.A66. &FldFormat.A8.
-SET &&FieldName.&CNT2 = &FieldName;
-SET &&FldFormat.&CNT2 = &FldFormat;
-TYPE FIELDNAME: &&FieldName.&CNT2 
-TYPE FORMAT:    &&FldFormat.&CNT2
-SET &CNT2 = &CNT2 + 1;
-ALLSORTFLDS3
-SkipFFormat
-**** The End - added for rank by top *******************************************************************************************

-*-SET &ONTABLE = IF &LINES EQ 0 THEN 'ON TABLE SUBTOTAL ' ELSE &ONTABLE;
-SET &ONTABLE = IF &LINES EQ 0 THEN 'ON TABLE RECOMPUTE MULTILINES ' ELSE &ONTABLE;
-SET &SubtotalLine2 = IF &SUBTOTALS EQ 0 THEN ' ' ELSE &ONTABLE | &SubtotalColumns | ' AS ' | '''TOTAL FOR ''';

-*get defined fields
TABLE FILE ALLCOLUMNS
PRINT COLUMN_NAME COLUMN_TYPE COLUMN_TITLE COLUMN_FMT COMPUTED
BY COLUMN_ORDER 
WHERE COMPUTED EQ 'D'
ON TABLE SAVE AS DEFCOLUM
END
-RUN
-SET &DEFINES = &LINES;

-SET &INDX = 1;
-REPEAT ToEndDefine &DEFINES TIMES 
-READ DEFCOLUM NOCLOSE &CORDER.11. &COLUMNNAME.20. &COLUMNTYPE.1. &COLUMNTITLE.30. &COLUMNFMT.1. &COMPUTED.1.

-SET &DORDER.&INDX = &CORDER;
-INCLUDE getDefinedFields

-SET &INDX = &INDX + 1;         
-ToEndDefine
-CLOSE DEFCOLUM;

-IF &QUERYTYPE EQ 'G' THEN GOTO GraphQuery;
-IF &ADHOCRANKBYTOP GT 0 THEN GOTO WriteRankBy;

-*Write defined fields
-WRITE ADHOCQUERY DEFINE FILE &&RPT_HOLD
-IF &DEFINES EQ 0 THEN GOTO NODEFINES;

-SET &INDX = 1;
-REPEAT Writedefine &DEFINES TIMES 
-SET &Q1 = &DCOLUMN.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' ;

-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-Writedefine

-NODEFINES
-* -SET &&PAHDR = IF &&OUTFMT NE 'PDF' OR 'PPT' THEN 'HDREXLS' ELSE 'HEADER';
-SET &&PAHDR = IF &&OUTFMT NE 'PDF' OR 'PPT' THEN 'HDREXLS' ELSE
- IF &&OUTFMT EQ 'PDF' OR 'PPT' AND &VERB EQ 'PRINT' THEN 'HEADAIR' ELSE
- IF &&OUTFMT EQ 'PDF' OR 'PPT' AND &VERB EQ 'SUM' THEN 'HEADER' ELSE 'HEADER';

-WRITE ADHOCQUERY   NOWTOD/A8 = HHMMSS (NOWTOD);
-WRITE ADHOCQUERY END

-WRITE ADHOCQUERY &QUERY 
-WRITE ADHOCQUERY " "
-WRITE ADHOCQUERY -INCLUDE &&PAHDR
-WRITE ADHOCQUERY "</2"
-IF &TotalDetailLines EQ 0 THEN GOTO :NOVERB;
-WRITE ADHOCQUERY &VERB

-:NOVERB
-*put AS 'NAME' as column-title
-SET &INDX = 1;
-REPEAT ToEndQuery3 &TotalLines TIMES 
-SET &Q1 = &COLUMN.&INDX;
-SET &Q2 = &COLTITLE.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' || ' AS ' | '''&Q2.EVAL''';

-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-ToEndQuery3

-WRITE ADHOCQUERY ON TABLE PAGE-BREAK AND SUBFOOT
-WRITE ADHOCQUERY -INCLUDE SBFOOT
-WRITE ADHOCQUERY ON TABLE SET PAGE-NUM OFF
-WRITE ADHOCQUERY ON TABLE SET STYLE *

-*-IF '&&UNAME.EVAL' NE 'lusheng' THEN GOTO NOSTYLECHK;
-SET &&PASTY = IF &&OUTFMT NE 'PDF' OR 'PPT' AND &VERB EQ 'PRINT' THEN 'DTEXL' ELSE
- IF &&OUTFMT EQ 'PDF' OR 'PPT' AND &VERB EQ 'PRINT' THEN 'DT' ELSE
- IF &&OUTFMT NE 'PDF' OR 'PPT' AND &VERB EQ 'SUM' THEN 'SMEXL' ELSE
- IF &&OUTFMT EQ 'PDF' OR 'PPT' AND &VERB EQ 'SUM' THEN 'SM' ELSE 'DT';

-*-SET &&DTSTY = IF &&DTSTY.EVAL EQ ' ' AND &VERB EQ 'PRINT' THEN 'DT'
-* - ELSE IF &&DTSTY.EVAL EQ ' ' AND &VERB EQ 'SUM' THEN 'SM' ELSE &&DTSTY;

-*-TYPE DTSTY: &&DTSTY
-*-QUIT
-*-NOSTYLECHK

-WRITE ADHOCQUERY -INCLUDE &&PASTY
-WRITE ADHOCQUERY ENDSTYLE

-WRITE ADHOCQUERY &&OUTLINE1
-WRITE ADHOCQUERY &&OUTLINE2 

-WRITE ADHOCQUERY &SubtotalLine1
-WRITE ADHOCQUERY &SubtotalLine2
-WRITE ADHOCQUERY &GrandTotalLIne
-*-WRITE ADHOCQUERY ON TABLE NOTOTAL
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN 
-CLOSE ADHOCQUERY;
-RUN
-GOTO RunAdhoc;

-*Rank by top is selected. if only &&RANK_LIMIT is selected, run AdhocRankBy; if &&RANK_LIMIT2 NE 0, run AdhocRankBy2.
-*codegen read RankByTop from rpt_flds database, and set to the variables: &&RANK_LIMIT and &&RANK_LIMIT2
-WriteRankBy
-INCLUDE ADHOCRANKBY
-RUN

-GOTO RunAdhoc;
-GraphQuery

-SET &&OUTLINE2 = IF &&OUTFMT EQ 'PDF' THEN 'FORMAT PDF' ELSE 
-                 IF &&OUTFMT EQ 'PPT' THEN 'FORMAT PPT' ELSE 'FORMAT EXL2K';

-WRITE ADHOCQUERY SET HTMLARCHIVE=ON
-WRITE ADHOCQUERY COMPOUND LAYOUT PCHOLD FORMAT &&OUTFMT
-WRITE ADHOCQUERY UNITS=IN, $
-WRITE ADHOCQUERY SECTION=section1, LAYOUT=ON, METADATA='0.5^0.5^0.5^0.5', MERGE=OFF, ORIENTATION=PORTRAIT, PAGESIZE=Letter,  $
-WRITE ADHOCQUERY PAGELAYOUT=1, NAME='Page layout 1', text='Page layout 1', TOC-LEVEL=1, BOTTOMMARGIN=0.5, TOPMARGIN=0.5, METADATA='BOTTOMMARGIN=0.5,TOPMARGIN=0.5,LEFTMARGIN=0,RIGHTMARGIN=0,', $
-WRITE ADHOCQUERY COMPONENT='graph1', TEXT='graph1', TOC-LEVEL=2, POSITION=(0.621 0.728), DIMENSION=(7.377 4.683), METADATA='Z-INDEX: 100; POSITION: absolute; WIDTH: 7.377in; HEIGHT: 4.683in; TOP: 0.728in; LEFT: 0.621in', $
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY SET COMPONENT='graph1'

-*Write defined fields
-WRITE ADHOCQUERY DEFINE FILE &&RPT_HOLD
-IF &DEFINES EQ 0 THEN GOTO gNODEFINES;

-SET &INDX = 1;
-REPEAT Writedefine &DEFINES TIMES 
-SET &Q1 = &DCOLUMN.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' ;

-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-Writedefine

-gNODEFINES
-WRITE ADHOCQUERY   NOWTOD/A8 = HHMMSS (NOWTOD);
-WRITE ADHOCQUERY END

-WRITE ADHOCQUERY &QUERY 
-WRITE ADHOCQUERY &VERB

-SET &INDX = 1;
-REPEAT ToEndQuery4 &TotalLines TIMES 
-*pust as name here
-SET &Q1 = &COLUMN.&INDX;
-SET &Q2 = &COLTITLE.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' || ' AS ' | '''&Q2.EVAL''';

-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-ToEndQuery4


-SET &GRAPHSTYLE = IF &GRAPHTYPE EQ 'Pie' THEN 'PIEMULTI'
- ELSE IF &GRAPHTYPE EQ 'Bar Chart' THEN 'VBAR'
- ELSE IF &GRAPHTYPE EQ 'Line Chart' THEN 'VLINE'



-*-WRITE ADHOCQUERY ON GRAPH SET LOOKGRAPH PIEMULTI

-WRITE ADHOCQUERY ON GRAPH SET LOOKGRAPH &GRAPHSTYLE.EVAL
-WRITE ADHOCQUERY ON GRAPH SET GRAPHEDIT SERVER
-WRITE ADHOCQUERY ON GRAPH SET BARNUMB OFF
-WRITE ADHOCQUERY ON GRAPH SET 3D OFF
-WRITE ADHOCQUERY ON GRAPH SET VZERO ON
-WRITE ADHOCQUERY ON GRAPH SET GRID ON

-WRITE ADHOCQUERY ON GRAPH HOLD AS HOLD FORMAT SVG
-*-WRITE ADHOCQUERY ON GRAPH PCHOLD FORMAT &&OUTFMT.EVAL

-WRITE ADHOCQUERY ON GRAPH SET GRAPHSTYLE *
-WRITE ADHOCQUERY setMarkerDisplay(true);
-WRITE ADHOCQUERY setConnectLineMarkers(false);
-WRITE ADHOCQUERY setConnectScatterMarkers(false);
-WRITE ADHOCQUERY setO1LabelDisplay(true);
-WRITE ADHOCQUERY setO1AxisSide(0);
-WRITE ADHOCQUERY setO1MajorGridDisplay(true);
-WRITE ADHOCQUERY setO1MajorGridStyle(0);
-WRITE ADHOCQUERY setO1MinorGridDisplay(false);
-WRITE ADHOCQUERY setAxisAssignment(0,0);
-WRITE ADHOCQUERY setSeriesType(0,0);
-WRITE ADHOCQUERY setAxisAssignment(1,0);
-WRITE ADHOCQUERY setSeriesType(1,0);
-WRITE ADHOCQUERY setY1LabelDisplay(true);
-WRITE ADHOCQUERY setY1AxisSide(0);
-WRITE ADHOCQUERY setY1MajorGridDisplay(true);
-WRITE ADHOCQUERY setY1MajorGridStyle(0);
-WRITE ADHOCQUERY setY1MinorGridDisplay(false);
-WRITE ADHOCQUERY setTextFormatPreset(getY1Label(),-1);
-WRITE ADHOCQUERY setTextFormatPattern(getY1Label(),"#.##");
-WRITE ADHOCQUERY setPieFeelerTextDisplay(1);
-WRITE ADHOCQUERY setPieLabelDisplay(0);
-WRITE ADHOCQUERY setTextFormatPreset(getPieSliceLabel(),1);
-WRITE ADHOCQUERY setRiserBorderMode(1);
-WRITE ADHOCQUERY setSeriesDefaultTransparentBorderColor(true);
-WRITE ADHOCQUERY setUseSeriesBorderDefaults(true);
-WRITE ADHOCQUERY setLegendDisplay(true);

-WRITE ADHOCQUERY setSubtitleString("&&RPT_TTL2.EVAL");
-WRITE ADHOCQUERY setTitleString("&&RPT_TTL1.EVAL");

-WRITE ADHOCQUERY setFontSizeAbsolute(getY1Title(),true);
-WRITE ADHOCQUERY setFontSizeAbsolute(getY1Label(),true);
-WRITE ADHOCQUERY setFontSizeAbsolute(getY2Title(),true);
-WRITE ADHOCQUERY setFontSizeAbsolute(getY2Label(),true);
-WRITE ADHOCQUERY setFontSizeAbsolute(getO1Title(),true);
-WRITE ADHOCQUERY setPlace(true);
-WRITE ADHOCQUERY ENDSTYLE
-WRITE ADHOCQUERY END

-SET &&OUTLINE2 = IF &&OUTFMT EQ 'PDF' THEN 'FORMAT PDF' ELSE 
-                 IF &&OUTFMT EQ 'PPT' THEN 'FORMAT PPT' ELSE 'FORMAT EXL2K';

-WRITE ADHOCQUERY TABLE FILE SYSCOLUM
-WRITE ADHOCQUERY " "
-WRITE ADHOCQUERY SUM TBNAME NOPRINT
-WRITE ADHOCQUERY ON TABLE SET PAGE-NUM NOLEAD
-WRITE ADHOCQUERY IF READLIMIT EQ 1
-*-WRITE ADHOCQUERY ON TABLE PCHOLD FORMAT PDF
-WRITE ADHOCQUERY &&OUTLINE1
-WRITE ADHOCQUERY &&OUTLINE2
-WRITE ADHOCQUERY ON TABLE SET STYLE *
-WRITE ADHOCQUERY TYPE=HEADING, IMAGE=HOLD.svg, POSITION=(0 0), $
-WRITE ADHOCQUERY TYPE=REPORT,PAGE-LOCATION=OFF,$
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY COMPOUND END
-WRITE ADHOCQUERY -RUN 
-CLOSE ADHOCQUERY;
-RUN

-RunAdhoc

-INCLUDE SetParmtime
-RUN
-SET &&RPTSUF = 'ADHOC';
-INCLUDE FDEFRPTS



EX &ADHOCQUERY
-RUN


-XXXIT

