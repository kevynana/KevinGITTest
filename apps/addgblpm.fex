-* File ADDGBLPM.FEX
-* This program assumes ttpabca0.txt and ttpabca1.txt contains same number
-* of records in the same sort order.
-*=======================================================================
-* DECLARE FILEDEFS FOR AS400 FILES USED FOR DATA EXTRACT
-*=======================================================================

FI TTPABCA0 DISK D:\TNT\TTRACKER\DATA\TTPABCA0.TXT

DEFINE FILE TTPABCA0
  ID1/I1 = 1;
  ID2/I2 = 2;
  ID3/I1 = 3;
END

TABLE FILE TTPABCA0
PRINT ROLLUP_CODE GLOBAL_PARM RPT_GROUP RPT_STREAM USE_PARM 
ID1 DESCRIP1 ID2 DESCRIP2 ID3 DESCRIP3
WHERE ROLLUP_CODE NE ' '
BY ROLLUP_CODE NOPRINT
BY GLOBAL_PARM NOPRINT
ON TABLE HOLD AS HOLD0 FORMAT FOCUS
END
-RUN

FI TTPABCA1 DISK D:\TNT\TTRACKER\DATA\TTPABCA1.TXT

DEFINE FILE TTPABCA1
  ID4/I1 = 4;
  ID5/I2 = 5;
END

TABLE FILE TTPABCA1
PRINT ROLLUP_CODE GLOBAL_PARM 
ID4 DESCRIP4 ID5 DESCRIP5 PAIR_DB CURRENCY_ENABLED USE_BREAKLVL
WHERE ROLLUP_CODE NE ' '
BY ROLLUP_CODE NOPRINT
BY GLOBAL_PARM NOPRINT
ON TABLE HOLD AS HOLD1 FORMAT FOCUS
END
-RUN

USE D:\TNT\TTRACKER\SUDATA\ROLLSET.FOC AS ROLLSET
END
-RUN





MAINTAIN FILE ROLLSET AND HOLD0 AND HOLD1

CASE TOP
FOR ALL NEXT HOLD0.ROLLUP_CODE INTO Stk0;
FOR ALL NEXT HOLD1.ROLLUP_CODE INTO Stk1;

INFER ROLLSET ROLLUP_CODE GLOBAL_PARM INTO STK2;
INFER ROLLSET ROLLUP_CODE GLOBAL_PARM ID INTO STK3;

COMPUTE CNT/I5 = 1;
COMPUTE CNT2/I2 = 1;

REPEAT STK0.FOCCOUNT
  STACK CLEAR STK2;
  COMPUTE STK2(CNT).ROLLUP_CODE      = STK0(CNT).ROLLUP_CODE;
  COMPUTE STK2(CNT).GLOBAL_PARM      = STK0(CNT).GLOBAL_PARM;
  COMPUTE STK2(CNT).RPT_GROUP        = STK0(CNT).RPT_GROUP;
  COMPUTE STK2(CNT).RPT_STREAM       = STK0(CNT).RPT_STREAM;
  COMPUTE STK2(CNT).USE_PARM         = STK0(CNT).USE_PARM;
  COMPUTE STK2(CNT).CURRENCY_ENABLED = STK1(CNT).CURRENCY_ENABLED;
  COMPUTE STK2(CNT).USE_BREAKLVL     = STK1(CNT).USE_BREAKLVL;
  COMPUTE STK2(CNT).PAIR_DB          = STK1(CNT).PAIR_DB;
  REPOSITION ROLLSET.ROLLUP_CODE;
  FOR ALL INCLUDE ROLLSET.ROLLUP_CODE FROM STK2(CNT);
  COMMIT;
  PERFORM UPDDESC;
  COMPUTE CNT = CNT + 1;
ENDREPEAT

ENDCASE

CASE UPDDESC
  STACK CLEAR STK3;
  COMPUTE CNT2 = 1;
  COMPUTE STK3(CNT2).ROLLUP_CODE = STK2(CNT).ROLLUP_CODE;
  COMPUTE STK3(CNT2).GLOBAL_PARM = STK2(CNT).GLOBAL_PARM;
  COMPUTE STK3(CNT2).ID          = STK0(CNT).ID1
  COMPUTE STK3(CNT2).DESCRIP     = STK0(CNT).DESCRIP1;
  
  COMPUTE CNT2 = 2;
  COMPUTE STK3(CNT2).ROLLUP_CODE = STK2(CNT).ROLLUP_CODE;
  COMPUTE STK3(CNT2).GLOBAL_PARM = STK2(CNT).GLOBAL_PARM;
  COMPUTE STK3(CNT2).ID          = STK0(CNT).ID2
  COMPUTE STK3(CNT2).DESCRIP     = STK0(CNT).DESCRIP2;
  
  IF STK0(CNT).DESCRIP3 NE ' ' THEN BEGIN
    COMPUTE CNT2 = 3;
    COMPUTE STK3(CNT2).ROLLUP_CODE = STK2(CNT).ROLLUP_CODE;
    COMPUTE STK3(CNT2).GLOBAL_PARM = STK2(CNT).GLOBAL_PARM;
    COMPUTE STK3(CNT2).ID          = STK0(CNT).ID3
    COMPUTE STK3(CNT2).DESCRIP     = STK0(CNT).DESCRIP3;
  ENDBEGIN

  IF STK1(CNT).DESCRIP4 NE ' ' THEN BEGIN
    COMPUTE CNT2 = 4;
    COMPUTE STK3(CNT2).ROLLUP_CODE = STK2(CNT).ROLLUP_CODE;
    COMPUTE STK3(CNT2).GLOBAL_PARM = STK2(CNT).GLOBAL_PARM;
    COMPUTE STK3(CNT2).ID          = STK1(CNT).ID4;
    COMPUTE STK3(CNT2).DESCRIP     = STK1(CNT).DESCRIP4;
  ENDBEGIN

  IF STK1(CNT).DESCRIP5 NE ' ' THEN BEGIN
    COMPUTE CNT2 = 5;
    COMPUTE STK3(CNT2).ROLLUP_CODE = STK2(CNT).ROLLUP_CODE;
    COMPUTE STK3(CNT2).GLOBAL_PARM = STK2(CNT).GLOBAL_PARM;
    COMPUTE STK3(CNT2).ID          = STK1(CNT).ID5;
    COMPUTE STK3(CNT2).DESCRIP     = STK1(CNT).DESCRIP5;
  ENDBEGIN

  REPOSITION ROLLSET.ROLLUP_CODE;
  FOR ALL INCLUDE ROLLSET.ROLLUP_CODE ROLLSET.SETDESC.ID FROM STK3;
  COMMIT;
ENDCASE
END
-RUN
