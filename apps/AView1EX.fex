-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* File AIREXTRT.FEX 
-********************************************************************
-* MODIFICAIONS:
-*2/26/07   ADDED CREDIT_CARD FOR BINGHAM REQUEST - DEB
-*7/24/07   ADDED SEG_FLAG DEFINE - DEB 
-********************************************************************
-*
-* This program extracts data for the series of basic ticket listing
-* reports.  Based on the user profile selected, one of many report
-* formats will be produced.  
-* 10/17/03  Added Prlev_2 Define JK 
-*02/02/06 - ADDED ORG_APC DV
-*05/12/06  ADDED MULTI_STP FOR CHAIRDTT - CH2M-R REPORT - STEVE 
-*10/27/08 - ADDED DEFINE FOR KILO AND KILO_DSC - JK
-*2/2/09 - Changed KILO/KILO_DSC defines to MILE/MILE_DSC
-*4/23/10 - Added MX_CC define -DV
-*3/23/11 - added AUX_TKTLS_PNR  -DV
-*7/17/13 - added FLIGHT_DURATION AND LAYOVER - JK
-*10/23/13 - ADDED FLT_RANGE - DV
-*1/9/14    UPDATED ONLINE/TRADITIONAL DEFINES TO USE ONLINE_TRADITIONAL FIELD INSTEAD OF DOD_TYPE
-*2/19/14 - Added defines for Metlife Volume by Week Reports
-*3/28/14 - Tested with different format for Fare paid for JHA TTAIR request - JK
-*4/11/14 - Tested with a stop when my user name JK 
-*5/20/14 - Added jh_dissv define to remove commas
-*5/28/14 - ADDED WF_MILE_DSC WB_MILE_KEY  DEFINE   - DEB
-*6/6/14 - ADDED FILEDEF FOR BWS_LIST   - DEB
-*7/7/14 - Added FLT_RANGE2 define - Deb
-*8/6/14   ADDED FNL_DEST_CNTY_CODE ORG_CNTRY_CODE - DEB
-*11/6/14  ADDED LEVEL6 - DEB
-*7/14/15 STORY ID - S-10254 Added define CO_MILE_DSC1 AND CO_MILE_KEY1 - JEK
-*10/14/15-JM-S-12022 - Updated field format so report fits on one page
-*2/10/16 JEM S-15448 commented out set temperase=off 
-*02/25/16 - JEM - S-13286 Updated to allow reports to sort/subtotal by id-levels
-*3/2/16 - JEM -S-16367 Updated hard coded d:\ to use &&WFSRV1.EVAL
-*5/19/16-JEM-S-19265-Added defines for lname fname 
-*07/11/16   RSB  S-20630 - New Employee ID database field
-*                          Changed LEVEL1 to EMP_ID in Defines
-*                          Added EMP_ID to Table request
-*07/15/16                  Changed LEVEL3 to EMP_ID in Define for "Nordsn-r define for specific employess"
-* 
-*8/29/16-S-24005-JEM Added define for Koairdtl that if category ne 'group' it will show level1 or if category is group it will show level5
-* 10/05/2016   RSB S-24454 - Create custom AIR file for Big Data feed
-*                            Added: FST_DEST_DEPART_DATE to determine TKT_RET_DATE
-*                                    Logic is from AVIEW0
-*                            Added: VOID_STATUS and RF_FLAG for TKT_TYPEX logic to display 'VOID'
-* 12/08/16 RSB S-27894  BIG DATA - Add penalty amount column to Air File
-*                        Added: PENALTY_AMT
-* 03/24/17 JEM S-32120 Added EXEC define and VIP_FLG define for standard reports and added VIP UDID for ABBDFAIR
-* 04/18/17-JEM-S-32937 Adding defines for new report TYCHIXNA to select fst and fnl destination 
-* 05/18/2017 - RSB - S-34801 - Add field to BIG DATA FEED for DVI and rerun all historical data
-*                               Added: DOC_NUMBER
-*09/25/2017 - DLV - S-37268 - Updated ND_APTS defines Added ND_ORG_CD ND_DST_CD DEFINES
-********************************************************************
-INCLUDE SETECHO
SET ASNAMES = ON
-SET HOLDATTR = ON;
-* SET TEMPERASE = OFF
-SET &&IDLEVELBREAK = '';


FI CERNEXEC DISK &&WFSRV1.EVAL\TNT\TTRACKER\TEMP\CERNEXEC.TXT
FILEDEF AFAMEXEC DISK &&WFSRV1.EVAL\TNT\TTRACKER\TEMP\AFAMEXEC.TXT
FILEDEF AFAMEXC2 DISK &&WFSRV1.EVAL\TNT\TTRACKER\TEMP\AFAMEXC2.TXT
FILEDEF BWS_LIST DISK &&WFSRV1.EVAL\TNT\TTRACKER\TEMP\BWS_LIST.TXT
-RUN


-SET &RPARM = &&WEB_PATH || 'RPTPARMS.fex';

-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';

-INCLUDE IDLEVROLLDEF
-RUN


DEFINE FILE &&EXTRACT
  AIR_SELECT/A25 = IF AIRLINE EQ 'UA' OR 'AA' THEN AIRLINE_NAME ELSE 'OTHER';
  BASE_FARE/D12.2CS = SEG_AMT - SEG_COM;
  BASE_FARE1/D12.2CS = SEG_AMT;
  BOOK_DT/MDYY         = RESV_DATE;
  BWS_DPT/A1 = EDIT(LEVEL2, '9$$$$$$$$$$$$$$');
  BWS_DPT1/A2 = EDIT(LEVEL2, '99$$$$$$$$$$$$$');
  CGC2/A9 = 'XXXXXXXXX';
  CHG_COD/A47 = IF LEVEL3 NE ' ' AND LEVEL2 NE ' ' THEN
                EMP_ID  || '-' || LEVEL2 || '-' ||LEVEL3 ELSE
                IF LEVEL3 EQ ' ' AND LEVEL2 NE ' ' THEN
                EMP_ID  || '-' || LEVEL2 ELSE
                IF LEVEL3 EQ ' ' AND LEVEL2 EQ ' ' THEN EMP_ID;

  CLASS_CAT/A15 = DECODE CL_CAT ('F' 'FIRST'     'P' 'PREMIUM ECONOMY'   
  			        'D' 'DEFAULT'   'B' 'BUSINESS'
  			        'E' 'ECONOMY'   'U'  'UPGRADE' 
                                ' ' 'DEFAULT');       
                                
  COM_AMTA/D12.2CS = COMM_AMT;
  COM_AMT/D12.2CS = SEG_COM;
  CNTRY/A2=SUBSTR (68, CTRY_COD, 1, 2, 68, CNTRY);
  CARD_NUM/A12=EDIT(CREDIT_CARD, '$$999999999999$$$$');
  CARD1_NUM/A4=EDIT(CREDIT_CARD, '$$$$$$$$$$$$$$9999');
  CARD_NUM1/A16=EDIT(CREDIT_CARD,'$$9999999999999999');
  CARD_NUM2/A15=EDIT(CREDIT_CARD,'$$999999999999999');
  CARD/A6 = EDIT(CREDIT_CARD,'$$999999$$$$$$$$$$');
  CCARD/A4 = EDIT(CREDIT_CARD, '$$9999$$$$$$$$$$$$');
  CCARD1/A4 =EDIT(CREDIT_CARD, '$$$$$$9999$$$$$$$$');
  CCARD2/A6 =EDIT(CREDIT_CARD, '$$999999$$$$$$$$$$');
  CCARD3/A6 =EDIT(CREDIT_CARD, '$$999999$$$$$$$$$$');
  CCARD5/A6 = EDIT(CREDIT_CARD, '$$$$$$$$$$$$999999');
  CCARD6/A6 = EDIT(CREDIT_CARD, '999999$$$$$$$$$$$$');
  CCARD7/A6 = EDIT(CREDIT_CARD, '99$$$$$$$$$$$$9999');
  CGC/A6 = EDIT(CREDIT_CARD, '999999$$$$$$$$$$$$');
  CGC1/A3 = EDIT(CREDIT_CARD, '$$$$$$$$$$$$$$$999');
  CGCARD/A18 = CGC||CGC2||CGC1;
  CRD_CRD/A2=EDIT(CREDIT_CARD, '99$$$$$$$$$$$$$$$$');
  CRDT1/A8 = EDIT(CREDIT_CARD, '$$$$$$$$$99999999');
  CRDT2/A8 = EDIT(CREDIT_CARD, '$$$$$$$$$$99999999');
  CRDT3/A10 = 'XXXXXXXXXX';
  
  BING_CRD/A18 = IF CRD_CRD EQ ' ' THEN ' ' ELSE IF CRD_CRD EQ 'AX' THEN CRDT3||CRDT1 ELSE CRDT3||CRDT2;
  DEPT_MONTH/MT        = DPT_DATE;
  DEPT_YEAR/YY         = DPT_DATE;
  DPT_MY/MTYY          = DPT_DATE;
  DIR_ALL/A3=SUBSTR (208, ADIR_ALL, 1, 3, 208, DIR_ALL);
  DIR_CP_CD/A50        = CITYPAIR.EMBARK||'-'||CITYPAIR.ROUTE;
-****************************************************************************
-* 10/3/00  IBISTL-RJ    FIELD WAS BEING TRUNCATED IN FOCUS 6, NEED TO RUN A 
-*                       SUBROUTINE IN WEBFOCUS TO TRUNCATE.
  DIR_CP_NMX/A72 = '(' || CITYPAIR.EMBARK || '/' 
           || CITYPAIR.ROUTE || ') ' | 
           EMB_APT.AIRPORT_NAME ||'---' || RTE_APT.AIRPORT_NAME;
  DIR_CP_NM/A50 = SUBSTR(72,DIR_CP_NMX,1,50,50,'A50');
  EXCH_FAREPD/D12.2 = IF (VOID_DATE EQ 0) AND (EX_FLAG EQ 'F') 
                            THEN (SEG_AMT+SEG_TAX) ELSE 0;  
  EXEC/A1 = IF DOD_TYPE EQ 'J' OR 'K' OR 'L' OR 'M' THEN 'E' ELSE ' ';
                            
  FARE_PAID/D12.2CS   = SEG_AMT + SEG_TAX;
  FLVL1/A4 = EDIT(ICODEX,'9999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
  PROJ_NBR/A8 = EDIT(EMP_ID, '$$$99999999$$$');
  ACCTG_CD/A3 = EDIT(EMP_ID, '$$$');
  EMAIL_ADR/A50 = 
  IF EMAIL_ADDR EQ '                                                  ' THEN
                   'NONE GIVEN' ELSE EMAIL_ADDR;                                
 
  GROSS_FARE/D12.2CS  = IF (RF_FLAG EQ ' ') AND
                           (EX_FLAG EQ ' ') THEN
                        SEG_AMT + SEG_TAX ELSE 0;
  IBOOK/A42 = DOD_DESC;
  
  MILE/D9      = CITYPAIR.SEG_MILES;     
  KODPT/A2 = EDIT(EMP_ID, '99$$$$$$$$$$$$$');
  KOLEV/A20 = IF CATEGORY NE 'GROUP' THEN LEVEL1 ELSE LEVEL5;
  MIR_TYPE/A24 = DECODE AUX_NON_MIR ('X' 'X-DUAL MIR'
                                    'N' 'N-NON-TICKETING MIR'
                                    'J' 'J-NON-FARING MIR'
                                    'A' 'A-NON-ACCOUNTING MIR'
                                    'B' 'B-ACCOUNTING MIR'
                                    'H' 'H-REGULAR TICKET MIR'
                                    'V' 'V-VOID'
                                    'E' 'E-ELECTRONIC TKT NETWORK'
                                    'L' 'L-ELECTRONIC TKT MIR'
                                    ' ' ' -MANUALLY ENTERED TRANS');
  MRK_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (EX_FLAG NE ' ') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (RF_FLAG NE ' ') THEN (-1) ELSE 0;
  MTG_NUM/A7 = EDIT(LEVEL3, '$$$$$$$$9999999');
  MULTI_STP/A1 = SUBSTR(208,ADIR_STP,20,20,1,'A1');
  MX_CC/A9 = IF CRD_CRD EQ 'AX' THEN 'AX' ELSE 'ALL OTHER';
  LEVEL_DESC1/A80 = &&LDESC;
  NW_LSEL/A13 = EDIT(LEVEL_DESC, '9999999999999');
  LVSEL/A80 = IF LEVEL_DESC EQ '(BOOZ-R) BOOZ & CO' THEN NW_LSEL ELSE 
              IF LEVEL_DESC EQ '(BOOZB) BOOZ & CO BUSINESS' THEN NW_LSEL ELSE
              IF LEVEL_DESC EQ '(BOOZP) BOOZ & CO PERSONAL' THEN NW_LSEL ELSE
              IF LEVEL_DESC EQ '(BOOZL) BOOZ LEISURE' THEN NW_LSEL  ELSE
            IF LEVEL_DESC EQ '(BOOZF) BOOZ & CO FINANCIAL' THEN NW_LSEL ELSE LEVEL_DESC; 
  ND_CITY_NM/A50= NDO_CTY.CITY_NAME | NDD_CTY.CITY_NAME;
-*  ND_APTS/A7 = NDO_APT.ND_ORG|' '|NDD_APT.ND_DST;
 ND_APTS/A7 = ND_ORG | ND_DST;
  NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  NET_TKT_CNT1/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  NEW_ADV_PURCH/D9    = ADV_PURCH;
  NEW_SEG_AMT/D12.2CS = SEG_AMT;
  NEW_SEG_TAX/D12.2CS = SEG_TAX;
  NEW_SEG_COUNT/D12CS = SEG_COUNT;
  NEW_SEG_DISC/D12.2CS = SEG_DISC;
  NEW_SEG_MILES/D9= SEG_MILES;
  NOREF_SEG_COUNT/D8CS = IF (RF_FLAG EQ ' ') AND
                            (EX_FLAG EQ ' ') THEN
                           NEW_SEG_COUNT ELSE 0;
  NRFLAG/A15 = IF NONREF_FLAG EQ 'N' THEN 'NON-REFUNDABLE' ELSE
               IF NONREF_FLAG EQ 'R' OR ' '  THEN 'REFUNDABLE' ELSE ' ';
  OTFLAG/A33 = ONLINE_TRADITIONAL;
  PCG_KEY/A4 = IF ICODEX CONTAINS '8563' THEN '8563' ELSE
               IF ICODEX CONTAINS '8564' THEN '8564' ELSE ' ';
  PROD_COD/A9 = EDIT(LEVEL3, '$$$$$$999999999');
  PRLEV_2/A1 = EDIT(LEVEL2, '9$$$$$$$$$$$$$$');
  PNTLY_CNT/D8CS = IF EMBARK EQ 'FP2' OR 'FP3' THEN 1 ELSE 0;
  REF_E_CNT/D8CS      = IF (RF_FLAG NE ' ') OR
                           (EX_FLAG NE ' ') THEN
                            1 ELSE 0;  
  REF_EXCH_CNT/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 0 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  REFEXCH/D12.2CS     = IF (RF_FLAG NE ' ') THEN
                        SEG_AMT + SEG_TAX ELSE 
                        IF (EX_FLAG NE ' ') THEN
                        SEG_AMT + SEG_TAX ELSE 0; 
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;
  SEG_FLAG/I3         = POSIT (C_ITIN, 67, ' ', 2, 'I3');
  TEMPU_FLAG/A1 = IF VOID_DATE EQ 0 AND UDID CONTAINS 'GN-' THEN 'N' ELSE 'Y';
  TEMPU_FLAG2/A2 = IF VOID_DATE EQ 0 AND LEVEL3 EQ 'EXEC' OR 'EXEX' THEN 'N' ELSE 'Y';
  TKT_AMOUNT/D12.2CS  = TICKET_AMT + TAX_AMT;
  TKT_PURCH/D8.2CS      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 0;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND 
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TRAN_MONTH/MT        = TRN_DATE;
  TRAN_MY/MTYY = TRN_DATE;
  UPCCR/A6 = EDIT(ICODEX,'999999$$$$$$$$$$');
  UPCOSTC/A1 = IF EMP_ID EQ '0EM999' OR '0EM299' OR '0EM199' OR '0EM167' OR 
  '0EM166' OR '0EM165' OR '0EM163' OR '0EM161' OR '0EM112' OR '0EM093' OR
  '0EM092' OR '0EM089' OR '0EM085' OR '0EM079' OR '0EM072' OR '0EM069' OR
  '0EM061' OR '0EM057' OR '0EM056' OR '0EM055' OR '0EM054' OR '0EM053' OR
  '0EM053' OR '0EM051' OR '0EM033' OR '0EM032' OR '0EM027' OR '0EM026' OR
  '0EM022' THEN 'Y' ELSE 'N';
  VAIRN/A12 = VAL_AIR.AIRLINE_NAME;  
  VFLAG/A1 = IF VOID_DATE NE 0 THEN 'Y' ELSE 'N';
  VALUA/A1 = IF (VAL_AIRLINE EQ 'UA') AND 
                (FLIGHT GE '5000')    AND
                (FLIGHT LE '5499') THEN 'Y' ELSE 
             IF (VAL_AIRLINE EQ 'UA') AND
                (FLIGHT GE '5500')    AND
                (FLIGHT LE '5899') THEN 'Y' ELSE
             IF (VAL_AIRLINE EQ 'UA') AND
                (FLIGHT GE '6800')    AND
                (FLIGHT LE '7019') THEN 'Y' ELSE
             IF (VAL_AIRLINE EQ 'UA') AND
                (FLIGHT GE '7020')    AND
                (FLIGHT LE '7149') THEN 'Y' ELSE
             IF (VAL_AIRLINE EQ 'UA') AND
                (FLIGHT GE '7150')    AND
                (FLIGHT LE '7899') THEN 'Y' ELSE
             IF (VAL_AIRLINE EQ 'UA') AND
                (FLIGHT GE '7900')    AND
                (FLIGHT LE '7899') THEN 'Y' ELSE 'N';
  VIP_FLAG/A1 = ' ';                
  XARR_DOW/W           = ARR_DATE;
  XARR_DT/MDYY         = ARR_DATE;
  XDPT_DOW/W           = FST_DPT_DATE;
  XDPT_DT/MDYY         = DPT_DATE;
  XDPT_DATE/MDY        = DPT_DATE;
  XFST_DPT/MDYY = FST_DPT_DATE;
  XPSNGR_NM/A15        = 
    EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
  XTKT_DT/MDYY         = TKT_DATE;
  XTRAN_DT/MDYY        = TRN_DATE;


-* ****DEFINES ON PREVIOUS DEFINES****
 AL_MILE_DSC/A35 = IF (MILE GT 1) AND (MILE LT 282) OR 
                  ((MILE LT (-1)) AND (MILE GT (-282)))  THEN 'SHORT HAUL (LESS THAN 281)' ELSE
                   IF (MILE GE 282 AND MILE LE 994) OR
                   ((MILE LT (-282)) AND (MILE GT (-994))) THEN 'MEDIUM HAUL (282-994)' ELSE 
                   'LONG HAUL (995 OR MORE)';
                   
 CH_MILE_DSC/A35 = IF (MILE GT 1) AND (MILE LT 300) OR 
                      ((MILE LT (-1)) AND (MILE GT (-300)))  THEN 'SHORT HAUL (LESS THAN 300)' ELSE
                   IF (MILE GE 300 AND MILE LE 699) OR
                      ((MILE LT (-300)) AND (MILE GT (-699))) THEN 'MEDIUM HAUL (300-699)' ELSE 'LONG HAUL (700 OR MORE)';  
                      
 CO_MILE_DSC/A35 = IF (MILE GT 1) AND (MILE LT 621) OR 
                      ((MILE LT (-1)) AND (MILE GT (-621)))  THEN 'SHORT HAUL (LESS THAN 621)' ELSE
                   IF (MILE GE 621 AND MILE LE 2300) OR
                      ((MILE LT (-621)) AND (MILE GT (-2300))) THEN 'MEDIUM HAUL (621-2300)' ELSE 'LONG HAUL (2300 OR MORE)'; 
CO_MILE_DSC1/A35 = IF (MILE GT 1) AND (MILE LT 300) OR 
                      ((MILE LT (-1)) AND (MILE GT (-300)))  THEN 'SHORT HAUL (LESS THAN 300)' ELSE
                   IF (MILE GE 300 AND MILE LE 2300) OR
                      ((MILE LT (-300)) AND (MILE GT (-2300))) THEN 'MEDIUM HAUL (300-2300)' ELSE
                      'LONG HAUL (2300 OR MORE)';                       
 WB_MILE_DSC/A35 = IF (MILE GT 1) AND (MILE LT 300) OR 
                      ((MILE LT (-1)) AND (MILE GT (-300)))  THEN 'SHORT HAUL (LESS THAN 300)' ELSE
                   IF (MILE GE 300 AND MILE LE 2300) OR
                      ((MILE LT (-300)) AND (MILE GT (-2300))) THEN 'MEDIUM HAUL (300-2300)' ELSE 'LONG HAUL (2300 OR MORE)';                      
                                 
  AL_MILE_KEY/A1 = IF AL_MILE_DSC CONTAINS 'SHORT HAUL' THEN 'A' ELSE
                   IF AL_MILE_DSC CONTAINS 'MEDIUM HAUL' THEN 'B' ELSE 'C';
  CH_MILE_KEY/A1 = IF CH_MILE_DSC CONTAINS 'SHORT HAUL' THEN 'A' ELSE
                   IF CH_MILE_DSC CONTAINS 'MEDIUM HAUL' THEN 'B' ELSE 'C'; 
  CO_MILE_KEY/A1 = IF CO_MILE_DSC CONTAINS 'SHORT HAUL' THEN 'A' ELSE
                   IF CO_MILE_DSC CONTAINS 'MEDIUM HAUL' THEN 'B' ELSE 'C';  
 CO_MILE_KEY1/A1 = IF CO_MILE_DSC1 CONTAINS 'SHORT HAUL' THEN 'A' ELSE
                   IF CO_MILE_DSC1 CONTAINS 'MEDIUM HAUL' THEN 'B' ELSE 'C';                       
  WB_MILE_KEY/A1 = IF WB_MILE_DSC CONTAINS 'SHORT HAUL' THEN 'A' ELSE
                   IF WB_MILE_DSC CONTAINS 'MEDIUM HAUL' THEN 'B' ELSE 'C';          

  ABOOK_CNT/D8CS = IF ONLINE_TRADITIONAL EQ 'TRADITIONAL' THEN NET_TKT_CNT ELSE 0;
  ABOOK_FARE/D12.2CS = IF ONLINE_TRADITIONAL EQ 'TRADITIONAL' THEN FARE_PAID ELSE 0;
  IBOOK_CNT/D8CS = IF ONLINE_TRADITIONAL EQ 'ONLINE' THEN NET_TKT_CNT ELSE 0;
  IBOOK_FARE/D12.2CS = IF ONLINE_TRADITIONAL EQ 'ONLINE' THEN FARE_PAID ELSE 0;
  IEBOOK_CNT/D8CS = IF IBOOK CONTAINS 'EXCHANGE' THEN NET_TKT_CNT ELSE 0;
IEBOOK_FARE/D12.2CS = IF IBOOK CONTAINS 'EXCHANGE' THEN FARE_PAID ELSE 0;
  SIBOOK_CNT/D8CS = IF IBOOK CONTAINS 'WEB' THEN NET_TKT_CNT ELSE 0;
  AIRLINE_FEE/D12.2CS = IF EMBARK EQ 'FP2' OR 'FP3' THEN FARE_PAID ELSE 0;
  ARR_DAY/A3           = DECODE XARR_DOW (1 'MON' 2 'TUE' 3 'WED'
                                 4 'THU' 5 'FRI' 6 'SAT' 7 'SUN');
  DECLINE_AMT/D12.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         TKT_AMOUNT - LOWEST_AMT;
  DISSAVINGS/D11.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
  JH_DISSV/D11.2S  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;                          
  DPT_DAY/A3           = DECODE XDPT_DOW (1 'MON' 2 'TUE' 3 'WED'
                                 4 'THU' 5 'FRI' 6 'SAT' 7 'SUN');
 
  GROSS_DSAVE/D12.2CS = IF (RF_FLAG EQ ' ') AND
                           (EX_FLAG EQ ' ') THEN
                           DISSAVINGS ELSE 0; 
  
  MILE_DSC/A20 = IF MILE LT 500 THEN 'SHORT HAUL FLIGHTS' ELSE
                 IF MILE GE 500 AND MILE LE 1600 THEN 'MEDIUM HAUL FLIGHTS' ELSE 'LONG HAUL FLIGHTS';
  MIL_DSC2/A15 = IF ((MILE GE 0) AND (MILE LE 300) OR
                     (MILE LE (-1)) AND (MILE GE (-300))) THEN '300 OR LESS' ELSE
                  IF ((MILE GE 301) AND (MILE LE 700) OR
                      (MILE LE (-301)) AND (MILE GE (-700))) THEN '301 - 700' ELSE
                 'OVER 700';
  
  TRIPS/D8CS = IF STAY GT 0 THEN 1 ELSE
               IF STAY LT 0 THEN (-1) ELSE 0;
  OUTBD_CTY/A3 = SUBSTR(208, ADIR_ALL, 1, 3, 3, 'A3');
  ORGD/A7 = ORG_APC |' '| DST_APC;
  CHECK1/A3 = EDIT(ADIR_STP, '$$$$$$$$$$$$$999');
  CHECK2/A3 = EDIT(ADIR_STP, '$$$$$$$$$$$$$$$$$$$$999');
  CHECK3/A3 = EDIT(ADIR_STP, '$$$999');
  CHECK4/A3 = EDIT(ADIR_STP, '$$$$$$$$$$999');
  OPEN_JAW_FLAG/A1 = IF CHECK1 NE CHECK2 THEN 'Y' ELSE 'N';
  OPEN_JAW_FLAG2/A1 = IF CHECK3 NE CHECK4 THEN 'Y' ELSE 'N';
  FULLE_FARE/D12S = IF (DOC_TYPE EQ '1' AND EXCHG_SALE NE ' ') THEN 0 ELSE
                    IF ((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (EMBARK NE 'RF1' OR 'FP3')) THEN FARE_PAID ELSE
                    IF ((SEG_COUNT GE 0) AND (EXCHG_SALE NE ' ') AND (EMBARK NE 'RF1')) THEN FARE_PAID ELSE 0;
 
-*   AIBOOK_CNT/D8CS = ABOOK_CNT + IBOOK_CNT;
  AIBOOK_CNT/D8CS = NET_TKT_CNT - IEBOOK_CNT;
  NOHR_KEY/A2  =   EDIT(NHR_KEY, '$$$$$$$$99');
  NOHTL_KEY/A10 = IF NOHR_KEY NE ' ' THEN NOHR_KEY ELSE 'NONE GIVEN';
  NOCR_KEY/A2  =   EDIT(NCR_KEY, '$$$$$$$$99');
  NOCAR_KEY/A10 = IF NOCR_KEY NE ' ' THEN NOCR_KEY ELSE 'NONE GIVEN';
   
  TRIP_KEY/A2   = EDIT(TRP_KEY, '$$$$$$$$99');
  TRIPRSN/A10 = IF TRIP_KEY NE ' ' THEN TRIP_KEY ELSE 'ZZZZZZZZZZ';
  TRIP_RSN/A10 = IF TRIPRSN EQ 'ZZZZZZZZZZ' THEN 'NONE GIVEN' ELSE TRIPRSN;
  TRP_LEN/D8CS = TRIP_LENGTH * NET_TKT_CNT;
  TVL_AUTH/A10 = IF TRVL_AUTH EQ ' ' THEN 'NONE GIVEN' ELSE TRVL_AUTH;
  VASAVINGS/D12.2CS    = NEW_SEG_DISC - FARE_PAID;

-******************************************************
-* Defines added for Bing Recruits report
   ID1/A5 = EDIT(INT_CODE, '99999$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
   ID2/A7 = EDIT(INT_CODE, '$$$$$$9999999$$$$$$$$$$$$$$$$$$$$$$$');
   ID3/A10 = EDIT(INT_CODE, '$$$$$$$$$$$$$$9999999999$$$$$$$$$$$$');
   ID4/A5 = EDIT(INT_CODE, '$$$$$$$$$$$$$$$$$$$$$$$$$99999$$$$$$');
   
-* Jack Henry Billable/Non-Billable define
   JHA_TRP/A25 = IF TRIP_PURPOSE EQ 'BI' THEN 'BILLABLE' ELSE
                 IF TRIP_PURPOSE EQ 'IN' THEN 'INTERNAL' ELSE 'NONE GIVEN';
                 
-* Conagra Stopover Count
ADIR1/A1= EDIT(ADIR_STP, '$$$$$$$$$$$$$$$$$$$$$$$$$$9');
ADIR2/A1= EDIT(ADIR_STP, '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$9');
STOP_CNT/A2 = IF (ADIR1 EQ '/') AND (ADIR2 EQ ' ') THEN '2' ELSE
              IF ADIR2 EQ '/' THEN '3+' ELSE ' ';
TPLEN_FLAG/A1 = IF TRP_LEN GT 0 THEN 'Y' ELSE 'N';              
-*******************************************************
-* Define added for Tandt Trip Reason Description
TT_TRP_RSN/A50 = IF LEVEL3 EQ 'SLC' THEN 'Sales Call' ELSE 
                 IF LEVEL3 EQ 'SVC' THEN 'Client Visit/Quarterly' ELSE 
                 IF LEVEL3 EQ 'IMP' THEN 'Implementation' ELSE 
                 IF LEVEL3 EQ 'CNF' THEN 'Conference/Convention' ELSE 
                 IF LEVEL3 EQ 'TRG' THEN 'Training' ELSE
                 IF LEVEL3 EQ 'MTG' THEN 'Meeting(Internal)' ELSE
                 IF LEVEL3 EQ 'AGT' THEN 'Agent fill-in' ELSE 'Other';
                 
-* Nordsn-r define for specific employess
ND_EMP/A1 = IF EMP_ID EQ '000058' OR '000061' OR '000073' OR '000125' OR '000175'
OR '000214' OR '000451' OR '000464' OR '000560' OR '002416' OR '002422' OR '002447'
OR '002476' OR '002499' OR '002907' OR '003226' OR '003233' OR '003282' OR '003420'
OR '003503' OR '003613' OR '003676' OR '003840' OR '004052' OR '004060' OR '004062'
OR '004068' OR '004076' OR '004081' OR '004092' OR '004107' OR '004125' OR '004145'
OR '004154' OR '004155' OR '004193' OR '004203' OR '004204' OR '004205' OR '004355'
OR '004395' OR '004402' OR '004416' OR '004422' OR '004426' OR '004429' OR '004430'
OR '004437' OR '004446' OR '004493' OR '004520' OR '004522' OR '004523' OR '004524'
OR '004526' OR '004532' OR '004533' OR '004676' OR '004693' OR '004711' OR '004731'
OR '004744' OR '004756' OR '004796' OR '004796' OR '004822' OR '004837' OR '004838'
OR '004847' OR '004848' OR '004859' OR '004865' OR '004881' OR '004883' OR '004884'
OR '004886' OR '006106' OR '006614' OR '006785' OR '007597' OR '008127' OR '008151'
OR '008167' OR '009166' OR '009363' OR '009439' OR '011269' OR '011316' OR '011837'
OR '011930' OR '012034' OR '033301' OR '034111' OR '035201' OR '042002' OR '045202'
OR '048322' OR '054203' OR '056213' OR '064403' OR '067508' OR '072973' OR '074104'
OR '075814' OR '077305' OR '078104' OR '080001' OR '080067' OR '087091' OR '094205'
OR '095112' OR '098066' OR '098115' OR '110070' OR '110079' OR '110119' OR '110242'
OR '110336' OR '110357' OR '110376' OR '110393' OR '110618' OR '110691' OR '110703'
OR '110929' OR '110930' OR '110943' OR '111040' OR '111051' OR '111136' OR '111180'
OR '111236' OR '111237' OR '111382' OR '111458' OR '111690' OR '111856' OR '111861'
OR '111877' OR '111963' OR '112019' OR '112031' OR '112174' OR '112296' OR '112317'
OR '112324' OR '112339' OR '112389' OR '112412' OR '112454' OR '112648' OR '112654'
OR '112673' OR '112677' OR '112683' OR '112731' OR '112742' OR '112762' OR '112783'
OR '113054' OR '113056' OR '113096' OR '113166' OR '113167' OR '113234' OR '113235'
OR '113323' OR '113360' OR '113381' OR '113421' OR '113431' OR '113432' OR '113492'
OR '113493' OR '113577' OR '113634' OR '113660' OR '113837' THEN 'Y' ELSE 'N';


-**************************************************************
-* Defines added for BWS LHR service 

BW_STL_LHR/A1 = IF (ORG_APC EQ 'STL') AND (DST_APC EQ 'LHR') THEN 'Y' ELSE 'N';

BW_ORG/A1 = IF ORG_APC EQ 'LHR' THEN 'Y' ELSE 'N';
BW_GEO/A1 = IF TKT_MAIN.GEO_ZONE OMITS 'USA' OR 'LAM' OR 'SAM' THEN 'Y' ELSE 'N';

BW_SVC/A20 = IF BW_STL_LHR EQ 'Y' THEN 'ST.LOUIS/LONDON' ELSE
             IF (BW_ORG EQ 'Y') AND (BW_GEO EQ 'Y') THEN 'LONDON/BEYOND' ELSE ' ';
             
             
             
FDST1/A2 = IF RNDT_FLAG EQ 'N' THEN FNL_DEST_STATE_CODE ELSE 
           IF FST_DEST_STATE_CODE EQ ' ' THEN FNL_DEST_STATE_CODE ELSE FST_DEST_STATE_CODE;

-* DSTATE11/A2 = IF FST_DEST_STATE_CODE EQ ' ' THEN FNL_DEST_STATE_CODE ELSE FST_DEST_STATE_CODE;   


-* DSTATE1A/A2 = IF RNDT_FLAG EQ 'N' THEN FNL_DEST_STATE_CODE ELSE ;
             
             
-* BWDSTATE1/A1 = IF FST_DEST_STATE_CODE EQ 'NY' OR 'ME' OR 'CT' OR 'NM' OR 
-*                   FNL_DEST_STATE_CODE EQ 'NY' OR 'ME' OR 'CT' OR 'NM' THEN 'Y' ELSE 'N';   
BWDSTATE1/A1 = IF FDST1 EQ 'NY' OR 'ME' OR 'CT' OR 'NM' THEN 'Y' ELSE 'N';
             
-* Defines added for Princ-r Specific Destination States

OSTATE/A1 = IF ORG_STATE_CODE EQ 'CA' OR 'ME' OR 'NC' OR 'NE' OR 'IL' THEN 'Y' ELSE 'N';
DSTATE/A1 = IF FST_DEST_STATE_CODE EQ 'CA' OR 'ME' OR 'NC' OR 'NE' OR 'IL' OR 
               FNL_DEST_STATE_CODE EQ 'CA' OR 'ME' OR 'NC' OR 'NE' OR 'IL' THEN 'Y' ELSE 'N';
               
DSTATEP/A1 = IF FST_DEST_STATE_CODE EQ 'MA' OR 'OR' OR 'PA' OR 'WI' OR 'IA' THEN 'Y' ELSE 'N';
-*                FNL_DEST_STATE_CODE EQ 'MA' OR 'OR' OR 'PA' OR 'WI' OR 'IA' THEN 'Y' ELSE 'N';               
               
DSTATE1/A2 = IF FST_DEST_STATE_CODE EQ ' ' THEN FNL_DEST_STATE_CODE ELSE FST_DEST_STATE_CODE;               

AL_TKTNUM/A13 = AIRLINE_NUM | TKT_NUM;
   
 FLT_LEN1A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 1, '-', 5, FLT_LEN1A);
  FLT_LEN2A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 2, '-', 5, FLT_LEN2A);
  FLT_LEN3A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 3, '-', 5, FLT_LEN3A);
  FLT_LEN4A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 4, '-', 5, FLT_LEN4A);
  FLT_LEN5A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 5, '-', 5, FLT_LEN5A);
  FLT_LEN6A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 6, '-', 5, FLT_LEN6A);
  FLT_LEN7A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 7, '-', 5, FLT_LEN7A);
  FLT_LEN8A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 8, '-', 5, FLT_LEN8A);
  FLT_LEN9A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 9, '-', 5, FLT_LEN9A);
  FLT_LEN10A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 10, '-', 5, FLT_LEN10A);
 

  FLEN1D/D9.2 = ATODBL(FLT_LEN1A,  '5', FLEN1D);
  FLEN2D/D9.2 = ATODBL(FLT_LEN2A,  '5', FLEN2D);
  FLEN3D/D9.2 = ATODBL(FLT_LEN3A,  '5', FLEN3D);
  FLEN4D/D9.2 = ATODBL(FLT_LEN4A,  '5', FLEN4D);
  FLEN5D/D9.2 = ATODBL(FLT_LEN5A,  '5', FLEN5D);
  FLEN6D/D9.2 = ATODBL(FLT_LEN6A,  '5', FLEN6D);
  FLEN7D/D9.2 = ATODBL(FLT_LEN7A,  '5', FLEN7D);
  FLEN8D/D9.2 = ATODBL(FLT_LEN8A,  '5', FLEN8D);
  FLEN9D/D9.2 = ATODBL(FLT_LEN9A,  '5', FLEN9D);
  FLEN10D/D9.2 = ATODBL(FLT_LEN10A,  '5', FLEN10D);

  FLT_LEN1/D5 = FLEN1D;
  FLT_LEN2/D5 = FLEN2D;
  FLT_LEN3/D5 = FLEN3D;
  FLT_LEN4/D5 = FLEN4D;
  FLT_LEN5/D5 = FLEN5D;
  FLT_LEN6/D5 = FLEN6D;
  FLT_LEN7/D5 = FLEN7D;
  FLT_LEN8/D5 = FLEN8D;
  FLT_LEN9/D5 = FLEN9D;
  FLT_LEN10/D5 = FLEN10D;
  
 MAX_FLT/D5 = IF FLT_LEN1 GE FLT_LEN2 AND FLT_LEN1 GE FLT_LEN3 AND FLT_LEN1 GE FLT_LEN4 AND FLT_LEN1 GE FLT_LEN5 AND FLT_LEN1 GE FLT_LEN6 AND
                 FLT_LEN1 GE FLT_LEN7 AND FLT_LEN1 GE FLT_LEN8 THEN FLT_LEN1 ELSE
              IF FLT_LEN2 GE FLT_LEN1 AND FLT_LEN2 GE FLT_LEN3 AND FLT_LEN2 GE FLT_LEN4 AND FLT_LEN2 GE FLT_LEN5 AND FLT_LEN2 GE FLT_LEN6 AND
                 FLT_LEN2 GE FLT_LEN7 AND FLT_LEN2 GE FLT_LEN8 THEN FLT_LEN2 ELSE   
              IF FLT_LEN3 GE FLT_LEN1 AND FLT_LEN3 GE FLT_LEN2 AND FLT_LEN3 GE FLT_LEN4 AND FLT_LEN3 GE FLT_LEN5 AND FLT_LEN3 GE FLT_LEN6 AND
                 FLT_LEN3 GE FLT_LEN7 AND FLT_LEN3 GE FLT_LEN8 THEN FLT_LEN3 ELSE   
              IF FLT_LEN4 GE FLT_LEN1 AND FLT_LEN4 GE FLT_LEN2 AND FLT_LEN4 GE FLT_LEN3 AND FLT_LEN4 GE FLT_LEN5 AND FLT_LEN4 GE FLT_LEN6 AND
                 FLT_LEN4 GE FLT_LEN7 AND FLT_LEN4 GE FLT_LEN8 THEN FLT_LEN4 ELSE        
              IF FLT_LEN5 GE FLT_LEN1 AND FLT_LEN5 GE FLT_LEN2 AND FLT_LEN5 GE FLT_LEN3 AND FLT_LEN5 GE FLT_LEN4 AND FLT_LEN5 GE FLT_LEN6 AND
                 FLT_LEN5 GE FLT_LEN7 AND FLT_LEN5 GE FLT_LEN8 THEN FLT_LEN5 ELSE    
              IF FLT_LEN6 GE FLT_LEN1 AND FLT_LEN6 GE FLT_LEN2 AND FLT_LEN6 GE FLT_LEN3 AND FLT_LEN6 GE FLT_LEN4 AND FLT_LEN6 GE FLT_LEN6 AND
                 FLT_LEN6 GE FLT_LEN7 AND FLT_LEN6 GE FLT_LEN8 THEN FLT_LEN6 ELSE   
              IF FLT_LEN7 GE FLT_LEN1 AND FLT_LEN7 GE FLT_LEN2 AND FLT_LEN7 GE FLT_LEN3 AND FLT_LEN7 GE FLT_LEN4 AND FLT_LEN7 GE FLT_LEN7 AND
                 FLT_LEN7 GE FLT_LEN6 AND FLT_LEN7 GE FLT_LEN8 THEN FLT_LEN7 ELSE FLT_LEN8; 

FLT_RANGE/A16 = IF MAX_FLT LT 239 THEN '< 4 HOURS' ELSE '> 4 HOURS';
FLT_RANGE2/A16 = IF MAX_FLT LT 119 THEN '< 2 HOURS' ELSE '> 2 HOURS';

-* Defines added for Metlife volumne by week number
DT1/HYYMD = HDTTM(DPT_DATE, 8, 'HYYMDIA');
WEEK_NBR/I2 = HPART(DT1, 'WEEK', 'I2');
CDIRS/A6 = EDIT(CDIR_STP, '999999');

-* Defines added for SPYAIRD
LNAME/A15 = GETTOK(PASSNGR_NAME, 33, 1, '/', 30, LNAME);
FNAME/A15 = GETTOK(PASSNGR_NAME, 33, -1, '/', 30, FNAME);
ND_ORG_CD/A3 = ND_ORG;
ND_DST_CD/A3 = ND_DST;     
-INCLUDE TRANTYPE 
-INCLUDE IDLEVDEFINE 
 
               
END
-RUN

-IF &&SETF EQ 'ABBDFAIR' GOTO BIGDATA;


TABLEF FILE &&EXTRACT
PRINT ADIR_STP
  AIRCRAFT_TYPE
  AIR_SELECT
  ABOOK_CNT
  ABOOK_FARE
  AIBOOK_CNT
  AGENT_NUM 
  AIR_KEY   
  AIR_MAIN.INTL_DOM 
  AIRLINE   
  AIRLINE_FEE   
  AIRLINE_NAME 
  AL_MILE_DSC
  AL_MILE_KEY
  AL_TKTNUM
  AR_BRANCH
  AROLL_DSC3
  AROLL_DSC4
  AROLL_DSC5
  AROLL_LEV5
  AROLL_DSC6
  AROLL_LEV6
  AROLL_DSC7
  AROLL_LEV7
  AROLL_DSC11
  AROLL_LEV11
  ARR_DAY   
  ARR_TIME
  AUX_NON_MIR   
  AUX_TKTLS_PNR 
  AUX_TKTLS_NUM
  BASE_FARE
  BASE_FARE1
  BING_CRD
  BOOK_DT   
  BR_CL_IDX 
  BW_SVC
  C_ITIN
  CARD
  CARD_NUM  
  CARD_NUM1 
  CARD1_NUM 
  CCARD 
  CCARD1    
  CCARD2    
  CCARD3    
  CCARD5
  CCARD6
  CCARD7
  CGCARD
  CH_MILE_DSC
  CH_MILE_KEY
  CO_MILE_DSC
  CO_MILE_DSC1
  CO_MILE_KEY
  CO_MILE_KEY1
  CHG_COD
  CITYPAIR.EMBARK      AS 'EMB_APT_CD'  
  CITYPAIR.ROUTE       AS 'RTE_APT_CD'  
  CL_CAT    
  CLASS 
  CLASS_CAT 
  CLIENT_NAME
  CLIENT_NUM
  CNTRY
  COM_AMTA  
  COM_AMT   
  CRD_CRD   
  CC_NUM
  CREDIT_CARD
  DEPT_MONTH
  DEPT_YEAR 
  DIR_CP_CD 
  DIR_CP_NM 
  DISSAVINGS
  DOC_NUMBER
  DOC_TYPE
  DOD_PAX_CAT   
  DPT_DAY   
  DPT_TIME  
  DST_APC
  EMBARK
  EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'
-*  EMB_APT.STATE_CODE AS 'EMB_STATE'   
  EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'  
  EMB_CTY.COUNTRY_CODE AS 'EMB_CNTRY_CODE'
  EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'
  EMAIL_ADR
  EX_FLAG
  EX_RF_FLAG
  EXCH_NET_FARE
  EXCH_NET_TAX
  EXCHG_SALE
  EXEC
  FARE_BAS
  FARE_PAID 
  FDST1
  FLVL1
  FLIGHT
  FLT_RANGE
  FLT_RANGE2
  FLIGHT_DURATION
  FNL_DEST_AIRPORT  
  FNL_DEST_CNTY_CODE AS 'FNL_CCODE'
  FST_DPT_DATE
  FST_DEST_DEPART_DATE
  FULLE_FARE
  GROSS_DSAVE   
  GROSS_FARE    
  GROUP_CODE
  GSA_GTR
  IBOOK
  IBOOK_CNT
  IBOOK_FARE
  ID1
  ID2
  ID3
  ID4
  IEBOOK_CNT
  IEBOOK_FARE
  INT_CODE  
  INVOICE_NUM 
  JHA_TRP
  JH_DISSV
  KOLEV
  LAYOVER
  LEVEL_DESC    
  EMP_ID    
  LEVEL1
  LEVEL2    
  LEVEL3 
  LEVEL4
  LEVEL5
  LEVEL6
  LEVEL7
  LVSEL
  MIR_TYPE  
  MILE
  MILE_DSC
  MIL_DSC2
  MRK_TKT_CNT   
  MTG_NUM
  MX_CC
  AIR_MAIN.NCR_KEY
  NCR_REF.NCR_DESC AS 'NCR_DESC'
  ND_APTS
  ND_CITY_NM
  ND_ORG_CD
  ND_DST_CD 
  NET_TKT_CNT   
  NET_TKT_CNT1  
  NEW_ADV_PURCH 
  NEW_SEG_AMT
  NEW_SEG_TAX
  NEW_SEG_COUNT 
  NEW_SEG_DISC  
  NEW_SEG_MILES
  NHR_REF.NHR_DESC
  NOCAR_KEY
  NOCR_KEY
  NOHTL_KEY     
  NOREF_SEG_COUNT  
  NONREF_FLAG
  NRFLAG
  ORG_APC
  ORG_CNTRY_CODE
  ORG_DST
  ORGD
  OTFLAG
  OUTBD_CTY
  PASSNGR_NAME 
  PCG_KEY
  PENALTY_AMT
  PNTLY_CNT
  PNR_LOCATOR
  PROD_COD
  PROJ_NBR
  REF_E_CNT 
  REF_EXCH_CNT  
  REFEXCH   
  REFUSAL_DESC  
  REFUSE_CODE   
  REFUSE_KEY      
  RF_FLAG
  RNDT_FLAG
  RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'  
  RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'
  RTE_CTY.COUNTRY_CODE AS 'RTE_CNTRY_CODE'  
  RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'  
  RTE_APT.STATE_CODE AS 'RTE_STATE' 
  SAVINGS   
  SEG_AMT   
  SEG_COM
  SEG_COUNT 
  SEG_DESIG 
  SEG_DISCOUNT  
  SEG_LOWEST    
  SEG_MILES 
  SEG_NBR   
  SEG_STANDARD  
  SEG_TAX
  SIBOOK_CNT
  STAY  
  STOP_CNT
  TICKET_BRANCH 
  TKT_AMOUNT
  TKT_DATE  
  TKT_NUM   
  TKT_PURCH 
  TKT_SORT  
  TKT_TYPE  
  TOUR_CODE 
  TPLEN_FLAG
  TRAN_MONTH    
  TRAN_MY
  TRVL_AUTH
  TVL_AUTH
  TRIPS
  TRIP_LENGTH
  TRIP_PURPOSE
  TRIP_RSN
  TRIPRSN
  TRN_DATE
  TRP_REF.TRP_DESC 
  TRP_LEN
  TT_TRP_RSN
  UPCCR
  UPCOSTC
  VAL_AIRLINE   
  VALUA
  VASAVINGS
  VIP_FLAG
  VOID_DATE 
  VOID_STATUS
  WB_MILE_DSC
  WB_MILE_KEY
  XARR_DT   
  XDPT_DT   
  XDPT_DATE
  XFST_DPT
  XPSNGR_NM
  XTKT_DT   
  XTRAN_DT  
  GEO_ZONE
  CTRY_COD
  ADIR_ALL
  DSTATE1
  VAIRN
  VFLAG
  WEEK_NBR
-* ADDED FOR BWS REQUEST
  DPT_MY
-* ADDED FOR SPYAIRD 
  LNAME
  FNAME
  
-INCLUDE BYHIERARCHY
-INCLUDE &AIRDATES

-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10

 
-INCLUDE &RPARM
-* -INCLUDE RPTPARMS

ON TABLE HOLD AS &&RPT_HOLD

END
-RUN

-GOTO EXTDNE;

-BIGDATA;
TABLEF FILE &&EXTRACT
PRINT AIR_KEY
  ADIR_STP
  AIRCRAFT_TYPE
  AIR_SELECT
  ABOOK_CNT
  ABOOK_FARE
  AIBOOK_CNT
  AGENT_NUM 
  AIR_KEY   
  AIR_MAIN.INTL_DOM 
  AIRLINE   
  AIRLINE_FEE   
  AIRLINE_NAME 
  AL_MILE_DSC
  AL_MILE_KEY
  AL_TKTNUM
  AR_BRANCH
  AROLL_DSC3
  AROLL_DSC4
  AROLL_DSC5
  AROLL_LEV5
  AROLL_DSC6
  AROLL_LEV6
  AROLL_DSC7
  AROLL_LEV7
  AROLL_DSC11
  AROLL_LEV11
  ARR_DAY   
  ARR_TIME
  AUX_NON_MIR   
  AUX_TKTLS_PNR 
  AUX_TKTLS_NUM
  BASE_FARE
  BASE_FARE1
  BING_CRD
  BOOK_DT   
  BR_CL_IDX 
  BW_SVC
  C_ITIN
  CARD
  CARD_NUM  
  CARD_NUM1 
  CARD1_NUM 
  CCARD 
  CCARD1    
  CCARD2    
  CCARD3    
  CCARD5
  CCARD6
  CCARD7
  CGCARD
  CH_MILE_DSC
  CH_MILE_KEY
  CO_MILE_DSC
  CO_MILE_DSC1
  CO_MILE_KEY
  CO_MILE_KEY1
  CHG_COD
  CITYPAIR.EMBARK      AS 'EMB_APT_CD'  
  CITYPAIR.ROUTE       AS 'RTE_APT_CD'  
  CL_CAT    
  CLASS 
  CLASS_CAT 
  CLIENT_NAME
  CLIENT_NUM
  CNTRY
  COM_AMTA  
  COM_AMT   
  CRD_CRD   
  CC_NUM
  CREDIT_CARD
  DEPT_MONTH
  DEPT_YEAR 
  DIR_CP_CD 
  DIR_CP_NM 
  DISSAVINGS 
  DOC_NUMBER
  DOC_TYPE
  DOD_PAX_CAT   
  DPT_DAY   
  DPT_TIME  
  DST_APC
  EMBARK
  EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'
-*  EMB_APT.STATE_CODE AS 'EMB_STATE'   
  EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'  
  EMB_CTY.COUNTRY_CODE AS 'EMB_CNTRY_CODE'
  EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'
  EMAIL_ADR
  EX_FLAG
  EX_RF_FLAG
  EXCH_NET_FARE
  EXCH_NET_TAX
  EXCHG_SALE
  EXEC
  FARE_BAS
  FARE_PAID 
  FDST1
  FLVL1
  FLIGHT
  FLT_RANGE
  FLT_RANGE2
  FLIGHT_DURATION
  FNL_DEST_AIRPORT  
  FNL_DEST_CNTY_CODE AS 'FNL_CCODE'
  FST_DPT_DATE
  FST_DEST_DEPART_DATE
  FULLE_FARE
  GROSS_DSAVE   
  GROSS_FARE    
  GROUP_CODE
  GSA_GTR
  IBOOK
  IBOOK_CNT
  IBOOK_FARE
  ID1
  ID2
  ID3
  ID4
  IEBOOK_CNT
  IEBOOK_FARE
  INT_CODE  
  INVOICE_NUM 
  JHA_TRP
  JH_DISSV
  KOLEV
  LAYOVER
  LEVEL_DESC    
  EMP_ID    
  LEVEL1
  LEVEL2    
  LEVEL3 
  LEVEL4
  LEVEL5
  LEVEL6
  LEVEL7
  LVSEL
  MIR_TYPE  
  MILE
  MILE_DSC
  MIL_DSC2
  MRK_TKT_CNT   
  MTG_NUM
  MX_CC
  AIR_MAIN.NCR_KEY
  NCR_REF.NCR_DESC AS 'NCR_DESC'
  ND_APTS
  ND_CITY_NM
  ND_ORG_CD
  ND_DST_CD 
  NET_TKT_CNT   
  NET_TKT_CNT1  
  NEW_ADV_PURCH 
  NEW_SEG_AMT
  NEW_SEG_TAX
  NEW_SEG_COUNT 
  NEW_SEG_DISC  
  NEW_SEG_MILES
  NHR_REF.NHR_DESC
  NOCAR_KEY
  NOCR_KEY
  NOHTL_KEY     
  NOREF_SEG_COUNT  
  NONREF_FLAG
  NRFLAG
  ORG_APC
  ORG_CNTRY_CODE
  ORG_DST
  ORGD
  OTFLAG
  OUTBD_CTY
  PASSNGR_NAME 
  PCG_KEY
  PENALTY_AMT
  PNTLY_CNT
  PNR_LOCATOR
  PROD_COD
  PROJ_NBR
  REF_E_CNT 
  REF_EXCH_CNT  
  REFEXCH   
  REFUSAL_DESC  
  REFUSE_CODE   
  REFUSE_KEY      
  RF_FLAG
  RNDT_FLAG
  RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'  
  RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'
  RTE_CTY.COUNTRY_CODE AS 'RTE_CNTRY_CODE'  
  RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'  
  RTE_APT.STATE_CODE AS 'RTE_STATE' 
  SAVINGS   
  SEG_AMT   
  SEG_COM
  SEG_COUNT 
  SEG_DESIG 
  SEG_DISCOUNT  
  SEG_LOWEST    
  SEG_MILES 
  SEG_NBR   
  SEG_STANDARD  
  SEG_TAX
  SIBOOK_CNT
  STAY  
  STOP_CNT
  TICKET_BRANCH 
  TKT_AMOUNT
  TKT_DATE  
  TKT_NUM   
  TKT_PURCH 
  TKT_SORT  
  TKT_TYPE  
  TOUR_CODE 
  TPLEN_FLAG
  TRAN_MONTH    
  TRAN_MY
  TRVL_AUTH
  TVL_AUTH
  TRIPS
  TRIP_LENGTH
  TRIP_PURPOSE
  TRIP_RSN
  TRIPRSN
  TRN_DATE
  TRP_REF.TRP_DESC 
  TRP_LEN
  TT_TRP_RSN
  UPCCR
  UPCOSTC
  VAL_AIRLINE   
  VALUA
  VASAVINGS
  VOID_DATE 
  VOID_STATUS
  WB_MILE_DSC
  WB_MILE_KEY
  XARR_DT   
  XDPT_DT   
  XDPT_DATE
  XFST_DPT
  XPSNGR_NM
  XTKT_DT   
  XTRAN_DT  
  GEO_ZONE
  CTRY_COD
  ADIR_ALL
  DSTATE1
  VAIRN
  VFLAG
  WEEK_NBR
-* ADDED FOR BWS REQUEST
  DPT_MY
-* ADDED FOR SPYAIRD 
  LNAME
  FNAME
  
-INCLUDE BYHIERARCHY
-INCLUDE &AIRDATES

-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10

 
-INCLUDE &RPARM
-* -INCLUDE RPTPARMS

ON TABLE HOLD AS BDRHLD

END
-RUN



TABLE FILE BDRHLD
PRINT 
  ADIR_STP
  AIRCRAFT_TYPE
  AIR_SELECT
  ABOOK_CNT
  ABOOK_FARE
  AIBOOK_CNT
  AGENT_NUM 
  AIR_KEY   
  INTL_DOM 
  AIRLINE   
  AIRLINE_FEE   
  AIRLINE_NAME 
  AL_MILE_DSC
  AL_MILE_KEY
  AL_TKTNUM
  AR_BRANCH
  AROLL_DSC3
  AROLL_DSC4
  AROLL_DSC5
  AROLL_LEV5
  AROLL_DSC6
  AROLL_LEV6
  AROLL_DSC7
  AROLL_LEV7
  AROLL_DSC11
  AROLL_LEV11
  ARR_DAY   
  ARR_TIME
  AUX_NON_MIR   
  AUX_TKTLS_PNR 
  AUX_TKTLS_NUM
  BASE_FARE
  BASE_FARE1
  BING_CRD
  BOOK_DT   
  BR_CL_IDX 
  BW_SVC
  C_ITIN
  CARD
  CARD_NUM  
  CARD_NUM1 
  CARD1_NUM 
  CCARD 
  CCARD1    
  CCARD2    
  CCARD3    
  CCARD5
  CCARD6
  CCARD7
  CGCARD
  CH_MILE_DSC
  CH_MILE_KEY
  CO_MILE_DSC
  CO_MILE_DSC1
  CO_MILE_KEY
  CO_MILE_KEY1
  CHG_COD
  EMB_APT_CD
  RTE_APT_CD 
  CL_CAT    
  CLASS 
  CLASS_CAT 
  CLIENT_NAME
  CLIENT_NUM
  CNTRY
  COM_AMTA  
  COM_AMT   
  CRD_CRD   
  CC_NUM
  CREDIT_CARD
  DEPT_MONTH
  DEPT_YEAR 
  DIR_CP_CD 
  DIR_CP_NM 
  DISSAVINGS   
  DOC_NUMBER
  DOC_TYPE
  DOD_PAX_CAT   
  DPT_DAY   
  DPT_TIME  
  DST_APC
  EMBARK
  EMB_APT_NM
  EMB_CTY_NM
  EMB_CNTRY_CODE
  EMB_CTY_CD
  EMAIL_ADR
  EX_FLAG
  EX_RF_FLAG
  EXCH_NET_FARE
  EXCH_NET_TAX
  EXCHG_SALE
  EXEC
  FARE_BAS
  FARE_PAID 
  FDST1
  FLVL1
  FLIGHT
  FLT_RANGE
  FLT_RANGE2
  FLIGHT_DURATION
  FNL_DEST_AIRPORT  
  FNL_CCODE
  FST_DPT_DATE
  FST_DEST_DEPART_DATE
  FULLE_FARE
  GROSS_DSAVE   
  GROSS_FARE    
  GROUP_CODE
  GSA_GTR
  IBOOK
  IBOOK_CNT
  IBOOK_FARE
  ID1
  ID2
  ID3
  ID4
  IEBOOK_CNT
  IEBOOK_FARE
  INT_CODE  
  INVOICE_NUM 
  JHA_TRP
  JH_DISSV
  KOLEV
  LAYOVER
  LEVEL_DESC    
  EMP_ID    
  LEVEL1
  LEVEL2    
  LEVEL3 
  LEVEL4
  LEVEL5
  LEVEL6
  LEVEL7
  LVSEL
  MIR_TYPE  
  MILE
  MILE_DSC
  MIL_DSC2
  MRK_TKT_CNT   
  MTG_NUM
  MX_CC
  NCR_KEY
  NCR_DESC
  ND_APTS
  ND_CITY_NM
  ND_ORG_CD
  ND_DST_CD
  NET_TKT_CNT   
  NET_TKT_CNT1  
  NEW_ADV_PURCH 
  NEW_SEG_AMT
  NEW_SEG_TAX
  NEW_SEG_COUNT 
  NEW_SEG_DISC  
  NEW_SEG_MILES
  NHR_DESC
  NOCAR_KEY
  NOCR_KEY
  NOHTL_KEY     
  NOREF_SEG_COUNT  
  NONREF_FLAG
  NRFLAG
  ORG_APC
  ORG_CNTRY_CODE
  ORG_DST
  ORGD
  OTFLAG
  OUTBD_CTY
  PASSNGR_NAME 
  PCG_KEY
  PENALTY_AMT
  PNTLY_CNT
  PNR_LOCATOR
  PROD_COD
  PROJ_NBR
  REF_E_CNT 
  REF_EXCH_CNT  
  REFEXCH   
  REFUSAL_DESC  
  REFUSE_CODE   
  REFUSE_KEY      
  RF_FLAG
  RNDT_FLAG
  RTE_APT_NM 
  RTE_CTY_NM
  RTE_CNTRY_CODE 
  RTE_CTY_CD
  RTE_STATE
  SAVINGS   
  SEG_AMT   
  SEG_COM
  SEG_COUNT 
  SEG_DESIG 
  SEG_DISCOUNT  
  SEG_LOWEST    
  SEG_MILES 
  SEG_NBR   
  SEG_STANDARD  
  SEG_TAX
  SIBOOK_CNT
  STAY  
  STOP_CNT
  TICKET_BRANCH 
  TKT_AMOUNT
  TKT_DATE  
  TKT_NUM   
  TKT_PURCH 
  TKT_SORT  
  TKT_TYPE  
  TOUR_CODE 
  TPLEN_FLAG
  TRAN_MONTH    
  TRAN_MY
  TRVL_AUTH
  TVL_AUTH
  TRIPS
  TRIP_LENGTH
  TRIP_PURPOSE
  TRIP_RSN
  TRIPRSN
  TRN_DATE
  TRP_DESC 
  TRP_LEN
  TT_TRP_RSN
  UPCCR
  UPCOSTC
  VAL_AIRLINE   
  VALUA
  VASAVINGS
  VOID_DATE 
  VOID_STATUS
  WB_MILE_DSC
  WB_MILE_KEY
  XARR_DT   
  XDPT_DT   
  XDPT_DATE
  XFST_DPT
  XPSNGR_NM
  XTKT_DT   
  XTRAN_DT  
  GEO_ZONE
  CTRY_COD
  ADIR_ALL
  DSTATE1
  VAIRN
  VFLAG
  WEEK_NBR
  DPT_MY
  LNAME
  FNAME
BY AIR_KEY
ON TABLE HOLD AS BDRHLD1 FORMAT FOCUS INDEX AIR_KEY
END
-RUN

TABLE FILE ROLLUP_SQL
PRINT COMP
IF ROLLUP EQ '&&ROLLUP.EVAL'
ON TABLE HOLD AS COMPANY
END
-RUN

-READ COMPANY &&COMP.A8
-SET &&COMPNY = &&COMP.EVAL;
-CLOSE COMPANY

-SET &&COMPUA = '&&WFSRV1.EVAL' || '\TNT\TTRACKER\DATA\UA'|| '&&COMPNY.EVAL' ||'.FOC';
-RUN

USE CLEAR *
USE 
&&COMPUA AS UDAIR
&&WFSRV1.EVAL\TNT\TTRACKER\SYSTEM\DATA\UDID_DSC.FOC AS UDID_DSC
END
-*

TABLE FILE UDAIR
PRINT AUD_DATA AS 'VIP_FLG'
BY AIR_KEY
WHERE UDID EQ 'VIP'
ON TABLE HOLD AS UDIDHOLD1
END
-RUN

DEFINE FILE UDIDHOLD1
VIP_FLAG/A1 = IF VIP_FLG NE ' ' THEN 'V' ELSE ' ';
END
TABLE FILE UDIDHOLD1
PRINT VIP_FLAG
BY AIR_KEY
ON TABLE HOLD AS UDIDHOLD
END
-RUN


-IF &RECORDS EQ 0 THEN GOTO NOREC_VIP;

JOIN LEFT_OUTER AIR_KEY IN BDRHLD1 TO AIR_KEY IN UDIDHOLD AS J1
-RUN
-GOTO RECVIP;


-NOREC_VIP;
DEFINE FILE BDRHLD1
VIP_FLAG/A1 = ' ';
END
-RUN


-RECVIP;

TABLE FILE BDRHLD1
PRINT 
  ADIR_STP
  AIRCRAFT_TYPE
  AIR_SELECT
  ABOOK_CNT
  ABOOK_FARE
  AIBOOK_CNT
  AGENT_NUM 
  AIR_KEY   
  INTL_DOM 
  AIRLINE   
  AIRLINE_FEE   
  AIRLINE_NAME 
  AL_MILE_DSC
  AL_MILE_KEY
  AL_TKTNUM
  AR_BRANCH
  AROLL_DSC3
  AROLL_DSC4
  AROLL_DSC5
  AROLL_LEV5
  AROLL_DSC6
  AROLL_LEV6
  AROLL_DSC7
  AROLL_LEV7
  AROLL_DSC11
  AROLL_LEV11
  ARR_DAY   
  ARR_TIME
  AUX_NON_MIR   
  AUX_TKTLS_PNR 
  AUX_TKTLS_NUM
  BASE_FARE
  BASE_FARE1
  BING_CRD
  BOOK_DT   
  BR_CL_IDX 
  BW_SVC
  C_ITIN
  CARD
  CARD_NUM  
  CARD_NUM1 
  CARD1_NUM 
  CCARD 
  CCARD1    
  CCARD2    
  CCARD3    
  CCARD5
  CCARD6
  CCARD7
  CGCARD
  CH_MILE_DSC
  CH_MILE_KEY
  CO_MILE_DSC
  CO_MILE_DSC1
  CO_MILE_KEY
  CO_MILE_KEY1
  CHG_COD
  EMB_APT_CD
  RTE_APT_CD 
  CL_CAT    
  CLASS 
  CLASS_CAT 
  CLIENT_NAME
  CLIENT_NUM
  CNTRY
  COM_AMTA  
  COM_AMT   
  CRD_CRD   
  CC_NUM
  CREDIT_CARD
  DEPT_MONTH
  DEPT_YEAR 
  DIR_CP_CD 
  DIR_CP_NM 
  DISSAVINGS    
  DOC_NUMBER
  DOC_TYPE
  DOD_PAX_CAT   
  DPT_DAY   
  DPT_TIME  
  DST_APC
  EMBARK
  EMB_APT_NM
  EMB_CTY_NM
  EMB_CNTRY_CODE
  EMB_CTY_CD
  EMAIL_ADR
  EX_FLAG
  EX_RF_FLAG
  EXCH_NET_FARE
  EXCH_NET_TAX
  EXCHG_SALE
  EXEC
  FARE_BAS
  FARE_PAID 
  FDST1
  FLVL1
  FLIGHT
  FLT_RANGE
  FLT_RANGE2
  FLIGHT_DURATION
  FNL_DEST_AIRPORT  
  FNL_CCODE
  FST_DPT_DATE
  FST_DEST_DEPART_DATE
  FULLE_FARE
  GROSS_DSAVE   
  GROSS_FARE    
  GROUP_CODE
  GSA_GTR
  IBOOK
  IBOOK_CNT
  IBOOK_FARE
  ID1
  ID2
  ID3
  ID4
  IEBOOK_CNT
  IEBOOK_FARE
  INT_CODE  
  INVOICE_NUM 
  JHA_TRP
  JH_DISSV
  KOLEV
  LAYOVER
  LEVEL_DESC    
  EMP_ID    
  LEVEL1
  LEVEL2    
  LEVEL3 
  LEVEL4
  LEVEL5
  LEVEL6
  LEVEL7
  LVSEL
  MIR_TYPE  
  MILE
  MILE_DSC
  MIL_DSC2
  MRK_TKT_CNT   
  MTG_NUM
  MX_CC
  NCR_KEY
  NCR_DESC
  ND_APTS
  ND_CITY_NM
  ND_ORG_CD
  ND_DST_CD
  NET_TKT_CNT   
  NET_TKT_CNT1  
  NEW_ADV_PURCH 
  NEW_SEG_AMT
  NEW_SEG_TAX
  NEW_SEG_COUNT 
  NEW_SEG_DISC  
  NEW_SEG_MILES
  NHR_DESC
  NOCAR_KEY
  NOCR_KEY
  NOHTL_KEY     
  NOREF_SEG_COUNT  
  NONREF_FLAG
  NRFLAG
  ORG_APC
  ORG_CNTRY_CODE
  ORG_DST
  ORGD
  OTFLAG
  OUTBD_CTY
  PASSNGR_NAME 
  PCG_KEY
  PENALTY_AMT
  PNTLY_CNT
  PNR_LOCATOR
  PROD_COD
  PROJ_NBR
  REF_E_CNT 
  REF_EXCH_CNT  
  REFEXCH   
  REFUSAL_DESC  
  REFUSE_CODE   
  REFUSE_KEY      
  RF_FLAG
  RNDT_FLAG
  RTE_APT_NM 
  RTE_CTY_NM
  RTE_CNTRY_CODE 
  RTE_CTY_CD
  RTE_STATE
  SAVINGS   
  SEG_AMT   
  SEG_COM
  SEG_COUNT 
  SEG_DESIG 
  SEG_DISCOUNT  
  SEG_LOWEST    
  SEG_MILES 
  SEG_NBR   
  SEG_STANDARD  
  SEG_TAX
  SIBOOK_CNT
  STAY  
  STOP_CNT
  TICKET_BRANCH 
  TKT_AMOUNT
  TKT_DATE  
  TKT_NUM   
  TKT_PURCH 
  TKT_SORT  
  TKT_TYPE  
  TOUR_CODE 
  TPLEN_FLAG
  TRAN_MONTH    
  TRAN_MY
  TRVL_AUTH
  TVL_AUTH
  TRIPS
  TRIP_LENGTH
  TRIP_PURPOSE
  TRIP_RSN
  TRIPRSN
  TRN_DATE
  TRP_DESC 
  TRP_LEN
  TT_TRP_RSN
  UPCCR
  UPCOSTC
  VAL_AIRLINE   
  VALUA
  VASAVINGS
  VIP_FLAG
  VOID_DATE 
  VOID_STATUS
  WB_MILE_DSC
  WB_MILE_KEY
  XARR_DT   
  XDPT_DT   
  XDPT_DATE
  XFST_DPT
  XPSNGR_NM
  XTKT_DT   
  XTRAN_DT  
  GEO_ZONE
  CTRY_COD
  ADIR_ALL
  DSTATE1
  VAIRN
  VFLAG
  WEEK_NBR
  DPT_MY
  LNAME
  FNAME
ON TABLE HOLD AS &&RPT_HOLD
END
-RUN


-EXTDNE;



