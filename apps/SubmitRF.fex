MAINTAIN FILE HRPTINST AND HRPTFLDS AND RPT_FLDS

CASE TOP
  INFER RPT_FLDS.INST_KEY INTO StkRF;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.COMMON1.INCL1  INTO StkRF1;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.COMMON2.SEQ_NO INTO StkRF2;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.AIR.ID         INTO StkRF3;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.AIRFLDS.SEQ_NO INTO StkRF4;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.CAR.ID         INTO StkRF5;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.CARFLDS.SEQ_NO INTO StkRF6;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.HTL.ID         INTO StkRF7;
	INFER RPT_FLDS.INST_KEY RPT_FLDS.HTLFLDS.SEQ_NO INTO StkRF8;

	INFER HRPTFLDS.INST_KEY INTO CopyTo;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.COMMON1.INCL1  INTO CopyTo1;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.COMMON2.SEQ_NO INTO CopyTo2;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.AIR.ID         INTO CopyTo3;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.AIRFLDS.SEQ_NO INTO CopyTo4;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.CAR.ID         INTO CopyTo5;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.CARFLDS.SEQ_NO INTO CopyTo6;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.HTL.ID         INTO CopyTo7;
	INFER HRPTFLDS.INST_KEY HRPTFLDS.HTLFLDS.SEQ_NO INTO CopyTo8;

  INFER HRPTINST.INST_KEY INTO StkHRI;
  stack clear StkHRI;
  REPOSITION HRPTINST.INST_KEY;
  FOR ALL NEXT HRPTINST.INST_KEY HRPTINST.INTIME INTO StkHRI;
  COMPUTE CNT/I2=1;
  COMPUTE INDX/I5=1;
  COMPUTE XInst_ID/A72=;
  COMPUTE Intime/A18=;
  COMPUTE VIEW/A8=;
  REPEAT WHILE INDX LE StkHRI.Foccount
    COMPUTE XInst_ID = StkHRI(INDX).INST_KEY;
    COMPUTE Intime   = StkHRI(INDX).INTIME;  
    COMPUTE VIEW     = StkHRI(INDX).USE_PARM;  
    stack clear StkRF;
    REPOSITION RPT_FLDS.INST_KEY;
    NEXT RPT_FLDS.INST_KEY INTO StkRF
      WHERE RPT_FLDS.INST_KEY EQ XInst_ID;
    IF StkRF.FocCount GT 0 AND InTime NE ' ' and VIEW NE ' ' THEN
      PERFORM SetHRptFlds;
  ENDREPEAT INDX = INDX + 1;
  COMMIT;
ENDCASE
  
CASE SetHRptFlds     
  stack clear StkRF1 CopyTo1;
  REPOSITION RPT_FLDS.INST_KEY;
	FOR ALL NEXT RPT_FLDS.INST_KEY RPT_FLDS.COMMON1.INCL1     INTO StkRF1
		Where RPT_FLDS.INST_KEY EQ XInst_ID;
		
  COMPUTE CopyTo1(1).INST_KEY = XInst_ID ;
  COMPUTE CopyTo1(1).INTIME   = INTIME ;
  COMPUTE CopyTo1(1).USE_PARM = VIEW ;
	COMPUTE CopyTo1(1).INCL1    = StkRF1(1).INCL1;
	COMPUTE CopyTo1(1).INCL2    = StkRF1(1).INCL2;
	COMPUTE CopyTo1(1).INCL3    = StkRF1(1).INCL3;
	
	REPOSITION HRPTFLDS.RPT_INST.INST_KEY 
	FOR ALL INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME HRPTFLDS.USE_PARM
	  HRPTFLDS.COMMON1.INCL1 HRPTFLDS.COMMON1.INCL2 HRPTFLDS.COMMON1.INCL3 
	    FROM CopyTo1;

  stack clear StkRF2 CopyTo2;
  REPOSITION RPT_FLDS.RPT_INST.INST_KEY;
 	FOR ALL NEXT RPT_FLDS.INST_KEY RPT_FLDS.COMMON2.SEQ_NO    INTO StkRF2
  	Where RPT_FLDS.INST_KEY EQ XInst_ID;

	COMPUTE CNT = 1;
	REPEAT WHILE CNT LE StkRF2.FOCCOUNT
	  COMPUTE CopyTo2(CNT).INST_KEY   = XInst_ID ;
	  COMPUTE CopyTo2(CNT).INTIME     = INTIME ;
	  COMPUTE CopyTo2(CNT).USE_PARM   = VIEW ;
	  COMPUTE CopyTo2(CNT).SEQ_NO     = StkRF2(CNT).SEQ_NO; ;
	  COMPUTE CopyTo2(CNT).ID_LEVEL1  = StkRF2(CNT).ID_LEVEL1 ;
	  COMPUTE CopyTo2(CNT).ID_LEVEL2  = StkRF2(CNT).ID_LEVEL2 ;
	  COMPUTE CopyTo2(CNT).ID_LEVEL3  = StkRF2(CNT).ID_LEVEL3;
	ENDREPEAT CNT = CNT + 1;
	
	REPOSITION HRPTFLDS.RPT_INST.INST_KEY 
  FOR ALL INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME HRPTFLDS.COMMON2.SEQ_NO 
	  HRPTFLDS.ID_LEVEL1 HRPTFLDS.ID_LEVEL2 HRPTFLDS.ID_LEVEL3 FROM CopyTo2;
  
  COMPUTE VTYPE/A1=MASK(VIEW,'9');
  IF VTYPE EQ 'C' THEN
    PERFORM UPDCAR;
  ELSE IF VTYPE EQ 'H' THEN   
    PERFORM UPDHTL;
  ELSE
    PERFORM UPDAIR;
ENDCASE

CASE UPDAIR
	stack clear StkRF3 StkRF4 CopyTo3 CopyTo4;  	
	REPOSITION RPT_FLDS.RPT_INST.INST_KEY;
	FOR ALL NEXT RPT_FLDS.INST_KEY RPT_FLDS.AIR.INCL1		INTO StkRF3
		Where RPT_FLDS.INST_KEY EQ XInst_ID;
			
	COMPUTE CopyTo3(1).INST_KEY    = XInst_ID ;
	COMPUTE CopyTo3(1).INTIME      = InTime;
	COMPUTE CopyTo3(1).USE_PARM    = VIEW ;
	COMPUTE CopyTo3(1).INCL1       = StkRF3(1).INCL1;
	COMPUTE CopyTo3(1).INCL2       = StkRF3(1).INCL2;
	COMPUTE CopyTo3(1).INCL3       = StkRF3(1).INCL3;
	COMPUTE CopyTo3(1).INCL4       = StkRF3(1).INCL4;
	COMPUTE CopyTo3(1).INCL5       = StkRF3(1).INCL5;
	COMPUTE CopyTo3(1).INCL6       = StkRF3(1).INCL6;
	COMPUTE CopyTo3(1).INCL7       = StkRF3(1).INCL7;
	COMPUTE CopyTo3(1).INCL8       = StkRF3(1).INCL8;
	COMPUTE CopyTo3(1).INTDOMT     = StkRF3(1).INTDOMT;
	COMPUTE CopyTo3(1).INTDOMS     = StkRF3(1).INTDOMS;
	COMPUTE CopyTo3(1).RANKBYTOP1  = StkRF3(1).RANKBYTOP1;
	COMPUTE CopyTo3(1).RANKMETHOD  = StkRF3(1).RANKMETHOD;
	COMPUTE CopyTo3(1).CLASSCAT_A  = StkRF3(1).CLASSCAT_A;
	COMPUTE CopyTo3(1).CLASSCAT_F  = StkRF3(1).CLASSCAT_F;
	COMPUTE CopyTo3(1).CLASSCAT_B  = StkRF3(1).CLASSCAT_B;
	COMPUTE CopyTo3(1).CLASSCAT_C  = StkRF3(1).CLASSCAT_C;
	COMPUTE CopyTo3(1).CLASSCAT_D  = StkRF3(1).CLASSCAT_D;
	COMPUTE CopyTo3(1).TRANS_TYPE_S    = StkRF3(1).TRANS_TYPE_S;
	COMPUTE CopyTo3(1).TRANS_TYPE_E    = StkRF3(1).TRANS_TYPE_E;
	COMPUTE CopyTo3(1).TRANS_TYPE_R    = StkRF3(1).TRANS_TYPE_R;
	COMPUTE CopyTo3(1).TRANS_TYPE_V    = StkRF3(1).TRANS_TYPE_V;
	COMPUTE CopyTo3(1).ADV_PUR_A       = StkRF3(1).ADV_PUR_A;
	COMPUTE CopyTo3(1).ADV_PUR_0       = StkRF3(1).ADV_PUR_0;
	COMPUTE CopyTo3(1).ADV_PUR_7       = StkRF3(1).ADV_PUR_7;
	COMPUTE CopyTo3(1).ADV_PUR_14      = StkRF3(1).ADV_PUR_14;
	COMPUTE CopyTo3(1).ADV_PUR_21      = StkRF3(1).ADV_PUR_21;
	COMPUTE CopyTo3(1).RANKBYTOP2      = StkRF3(1).RANKBYTOP2;
	COMPUTE CopyTo3(1).CITYPAIRFLD     = StkRF3(1).CITYPAIRFLD;
	
	REPOSITION HRPTFLDS.INST_KEY HRPTFLDS.INTIME
	FOR 1 INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME HRPTFLDS.AIR.ID 
	HRPTFLDS.AIR.INCL1 HRPTFLDS.AIR.INCL2 HRPTFLDS.AIR.INCL3 HRPTFLDS.AIR.INCL4
	HRPTFLDS.AIR.INCL5 HRPTFLDS.AIR.INCL6	HRPTFLDS.AIR.INCL7 HRPTFLDS.AIR.INCL8 
	HRPTFLDS.AIR.INTDOMT      HRPTFLDS.AIR.INTDOMS      HRPTFLDS.AIR.RANKBYTOP1
	HRPTFLDS.AIR.RANKMETHOD   HRPTFLDS.AIR.CLASSCAT_A   HRPTFLDS.AIR.CLASSCAT_F
	HRPTFLDS.AIR.CLASSCAT_B   HRPTFLDS.AIR.CLASSCAT_C   HRPTFLDS.AIR.CLASSCAT_D
	HRPTFLDS.AIR.TRANS_TYPE_S HRPTFLDS.AIR.TRANS_TYPE_E HRPTFLDS.AIR.TRANS_TYPE_R
	HRPTFLDS.AIR.TRANS_TYPE_V HRPTFLDS.AIR.ADV_PUR_A    HRPTFLDS.AIR.ADV_PUR_0
	HRPTFLDS.AIR.ADV_PUR_7    HRPTFLDS.AIR.ADV_PUR_14   HRPTFLDS.AIR.ADV_PUR_21
	HRPTFLDS.AIR.RANKBYTOP2   HRPTFLDS.AIR.CITYPAIRFLD
	FROM CopyTo3(1)

  REPOSITION RPT_FLDS.RPT_INST.INST_KEY;
	FOR ALL NEXT RPT_FLDS.INST_KEY  RPT_FLDS.AIRFLDS.SEQ_NO INTO StkRF4
		Where RPT_FLDS.INST_KEY EQ XInst_ID;
		
	COMPUTE CNT = 1;
	REPEAT WHILE CNT LE StkRF4.FOCCOUNT
		COMPUTE CopyTo4(CNT).INST_KEY      = XInst_ID;
		COMPUTE CopyTo4(CNT).INTIME        = InTime;
		COMPUTE CopyTo4(CNT).USE_PARM      = VIEW ;
		COMPUTE CopyTo4(CNT).SEQ_NO        = StkRF4(CNT).SEQ_NO;
		COMPUTE CopyTo4(CNT).PASSENGER     = StkRF4(CNT).PASSENGER;
		COMPUTE CopyTo4(CNT).TICKET_NO     = StkRF4(CNT).TICKET_NO;
		COMPUTE CopyTo4(CNT).ORG_AIRPORT   = StkRF4(CNT).ORG_AIRPORT;
		COMPUTE CopyTo4(CNT).RTE_AIRPORT   = StkRF4(CNT).RTE_AIRPORT;
		COMPUTE CopyTo4(CNT).VAL_AIR       = StkRF4(CNT).VAL_AIR;
		COMPUTE CopyTo4(CNT).FLOWN_AIR     = StkRF4(CNT).FLOWN_AIR;
		COMPUTE CopyTo4(CNT).REFUSE_CODE   = StkRF4(CNT).REFUSE_CODE;
		COMPUTE CopyTo4(CNT).CP_AIRPORT    = StkRF4(CNT).CP_AIRPORT;
	ENDREPEAT CNT = CNT + 1;
	
		REPOSITION HRPTFLDS.RPT_INST.INST_KEY; 
		FOR ALL INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME
		HRPTFLDS.AIRFLDS.SEQ_NO HRPTFLDS.AIRFLDS.PASSENGER HRPTFLDS.TICKET_NO
		HRPTFLDS.ORG_AIRPORT HRPTFLDS.RTE_AIRPORT
		HRPTFLDS.VAL_AIR HRPTFLDS.FLOWN_AIR HRPTFLDS.AIRFLDS.REFUSE_CODE
		HRPTFLDS.CP_AIRPORT FROM CopyTo4;
ENDCASE

CASE UPDCAR
  stack clear StkRF5 StkRF6 CopyTo5 CopyTo6;  	
	REPOSITION RPT_FLDS.RPT_INST.INST_KEY;
	FOR ALL NEXT RPT_FLDS.INST_KEY RPT_FLDS.CAR.INCL1 INTO StkRF5
	  Where RPT_FLDS.INST_KEY EQ XInst_ID;
				
	COMPUTE CNT = 1;
	COMPUTE CopyTo5(CNT).INST_KEY     = XInst_ID;
	COMPUTE CopyTo5(CNT).INTIME       = InTime;
	COMPUTE CopyTo5(CNT).USE_PARM     = VIEW ;
	COMPUTE CopyTo5(CNT).ID           = StkRF5(CNT).ID;
	COMPUTE CopyTo5(CNT).INCL1        = StkRF5(CNT).INCL1;
	COMPUTE CopyTo5(CNT).INCL2        = StkRF5(CNT).INCL2;
	COMPUTE CopyTo5(CNT).INCL3        = StkRF5(CNT).INCL3;
	COMPUTE CopyTo5(CNT).INCL4        = StkRF5(CNT).INCL4;
	COMPUTE CopyTo5(CNT).INCL5        = StkRF5(CNT).INCL5;
	COMPUTE CopyTo5(CNT).INCL6        = StkRF5(CNT).INCL6;
	COMPUTE CopyTo5(CNT).RANKBYTOP    = StkRF5(CNT).RANKBYTOP;
	COMPUTE CopyTo5(CNT).RANKMETHOD   = StkRF5(CNT).RANKMETHOD;
	COMPUTE CopyTo5(CNT).RATEALL      = StkRF5(CNT).RATEALL;
	COMPUTE CopyTo5(CNT).RATE1        = StkRF5(CNT).RATE1;
	COMPUTE CopyTo5(CNT).RATE2        = StkRF5(CNT).RATE2;
	COMPUTE CopyTo5(CNT).RATE3        = StkRF5(CNT).RATE3;
	COMPUTE CopyTo5(CNT).RATE4        = StkRF5(CNT).RATE4;
	COMPUTE CopyTo5(CNT).RATE5        = StkRF5(CNT).RATE5;
	COMPUTE CopyTo5(CNT).RATE6        = StkRF5(CNT).RATE6;
	
	REPOSITION HRPTFLDS.RPT_INST.INST_KEY 
	FOR 1 INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME
	HRPTFLDS.CAR.ID HRPTFLDS.CAR.INCL1 HRPTFLDS.CAR.INCL2 HRPTFLDS.CAR.INCL3 
	HRPTFLDS.CAR.INCL4 HRPTFLDS.CAR.INCL5 HRPTFLDS.CAR.INCL6 
	HRPTFLDS.CAR.RANKBYTOP 
	HRPTFLDS.CAR.RANKMETHOD HRPTFLDS.CAR.RATEALL HRPTFLDS.CAR.RATE1
	HRPTFLDS.CAR.RATE2 HRPTFLDS.CAR.RATE3 HRPTFLDS.CAR.RATE4 HRPTFLDS.CAR.RATE5
	HRPTFLDS.CAR.RATE6 FROM CopyTo5(CNT);

  REPOSITION RPT_FLDS.RPT_INST.INST_KEY;
	FOR ALL NEXT RPT_FLDS.INST_KEY RPT_FLDS.CARFLDS.SEQ_NO INTO StkRF6
	Where RPT_FLDS.INST_KEY EQ XInst_ID;
	COMPUTE CNT = 1;
	
	REPEAT WHILE CNT LE StkRF6.FOCCOUNT	
		COMPUTE CopyTo6(CNT).INST_KEY     = XInst_ID;
		COMPUTE CopyTo6(CNT).INTIME       = InTime;
		COMPUTE CopyTo6(CNT).USE_PARM     = VIEW ;
		COMPUTE CopyTo6(CNT).SEQ_NO       = StkRF6(CNT).SEQ_NO;
		COMPUTE CopyTo6(CNT).PASSENGER    = StkRF6(CNT).PASSENGER;
		COMPUTE CopyTo6(CNT).VENDOR_CODE  = StkRF6(CNT).VENDOR_CODE;
		COMPUTE CopyTo6(CNT).REFUSE_CODE  = StkRF6(CNT).REFUSE_CODE;
		COMPUTE CopyTo6(CNT).PICKUP_CITY  = StkRF6(CNT).PICKUP_CITY;
		COMPUTE CopyTo6(CNT).DROPOFF_CITY = StkRF6(CNT).DROPOFF_CITY;
		COMPUTE CopyTo6(CNT).CAR_TYPE     = StkRF6(CNT).CAR_TYPE;
	ENDREPEAT CNT = CNT + 1;
	
	REPOSITION HRPTFLDS.RPT_INST.INST_KEY 
	FOR ALL INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME
	HRPTFLDS.CARFLDS.SEQ_NO HRPTFLDS.CARFLDS.PASSENGER HRPTFLDS.VENDOR_CODE
	HRPTFLDS.CARFLDS.REFUSE_CODE HRPTFLDS.CARFLDS.PICKUP_CITY 
	HRPTFLDS.CARFLDS.DROPOFF_CITY HRPTFLDS.CAR_TYPE FROM CopyTo6;
ENDCASE

CASE UPDHTL
  stack clear StkRF7 StkRF8 CopyTo7 CopyTo8;  	
	REPOSITION RPT_FLDS.RPT_INST.INST_KEY;
	FOR ALL NEXT RPT_FLDS.INST_KEY RPT_FLDS.HTL.INCL1		   INTO StkRF7
		Where RPT_FLDS.INST_KEY EQ XInst_ID;
		
	COMPUTE CopyTo7(1).INST_KEY     = XInst_ID ;
	COMPUTE CopyTo7(1).INTIME       = InTime;
	COMPUTE CopyTo7(1).USE_PARM     = VIEW ;	
	COMPUTE CopyTo7(1).ID           = StkRF7(1).ID ;
	COMPUTE CopyTo7(1).INCL1        = StkRF7(1).INCL1 ;
	COMPUTE CopyTo7(1).INCL2        = StkRF7(1).INCL2 ;
	COMPUTE CopyTo7(1).INCL3        = StkRF7(1).INCL3 ;
	COMPUTE CopyTo7(1).INCL4        = StkRF7(1).INCL4 ;
	COMPUTE CopyTo7(1).RANKBYTOP1   = StkRF7(1).RANKBYTOP1 ;
	COMPUTE CopyTo7(1).RANKMETHOD   = StkRF7(1).RANKMETHOD ;
	COMPUTE CopyTo7(1).RANKBYTOP2   = StkRF7(1).RANKBYTOP2 ;
	
	REPOSITION HRPTFLDS.RPT_INST.INST_KEY 
	FOR ALL INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME
	HRPTFLDS.HTL.ID HRPTFLDS.HTL.INCL1 HRPTFLDS.HTL.INCL2 HRPTFLDS.HTL.INCL3 
	HRPTFLDS.HTL.INCL4 HRPTFLDS.HTL.RANKBYTOP1 HRPTFLDS.HTL.RANKMETHOD 
	HRPTFLDS.HTL.RANKBYTOP2	FROM CopyTo7(1);

  REPOSITION RPT_FLDS.RPT_INST.INST_KEY;
	FOR ALL NEXT RPT_FLDS.INST_KEY RPT_FLDS.HTLFLDS.SEQ_NO INTO StkRF8
		Where RPT_FLDS.INST_KEY EQ XInst_ID;
		
	COMPUTE CNT = 1;
	REPEAT WHILE CNT LE StkRF8.FOCCOUNT
		COMPUTE CopyTo8(CNT).INST_KEY     = XInst_ID;
		COMPUTE CopyTo8(CNT).INTIME       = InTime;
		COMPUTE CopyTo8(CNT).USE_PARM     = VIEW ;
		COMPUTE CopyTo8(CNT).SEQ_NO       = StkRF8(CNT).SEQ_NO;
		COMPUTE CopyTo8(CNT).PASSENGER    = StkRF8(CNT).PASSENGER;
		COMPUTE CopyTo8(CNT).CHAIN_CODE   = StkRF8(CNT).CHAIN_CODE;
		COMPUTE CopyTo8(CNT).HTL_CITY     = StkRF8(CNT).HTL_CITY;
		COMPUTE CopyTo8(CNT).REFUSE_CODE  = StkRF8(CNT).REFUSE_CODE;
	ENDREPEAT CNT = CNT + 1;
		
	REPOSITION HRPTFLDS.RPT_INST.INST_KEY 
	FOR ALL INCLUDE HRPTFLDS.INST_KEY HRPTFLDS.INTIME
	HRPTFLDS.HTLFLDS.SEQ_NO HRPTFLDS.HTLFLDS.PASSENGER HRPTFLDS.CHAIN_CODE
	HRPTFLDS.HTL_CITY HRPTFLDS.HTLFLDS.REFUSE_CODE FROM CopyTo8;
ENDCASE

END