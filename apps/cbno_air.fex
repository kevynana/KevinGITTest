-INCLUDE SETECHO
-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* Get Level selected for 2nd line of header
 
-* ADDED TRANTYPE INCLUDE - JK 12/16/14 STORY ID S-06492

  
SET ASNAMES=ON
SET HOLDLIST=PRINTONLY

-GOTO Skipthis;
 TABLE FILE ROLLUP
PRINT ROLLFY FYFLAG
WHERE ROLLUP EQ '&&ROLLUP.EVAL'
ON TABLE SAVE AS FYEAR
END
-RUN
 
-READ FYEAR &ROLLFY.A2 &FYFLAG.A1
-SET &&ROLLFY = '&ROLLFY.EVAL';
-SET &&FYFLAG = '&FYFLAG.EVAL';
-CLOSE FYEAR


-Skipthis

TABLE FILE BRPTINST
-*TABLE FILE RPT_INST
PRINT RPT_TITLE2
IF INST_KEY EQ &&IKEY
ON TABLE SAVE AS RPTT2
END
-RUN

 
-READ RPTT2 &RPTT2.A60
-CLOSE RPTT2


-TYPE &&ROLLFY
-TYPE &&FYFLAG


-TYPE &&FROMDT
-TYPE &&TODT
-TYPE &&FXDATE
-TYPE &&TXDATE 

 

 
DEFINE FILE SR_50
LEVEL_DESC/A60 = &&LDESC;

TDATE1/YYMD=&&TODT.EVAL;
TDATE2/YYMD=&&TXDATE.EVAL;


-* Year eval


P_MONTH/MDYY=TDATE1;
P2_MONTH/MDYY = TDATE2;

P_EOM/MDYY=DATEMOV(P_MONTH, 'EOM');
P2_EOM/MDYY=DATEMOV(P2_MONTH, 'EOM2');

-* RUN_EOM is the End of Month we are executing.
RUN_EOM/M=P_EOM;
-* RUN_EOM2 is the Prior End of Month we are executing.
RUN_EOM2/M=P2_EOM;
-* Determine End of Quarters for Rollups
RFY/M=IF ROLL_FY EQ '' OR '1' OR '01' OR 'X' THEN 1 ELSE EDIT(ROLL_FY);
Q1B/M=RFY;
Q1E/M=IF (RFY + 3) - 1 LT 12 THEN (RFY + 3) - 1 ELSE (RFY + 3) - 1 - 12;
Q2B/M=IF (RFY + 3) GT 12 THEN (RFY + 3) - 12 ELSE (RFY + 3);
Q2E/M=IF (RFY + 6) - 1 LT 12 THEN (RFY + 6) - 1 ELSE (RFY + 6) - 1 - 12;
Q3B/M=IF (RFY + 6) GT 12 THEN (RFY + 6) - 12 ELSE (RFY + 6);
Q3E/M=IF (RFY + 9) - 1 LT 12 THEN (RFY + 9) - 1 ELSE (RFY + 9) - 1 - 12;
Q4B/M=IF (RFY + 9) GT 12 THEN (RFY + 9) - 12 ELSE (RFY + 9);
Q4E/M=IF (RFY + 12) - 1 LT 12 THEN (RFY + 12) - 1 ELSE (RFY + 12) - 1 - 12;


ANNUAL/M=Q4E;
ANNUAL_YY/YY=P_EOM;
ANNUAL_YY1/YY=IF RUN_EOM GT Q4E THEN ANNUAL_YY + 1 ELSE ANNUAL_YY;
ANNUAL_A8MDYY/A8MDYY=EDIT(Q4E) | '01' | EDIT(ANNUAL_YY1);
ANNUAL_MONTH/MDYY=ANNUAL_A8MDYY;
ANNUAL_END/MDYY=DATEMOV(ANNUAL_MONTH, 'EOM');

P_ANNUAL/M=Q4E;
P_ANNUAL_YY/YY=P2_EOM;
P_ANNUAL_YY1/YY=IF RUN_EOM2 GT Q4E THEN P_ANNUAL_YY + 1 ELSE P_ANNUAL_YY;
P_ANNUAL_A8MDYY/A8MDYY=EDIT(Q4E) | '01' | EDIT(P_ANNUAL_YY1);
P_ANNUAL_MONTH/MDYY=P_ANNUAL_A8MDYY;
P_ANNUAL_END/MDYY=DATEMOV(P_ANNUAL_MONTH, 'EOM');


Q4_END/MDYY=ANNUAL_END;
Q4_BEGIN/MDYY=DATEMOV(DATEADD(Q4_END, 'M', (-2)), 'BOM');
Q3_END/MDYY=Q4_BEGIN - 1;
Q3_BEGIN/MDYY=DATEMOV(DATEADD(Q3_END, 'M', (-2)), 'BOM');
Q2_END/MDYY=Q3_BEGIN - 1;
Q2_BEGIN/MDYY=DATEMOV(DATEADD(Q2_END, 'M', (-2)), 'BOM');
Q1_END/MDYY=Q2_BEGIN - 1;
Q1_BEGIN/MDYY=DATEMOV(DATEADD(Q1_END, 'M', (-2)), 'BOM');


PQ4_END/MDYY=P_ANNUAL_END;
PQ4_BEGIN/MDYY=DATEMOV(DATEADD(PQ4_END, 'M', (-2)), 'BOM');
PQ3_END/MDYY=PQ4_BEGIN - 1;
PQ3_BEGIN/MDYY=DATEMOV(DATEADD(PQ3_END, 'M', (-2)), 'BOM');
PQ2_END/MDYY=PQ3_BEGIN - 1;
PQ2_BEGIN/MDYY=DATEMOV(DATEADD(PQ2_END, 'M', (-2)), 'BOM');
PQ1_END/MDYY=PQ2_BEGIN - 1;
PQ1_BEGIN/MDYY=DATEMOV(DATEADD(PQ1_END, 'M', (-2)), 'BOM');


P_BOM/MDYY=DATEMOV(P_MONTH, 'BOM');
P_BOQ/MDYY=DATEMOV(P_MONTH, 'BOQ');
P_BOY/MDYY=DATEMOV(P_MONTH, 'BOY');

P2_BOM/MDYY=DATEMOV(P2_MONTH, 'BOM');
P2_BOQ/MDYY=DATEMOV(P2_MONTH, 'BOQ');
P2_BOY/MDYY=DATEMOV(P2_MONTH, 'BOY');
CLIENT/A8 = '&&ROLLUP.EVAL';

 
FDATE/YYMD=&&FROMDT.EVAL;
EDATE/YYMD=&&TODT.EVAL;
BOM_DATE/YYMD=DATEMOV(EDATE,'BOM');
EOM_DATE/YYMD=DATEMOV(EDATE,'EOM');
EOM_DATE1/MDYY=DATEMOV(EDATE,'EOM');
ANNUAL_BEGIN/MDYY=Q1_BEGIN;


P_FDATE/YYMD=&&FXDATE.EVAL;
P_EDATE/YYMD=&&TXDATE.EVAL;
P_BOM_DATE/YYMD=DATEMOV(P_EDATE,'BOM');
P_EOM_DATE/YYMD=DATEMOV(P_EDATE,'EOM');
P_EOM_DATE1/MDYY=DATEMOV(P_EDATE,'EOM');
P_ANNUAL_BEGIN/MDYY=PQ1_BEGIN;
 

-* Determine End of Year Month for Rollups

CLIENT/A8 = '&&ROLLUP.EVAL';


W_QTR/A1= IF EOM_DATE FROM Q1_BEGIN TO Q1_END THEN '1' ELSE
          IF EOM_DATE FROM Q2_BEGIN TO Q2_END THEN '2' ELSE
          IF EOM_DATE FROM Q3_BEGIN TO Q3_END THEN '3' ELSE
          IF EOM_DATE FROM Q4_BEGIN TO Q4_END THEN '4' ELSE '0';
 
MD/A1 = IF (TRN_DATE GE BOM_DATE) AND
           (TRN_DATE LE EOM_DATE)
            THEN 'Y' ELSE 'N';

P_MD/A1 = IF (TRN_DATE GE P_BOM_DATE) AND
           (TRN_DATE LE P_EOM_DATE)
            THEN 'Y' ELSE 'N';
 

 
YD/A1 = IF (TRN_DATE GE ANNUAL_BEGIN) AND
           (TRN_DATE LE EOM_DATE) THEN 'Y' ELSE 'N';
           
           
P_YD/A1 = IF (TRN_DATE GE P_ANNUAL_BEGIN) AND
           (TRN_DATE LE P_ANNUAL_END) THEN 'Y' ELSE 'N';
                      
 
FMD/QY=EOM_DATE;
TRAN/MDYY = TRN_DATE;
DATE1/MTY = TRN_DATE;
 
P_FMD/QY=P_EOM_DATE;

12DATE/A1 = IF (TRN_DATE GE ANNUAL_BEGIN) AND
               (TRN_DATE LE EOM_DATE1) THEN 'Y' ELSE 'N';
P_12DATE/A1 = IF (TRN_DATE GE P_ANNUAL_BEGIN) AND
               (TRN_DATE LE P_ANNUAL_END) THEN 'Y' ELSE 'N';

DATE/MTY = IF 12DATE EQ 'Y' THEN DATE1 ELSE ' ';           

P_DATE/MTY = IF P_12DATE EQ 'Y' THEN DATE1 ELSE ' ';

 
FARE_PAID/D15.2 = SEG_AMT + SEG_TAX;
 
NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
 
NET_TKT_CNT2/P12      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN (-1) ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;


TKT_CNT/D8CS = IF (SEG_NBR EQ '01') AND (FARE_PAID GE 0) AND (SEG_COUNT
  EQ 1) THEN 1 ELSE 0;
 
TON_C02/D12.2 = 
  IF ((CITYPAIR.SEG_MILES GE 1) AND (CITYPAIR.MILES LE 300) OR 
           (CITYPAIR.SEG_MILES LE (-1)) AND (CITYPAIR.MILES GE (-300))) THEN
            (CITYPAIR.SEG_MILES * .00029) ELSE 
  IF ((CITYPAIR.SEG_MILES GE 301) AND (CITYPAIR.SEG_MILES LE 1000) OR 
           (CITYPAIR.SEG_MILES LE (-301)) AND (CITYPAIR.SEG_MILES GE (-1001))) THEN 
           (CITYPAIR.SEG_MILES * .00020) ELSE  
  IF ((CITYPAIR.SEG_MILES GE 1001) AND (CITYPAIR.SEG_MILES LE 99999) OR 
           (CITYPAIR.SEG_MILES LE (-1001)) AND (CITYPAIR.SEG_MILES GE (-99999))) THEN 
           (CITYPAIR.SEG_MILES * .00018) ELSE 0;   
                 
NEW_SEG_MILES/D9CS = CITYPAIR.MILES; 
2V_C02/D12.2 =  (CITYPAIR.SEG_MILES * .0001934);

-********************************* YTD *********************************
YNET_TKT/P12 = IF YD EQ 'Y' AND VOID_DATE EQ 0 THEN NET_TKT_CNT ELSE 0;
YMILES/D12 = IF YD EQ 'Y' AND VOID_DATE EQ 0 THEN NEW_SEG_MILES ELSE 0;
YTON_C02/D12.2 = IF YD EQ 'Y' AND VOID_DATE EQ 0 THEN TON_C02 ELSE 0;
2VYTON_C02/D12.2 = IF YD EQ 'Y' AND VOID_DATE EQ 0 THEN 2V_C02 ELSE 0;

-***************************PRIOR YTD *********************************

PYNET_TKT/P12 = IF P_YD EQ 'Y' AND VOID_DATE EQ 0 THEN NET_TKT_CNT ELSE 0;
PYMILES/D12 = IF P_YD EQ 'Y' AND VOID_DATE EQ 0 THEN NEW_SEG_MILES ELSE 0;
PYTON_C02/D12.2 = IF P_YD EQ 'Y' AND VOID_DATE EQ 0 THEN TON_C02 ELSE 0;
2VPYTON_C02/D12.2 = IF P_YD EQ 'Y' AND VOID_DATE EQ 0 THEN 2V_C02 ELSE 0;

  MONTH/Mtr = TRN_DATE;
  CMO/YYMD = ANNUAL_BEGIN;
  TMO/YYMD = EOM_DATE;
  PCMO/YYMD = P_ANNUAL_BEGIN ;
  PTMO/YYMD= P_ANNUAL_END;
  BEGD/I4YM = CMO;
  ENDD/I4YM = TMO;
  PBEGD/I4YM= PCMO;
  PENDD/I4YM = PTMO;
  NOMONTHS/I3 = YM (BEGD, ENDD, 'I3') + 1;
  PNOMONTHS/I3 = YM (PBEGD, PENDD, 'I3') + 1;
  CFD/M = CMO;
  CMONTH/I2 = CFD;
  TD/M = TRN_DATE;
  TMONTH/I2 = TD;
  TIMER/I3 = IF (TD GE CFD) THEN ((TMONTH - CMONTH) + 1) ELSE
             IF (TD LT CFD) THEN (TMONTH * 20) ELSE 0; 
RPTT2/A60 = '&RPTT2.EVAL'; 

-INCLUDE TRANTYPE

END
 

 
TABLE FILE SR_50
SUM YNET_TKT YMILES YTON_C02 PYNET_TKT PYMILES PYTON_C02 2VYTON_C02 2VPYTON_C02
BY CLIENT
BY LEVEL_DESC
BY PASSNGR_NAME
BY AIRLINE
BY DATE
BY P_DATE
BY ANNUAL_BEGIN
BY P_ANNUAL_BEGIN
BY NOMONTHS
BY PNOMONTHS
BY RPTT2

-* &AIRDATES CANNOT BE USED FOR THIS REPORT B/C IT WILL RUN FOR CURRENT MONTH ONLY INSTEAD OF YTD,QTR, ETC
-* -INCLUDE &AIRDATES
&&WHERE1
&&WHERE2
&&WHERE3
-INCLUDE RPTPARMS
ON TABLE HOLD AS CBNAIR
END
-RUN





 



-IF &RECORDS EQ 0 THEN GOTO NOAIR ELSE GOTO AIR;

-NOAIR
-SET &&NOAIR = 'Y';

 

TABLE FILE SR_50
SUM LEVEL_DESC RPTT2
BY LEVEL_DESC NOPRINT
-INCLUDE RPTPARMS
ON TABLE HOLD AS LEVHLD
END
-RUN


DEFINE FILE LEVHLD
CAPH1/A60 = 'Client Analysis YTD';
CAPH/A60 = LJUST(60, CAPH1, CAPH);
LEVDESC1/A60 = IF &LINES GT 1 THEN 'MULTIPLE HIERARCHIES SELECTED' ELSE LEVEL_DESC;
LEVDESC2/A60 = IF RPTT2 EQ ' ' THEN LEVDESC1 ELSE RPTT2;
LEVDESC/A60 = LJUST(60, LEVDESC2, LEVDESC);
END
TABLE FILE LEVHLD
SUM LEVDESC CAPH1
BY LEVDESC NOPRINT
ON TABLE SAVE AS SAVELEV
END
-RUN
-READ SAVELEV &&LVLD.60. &&CAPH.60.

-GOTO NEXT;



-AIR
-SET &&NOAIR = 'N';

TABLE FILE CBNAIR
SUM LEVEL_DESC RPTT2
BY LEVEL_DESC NOPRINT
ON TABLE HOLD AS LEVHLD
END
-RUN

DEFINE FILE LEVHLD
CAPH1/A60 = 'Client Analysis YTD';
CAPH/A60 = LJUST(60, CAPH1, CAPH);
LEVDESC1/A60 = IF &LINES GT 1 THEN 'MULTIPLE HIERARCHIES SELECTED' ELSE LEVEL_DESC;
LEVDESC2/A60 = IF RPTT2 EQ ' ' THEN LEVDESC1 ELSE RPTT2;
LEVDESC/A60 = LJUST(60, LEVDESC2, LEVDESC);
END
TABLE FILE LEVHLD
SUM LEVDESC CAPH1
BY LEVDESC NOPRINT
ON TABLE SAVE AS SAVELEV
END
-RUN

-READ SAVELEV &&LVLD.60. &&CAPH.60.

-NEXT;



 
 


