-***********************************************************************
-* File: wruntotal.fex
-*   Run scheduled jobs for total company reporting
-***********************************************************************
-* REJ 01/08/2015 S-06494 Added logic to allow the date ranges to to automatically
-*                        generated based on date codes.  Assign Date ranges automatically
-*                        if &fm1_pm1 = 'MTD' OR 'YTD' OR 'QTD' OR 'WTD'
-* 6/22/15 - DEB - S-09727 ADDED SPLSETD FOR  TCVXTPDD
-*  08/23/2016  REJ  S-17914 Changes for ER5.
-*  12/29/2016  REJ  S-28553 Move ER5 My Reports to production.
-*2/08/17-JEM-S-29460-Adding code for ER5 to use &&ROLLEMAIL 
-* 04/17/17 - DLV - S- S-33407  - Added &&D1FM &&D1TO &&D2FM &&D2TO

 
-INCLUDE SETECHO
-*SET TEMPERASE=OFF
-* Subroutine returns the TEMPDIR path
-SET &&WEB_PATH=TEMPPATH(80,'A80');
 
APP MAP WEBTEMP &&WEB_PATH
APP APPENDPATH WEBTEMP
 
-DEFAULT &user='default';
-DEFAULT &&GLO_CHK='N';
-DEFAULT &wrrun='';
-DEFAULT &intime='';
-DEFAULT &orientation='';
 
-SET &&ELINKS='';
-SET &&SCHED='';
-SET &&PUSHNAME='';
 
-DEFAULT &dateType='';
-DEFAULT &outfmt='';
-DEFAULT &outto='';
-DEFAULT &sk_pm='';
-DEFAULT &ELINKS='';
-DEFAULT &DSTSCHEDID='';
-DEFAULT &PUSHNAME='';
-DEFAULT &FROMAVRP='';
-DEFAULT &FROMER5='';
-DEFAULT &ER5_ADHOC='';
-DEFAULT &&ROLLEMAIL='';
 
-SET &&ER5_ADHOC=&ER5_ADHOC;
-SET &&FROMAVRP=&FROMAVRP;
-SET &&FROMER5=&FROMER5;
 
-IF &&FROMAVRP EQ '' AND &&FROMER5 EQ '' GOTO :ER5_CONT;
-IF &&FROMER5 EQ 'Y' GOTO :ER5;
-DEFAULT &gparm='';
 
-SET &in_pm=1;
-SET &sk_pm=1;
-SET &AID='AVRP';
 
APP PREPENDPATH REVIEW_50_SHARED REVIEW_50_AVRP ttapps_sql
-RUN
-GOTO :ER5_CONT;
 
-:ER5
-SET &AID='MR';
APP PREPENDPATH REVIEW_50_SHARED REVIEW_50_MR ttapps_sql
-RUN
-:ER5_CONT
 
 
EX SUUSES
-RUN
 
-RELOAD_BQUE
 
-SET &&WRRUN = 'Y';
-SET &&HLDIKEY=' ';
-SET &&HLDITIME=' ';
-SET &&HEMAIL='N';
-SET &&HFTP='N';
-SET &&SET_DONE = 'N';
-SET &&UDIDUSED='N';
 
-SET &&ELINKS=&ELINKS;
-SET &&SCHED=&DSTSCHEDID;
-SET &&PUSHNAME=&PUSHNAME;
 
-* THESE VARIABLES ARE BEING PASSED FROM ReportCaster
-SET &&IKEY=&in_pm;
-SET &&SKEY=&sk_pm;
-SET &&OUTFMT=IF &outfmt EQ '' THEN 'PDF' ELSE &outfmt;
-SET &&OUTTO=&outto;
-SET &&FM_PM=&fm1_pm1;
-SET &&TO_PM=&to1_pm1;
-SET &&FX_PM=&fx_pm;
-SET &&TX_PM=&tx_pm;
-SET &&CMFM=&cmfm;
-SET &&CMTO=&cmto;
-SET &&PMFM=&pmfm;
-SET &&PMTO=&pmto;
-SET &&CYFM=&cyfm;
-SET &&CYTO=&cyto;
-SET &&PYFM=&pyfm;
-SET &&PYTO=&pyto;
-SET &&D1FM=&d1fm;
-SET &&D1TO=&d1to;
-SET &&D2FM=&d2fm;
-SET &&D2TO=&d2to;
-SET &&DATETYPE= '&dateType.EVAL';
-SET &&ORIENTATION = SUBSTR(15, '&orientation.EVAL',1,1,1,'A1');
-*-SET &&ITIME='WRUNTOTAL';
-SET &&ITIME = IF &intime EQ '' THEN 'WRUNTOTAL' ELSE &intime;
-SET &&WRRUN = IF &&ITIME EQ 'WRUNTOTAL' THEN 'Y' ELSE
-              IF &wrrun EQ '' THEN 'N' ELSE 'Y';
-RUN
 
-IF &&FROMER5 NE 'Y' GOTO :ER5X;
-**** REJ added 02/10/2016 - Not sure what I'm missing.
JOIN CLEAR *
JOIN SET_KEY IN RPT_INST_SQL TO SET_KEY IN RPT_SET_SQL AS J1
-RUN
TABLE FILE RPT_INST_SQL
BY ROLLUP_CODE
WHERE INST_KEY EQ &&IKEY;
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS HROLL01
END
-RUN
-READ HROLL01 &&ROLL.8
 
DEFINE FILE CONTROL
RLC/A8='&&ROLL.EVAL';
END
TABLE FILE CONTROL
PRINT RLC AS ROLLUP_CODE
BY CONTROL_ID
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS HROLL02
END
-RUN
 
MODIFY FILE CONTROL
FIXFORM FROM HROLL02
MATCH CONTROL_ID
 ON NOMATCH REJECT
 ON MATCH UPDATE ROLLUP_CODE
DATA ON HROLL02
END
-RUN
-*********************************************************
-:ER5X
 
DEFINE FILE CONTROL
DEPLOY/A1=IF WEB_RUN EQ 'Y' THEN 'W' ELSE 'L';
END
TABLE FILE CONTROL
PRINT ROLLUP_CODE USER_ID DEPLOY
ON TABLE SAVE AS PARMPASS
END
-RUN
 
-READ PARMPASS &&RTROLL.8 &&UNAME.20 &&DEPLOY.1
 
-IF &&FROMAVRP EQ '' AND &&FROMER5 EQ '' GOTO :AVRP2;
-INCLUDE REVIEW_50_MDB/GET_CURRENT_ROLLUP
 
-* This will log Available Reports with no Instance Key.
-IF &&FROMER5 GT '' GOTO :AVRP2A;
EX REVIEW_50_SHARED/UPDATE_EXECUTION_LOG UID='&USERID',RID='&ROLLUP',PID='&gparm',AID='&AID.EVAL'
-RUN
-GOTO :AVRP2;
 
-* This will log My Reports with the Instance Key.
-:AVRP2A
EX REVIEW_50_SHARED/UPDATE_EXECUTION_LOG UID='&USERID',RID='&ROLLUP',PID='&gparm',AID='&AID.EVAL',IID=&&IKEY
-RUN
 
-:AVRP2
 
-**************************************************************************
-* Assign Date ranges automatically if &fm1_pm1 = 'MTD' OR 'YTD' OR 'QTD' OR 'WTD'
-* Also looks at &fx_pm and if it contains 'PMTD' the previous range
-* is set to the month before current range otherwise it is a year
-* before the current range.
-**************************************************************************
-IF &fm1_pm1 EQ 'MTD' OR 'YTD' OR 'QTD' OR 'WTD' GOTO AUTO_DATES;
-GOTO CONT_DATE;
 
-AUTO_DATES
 
-SET &FILE1=IF &&FROMER5 EQ 'Y' THEN 'RPT_INST_SQL' ELSE 'RPT_INST';
-SET &FILE2=IF &&FROMER5 EQ 'Y' THEN 'RPT_SET_SQL' ELSE 'RPT_SET';
-SET &FILE3=IF &&FROMER5 EQ 'Y' THEN 'ROLLUP_SQL' ELSE 'ROLLUP';
 
JOIN CLEAR *
JOIN SET_KEY IN &FILE1.EVAL TO SET_KEY IN &FILE2.EVAL AS J1
JOIN ROLLUP_CODE IN &FILE1.EVAL TO ROLLUP_CODE IN &FILE3.EVAL AS J2
-RUN
 
DEFINE FILE &FILE1.EVAL
TDATE1/YYMD=&YYMD;
P_MONTH/MDYY=DATEADD(TDATE1, 'M', (-1));
P_BOM/MDYY=DATEMOV(P_MONTH, 'BOM');
P_EOM/MDYY=DATEMOV(P_MONTH, 'EOM');
P_BOY/MDYY=DATEMOV(P_MONTH, 'BOY');
 
TDATE1W/YYMD=END_DATE + 1;
W_MONTH/MDYY=TDATE1W;
P_BOW/MDYY=DATEMOV(W_MONTH, 'BOW');
P_EOW/MDYY=DATEMOV(W_MONTH, 'EOW');
 
-* RUN_EOM is the End of Month we are executing.
RUN_EOM/M=P_EOM;
 
-* Determine End of Quarters for Rollups
RFY/M=IF ROLLUP.ROLL_FY EQ '' OR '1' OR 'X' THEN 1 ELSE EDIT(ROLLUP.ROLL_FY);
Q1B/M=RFY;
Q1E/M=IF (RFY + 3) - 1 LT 12 THEN (RFY + 3) - 1 ELSE (RFY + 3) - 1 - 12;
Q2B/M=IF (RFY + 3) GT 12 THEN (RFY + 3) - 12 ELSE (RFY + 3);
Q2E/M=IF (RFY + 6) - 1 LT 12 THEN (RFY + 6) - 1 ELSE (RFY + 6) - 1 - 12;
Q3B/M=IF (RFY + 6) GT 12 THEN (RFY + 6) - 12 ELSE (RFY + 6);
Q3E/M=IF (RFY + 9) - 1 LT 12 THEN (RFY + 9) - 1 ELSE (RFY + 9) - 1 - 12;
Q4B/M=IF (RFY + 9) GT 12 THEN (RFY + 9) - 12 ELSE (RFY + 9);
Q4E/M=IF (RFY + 12) - 1 LT 12 THEN (RFY + 12) - 1 ELSE (RFY + 12) - 1 - 12;
 
-* Determine End of Year Month for Rollups
ANNUAL/M=Q4E;
ANNUAL_YY/YY=P_EOM;
ANNUAL_YY1/YY=IF RUN_EOM GT Q4E THEN ANNUAL_YY + 1 ELSE ANNUAL_YY;
ANNUAL_A8MDYY/A8MDYY=EDIT(Q4E) | '01' | EDIT(ANNUAL_YY1);
ANNUAL_MONTH/MDYY=ANNUAL_A8MDYY;
ANNUAL_END/MDYY=DATEMOV(ANNUAL_MONTH, 'EOM');
 
Q4_END/MDYY=ANNUAL_END;
Q4_BEGIN/MDYY=DATEMOV(DATEADD(Q4_END, 'M', (-2)), 'BOM');
Q3_END/MDYY=Q4_BEGIN - 1;
Q3_BEGIN/MDYY=DATEMOV(DATEADD(Q3_END, 'M', (-2)), 'BOM');
Q2_END/MDYY=Q3_BEGIN - 1;
Q2_BEGIN/MDYY=DATEMOV(DATEADD(Q2_END, 'M', (-2)), 'BOM');
Q1_END/MDYY=Q2_BEGIN - 1;
Q1_BEGIN/MDYY=DATEMOV(DATEADD(Q1_END, 'M', (-2)), 'BOM');
 
CUR_QTR/A1=IF P_EOM FROM Q1_BEGIN TO Q1_END THEN '1' ELSE
           IF P_EOM FROM Q2_BEGIN TO Q2_END THEN '2' ELSE
           IF P_EOM FROM Q3_BEGIN TO Q3_END THEN '3' ELSE
           IF P_EOM FROM Q4_BEGIN TO Q4_END THEN '4' ELSE '0';
 
-* Determine Weekly dates
W_CM_FM/MDYY=DATEADD(P_BOW, 'D', (-7));
W_CM_TO/MDYY=DATEADD((P_EOW + 2), 'D', (-7));
 
W_CM_FM/MDYY=IF W_CM_TO GT END_DATE THEN
        DATEADD(W_CM_FM, 'D', (-7)) ELSE W_CM_FM;
W_CM_TO/MDYY=IF W_CM_TO GT END_DATE THEN
        DATEADD(W_CM_TO, 'D', (-7)) ELSE W_CM_TO;
 
FM_DATE/MDYY=IF '&fm1_pm1' EQ 'MTD' THEN P_BOM ELSE
             IF '&fm1_pm1' EQ 'YTD' THEN P_BOY ELSE
             IF '&fm1_pm1' EQ 'WTD' THEN W_CM_FM ELSE
             IF CUR_QTR EQ '1' THEN Q1_BEGIN ELSE
             IF CUR_QTR EQ '2' THEN Q2_BEGIN ELSE
             IF CUR_QTR EQ '3' THEN Q3_BEGIN ELSE Q4_BEGIN;
 
TO_DATE/MDYY=IF '&fm1_pm1' EQ 'WTD' THEN W_CM_TO ELSE P_EOM;
FX_DATE/MDYY=IF '&fx_pm' EQ 'PMTD' THEN DATEADD(FM_DATE, 'M', (-1)) ELSE DATEADD(FM_DATE, 'Y', (-1));
TX_DATE0/MDYY=IF '&fx_pm' EQ 'PMTD' THEN DATEADD(TO_DATE, 'M', (-1)) ELSE DATEADD(TO_DATE, 'Y', (-1));
TX_DATE/MDYY=DATEMOV(TX_DATE0, 'EOM');
 
FM_DATE1/A8MDYY=FM_DATE;
TO_DATE1/A8MDYY=TO_DATE;
FX_DATE1/A8MDYY=FX_DATE;
TX_DATE1/A8MDYY=TX_DATE;
 
FM_DATE2/A10=EDIT(FM_DATE1,'99/99/9999');
TO_DATE2/A10=EDIT(TO_DATE1,'99/99/9999');
FX_DATE2/A10=EDIT(FX_DATE1,'99/99/9999');
TX_DATE2/A10=EDIT(TX_DATE1,'99/99/9999');
END
TABLE FILE &FILE1.EVAL
PRINT FM_DATE2 TO_DATE2 FX_DATE2 TX_DATE2
BY ROLLUP_CODE NOPRINT
WHERE INST_KEY EQ &&IKEY
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE SAVE AS HADATES
WHERE RECORDLIMIT EQ 1
END
-RUN
-READ HADATES &&FM_PM.A10, &&TO_PM.A10, &&FX_PM.A10, &&TX_PM.A10
 
JOIN CLEAR *
-RUN
 
-GOTO CONT_DATE;
 
-CONT_DATE
-********************************************************************
 
-* FEX WILL LOAD THE NEXT SCHEDULED SET INTO THE BRPT_QUE FILE.
-*-INCLUDE LOADBTOT
-INCLUDE WRBATCH
-RUN
-*-IF &QUEDONE EQ 'Y' GOTO XXIT;
 
TABLE FILE BRPT_QUE
PRINT ROLLUP_CODE
IF RECORDLIMIT EQ 1
ON TABLE SAVE AS SAVE1
END
-RUN
-IF &LINES EQ 0 THEN GOTO XXIT;
 
-READ SAVE1 &&ROLLUP.A8.
 
-IF &&FROMER5 EQ 'Y' GOTO :MRER5;
-INCLUDE LOADBINS
-RUN
EX WRRIUPD
-RUN
-GOTO :MRER5_CONT;
-:MRER5
-INCLUDE LOADBINS_MR
-RUN
EX WRRIUPD
-RUN
-:MRER5_CONT
 
-RECHECK_QUE
 
 
-SET &&DRILLED_RUN = 'N';
-SET &&DRILLSTREAM = 'N';
-RUN
 
-SET &&IDKEY = &&IKEY;
 
-IF &&STREAM EQ 'xxxxxxxx' THEN GOTO RELOAD_BQUE;
 
-SET &&HLDIKEY= &&IKEY;
-SET &&HLDITIME='&&ITIME.EVAL';
-SET &&HEMAIL=IF EDIT(&&OUTTO,'9') EQ 'E ' THEN 'Y'
- ELSE '&&HEMAIL.EVAL';
-SET &&HFTP=IF EDIT(&&OUTTO,'9') EQ 'F ' THEN 'Y'
- ELSE '&&HFTP.EVAL';
 
-*setup db in tcairdb/tccardb/tchtldb called in the report streams.
EX SetTotal
-RUN
 
-SET &&INSTID = &&IKEY;
-SET &VARFILE = '&&DATASRV.EVAL\TNT\TTRACKER\SETFILES\' || &&SETF || '.FEX';
-SET &VARFWEB = &&WEB_PATH || &&SETF || '.FEX';
-SET &READSET=&&WEB_PATH || 'READSET.FTM';
 
FILEDEF READSET DISK &READSET
FILEDEF OLDSET DISK &VARFWEB
COPY &VARFILE &READSET
-RUN
 
TABLE FILE READSET
PRINT *
ON TABLE HOLD AS READSET FORMAT ALPHA
END
-RUN
 
-VARS
FILEDEF READSET CLEAR
FILEDEF OLDSET CLEAR
FILEDEF INSTPASS CLEAR
FILEDEF OUTFILE DISK &VARFWEB
FILEDEF INSTPASS DISK INSTPASS.FTM
FILEDEF READSET DISK &READSET
-RUN
 
EX VARSETS
-RUN
 
FILEDEF READSET CLEAR
FILEDEF OUTFILE CLEAR
-RUN
 
-EXSTRM
 
-SET &&WEBPATH = '&&WEBSRV.EVAL' || '\TTWEB\ ' || '&&ROLLUP.EVAL' || '\ '|| '&&UNAME.EVAL' || '\';
-DOS MKDIR &&WEBPATH
 
-*Generate the screening conditions
EX CODEGEN
-RUN
 
-IF &&SETF EQ 'TCTRVLSM' OR 'TCTSONL' OR 'TCTSTRAD' OR 'TCTSAP' OR 'TCTSSB' THEN GOTO TRVLSUM;
-IF &&SETF EQ 'TCVXTPDD' THEN GOTO SPLSETD;
 
EX SETDBLS SETFILE=&&SETF
-RUN
-INCLUDE OTHPARMS
-GOTO CONTINUE;
 
 
-TRVLSUM
EX TSSETDB SETFILE=&&SETF
-RUN
-INCLUDE OTHPARMS
-GOTO CONTINUE;
 
-SPLSETD
EX SETDBLS2 SETFILE=&&SETF
-RUN
 
-CONTINUE
 
-*generate footer
EX SELDESC2
-RUN
 
-CONTINUE
 
-SET &&NOW_CYC = 'CYC';
-TYPE Executing &&STREAM
EX &&STREAM
-RUN
 
-SETNOTDONE
-RUN
 
-XXIT
