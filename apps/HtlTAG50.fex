-***************************************************************************
-* *************
-*  DATE                       NAME                         DESCRIPTION
-* 08/30/00                  IBISTL-SB          CONVERTED THE ROLL_KEY FROM
-* A VARIABLE
-*                                              LENGTH TO FIXED LENGTH OF 50
-*  CHARACTERS
-*
-***************************************************************************
-* *************
-* File HTLTAG50.FEX
-*
-*****   This routine determines all new/updated HTL transactions that 
-*****     require a HIERPROF key stamp.  This routine checks for a N in
-*****     HIER_STATUS, meaning that it was updated or added during the 
-*****     HTL transaction update process.  This routine operates on the
-*****     50 character hierarchy key length.
-*****   AUTHOR:  Dave Kuzanek
-*****   PRODUCTION DATE: 

MAINTAIN FILES HH_50 AND HIER50 AND TMPHTL

  COMPUTE S1Stat/A8 = ;
  COMPUTE S2Stat/A8 = ;
  COMPUTE S3Stat/A8 = ;
  COMPUTE S4Stat/A8 = ;
  COMPUTE S5Stat/A8 = ;
  COMPUTE S6Stat/A8 = ;
  COMPUTE S7Stat/A8 = ;
  COMPUTE S8Stat/A8 = ;
  COMPUTE S9Stat/A8 = ;
  COMPUTE S1A/I6 = ;
  COMPUTE S1B/I6 = ;
  COMPUTE S2A/I6 = ;
  COMPUTE S2B/I6 = ;
  COMPUTE S2C/I6 = ;
  COMPUTE S2D/I6 = ;
  COMPUTE S3A/I6 = ;
  COMPUTE S3B/I6 = ;
  COMPUTE S3C/I6 = ;
  COMPUTE S3D/I6 = ;
  COMPUTE S4A/I6 = ;
  COMPUTE S4B/I6 = ;
  COMPUTE S4C/I6 = ;
  COMPUTE S4D/I6 = ;
  COMPUTE S5A/I6 = ;
  COMPUTE S5B/I6 = ;
  COMPUTE S5C/I6 = ;
  COMPUTE S5D/I6 = ;
  COMPUTE S6A/I6 = ;
  COMPUTE S6B/I6 = ;
  COMPUTE S7A/I6 = ;
  COMPUTE S7B/I6 = ;
  COMPUTE S8A/I6 = ;
  COMPUTE S8B/I6 = ;
  COMPUTE S9A/I6 = ;
  COMPUTE S9B/I6 = ;
  COMPUTE S9C/I6 = ;
  COMPUTE S9D/I6 = ;

  INFER HIER50.ROLL_LEV INTO HStack
  INFER HIER50.ROLL_LEV INTO TStack
  INFER HH_50.HTL_KEY INTO AStack
  INFER TMPHTL.HTL_KEY INTO MStack

-* This loop walks through the HTL Hierarchy table and determines all
-*   new/updated HTL transactions

  PERFORM Stat_Init
-*  WINFORM SHOW_INACTIVE HIERSTAT
  STACK CLEAR AStack HStack MStack
  FOR ALL NEXT HH_50.HTL_KEY INTO AStack WHERE HIER_STATUS EQ 'N'
  COMPUTE S8B = AStack.FocCount;
  COMPUTE S8A = 0;
-*  WINFORM REFRESH HIERSTAT
  REPOSITION HH_50.HTL_KEY
  REPOSITION HIER50.ROLL_LEV
  FOR ALL NEXT HIER50.ROLL_LEV INTO TStack 
  REPEAT ALL
    STACK CLEAR AStack HStack MStack 
    NEXT HH_50.HTL_KEY INTO AStack(1) WHERE HIER_STATUS EQ 'N'
    IF AStack.FocCount EQ 0 THEN GOTO EXITREPEAT
    COMPUTE S8A = S8A + 1;
-*    WINFORM REFRESH HIERSTAT
    REPOSITION TMPHTL.HTL_KEY
    NEXT TMPHTL.HTL_KEY INTO MStack(1)
      WHERE TMPHTL.HTL_KEY EQ ASTACK(1).HTL_KEY
    IF MStack.FocCount EQ 0 THEN GOTO ENDREPEAT
    REPOSITION HIER50.ROLL_LEV
    STACK COPY FROM TStack INTO HStack
      WHERE (HIER50.ROLL_LEV EQ AStack(1).ROLL_LEV) AND
            (HIER50.EFF_DATE LE MStack(1).INVOICE_DATE)
    IF HStack.FocCount EQ 0 THEN GOTO ENDREPEAT
    STACK SORT HStack BY HIGHEST HIER50.EFF_DATE
    COMPUTE AStack(1).ROLL_KEY = HStack(1).ROLL_KEY;
    COMPUTE AStack(1).HIER_STATUS = ' ';
    UPDATE HH_50.ROLL_KEY HH_50.HIER_STATUS FROM AStack(1)
  ENDREPEAT
  COMMIT
-*  WINFORM CLOSE
  GOTO END

CASE Stat_Init
  COMPUTE S1Stat = 'Completed';
  COMPUTE S2Stat = 'Completed';
  COMPUTE S3Stat = 'Completed';
  COMPUTE S4Stat = 'Completed';
  COMPUTE S5Stat = 'Completed';
  COMPUTE S6Stat = 'Completed';
  COMPUTE S7Stat = 'Completed';
  COMPUTE S8Stat = 'Working';
  COMPUTE S9Stat = 'Pending';
endcase
case Winform_HierStat
-*   Winform show HierStat
endcase

END
