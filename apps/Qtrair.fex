-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* STEVE - 05/22/2003 - Changed NET_TKT_CNT and VOIDS to exlude MCOs from 
-*                      these counts.
-* Joy - Changed to split out Lost Savings per Ticket define for increase/
-* Descrease JK 6/6/03
-* Joy - 8/5/2003 - Changed to define/table off of SR_50
-* Joy - 2/6/04 - Fixed division by zero error
-* DEB - 1/17/05 - CHANGED REFUND_TOTAL DEFINE AND VOID DEFINE
-*                 TO MATCH ABQTRRV1
-*04/20/10   DEB                CHANGED ORIG_SALE DEFINE
-*5/23/14    DEB                ADDED EX5 TO REFUND_TOTAL DEFINE
-* ADDED TRANTYPE INCLUDE - JK 12/30/14 STORY ID S-06492

-******************************************************************************

SET ASNAMES = ON
-SET HOLDATTR = ON;
-RUN

DEFINE FILE SR_50  
  LEVEL_DESC/A60 = &&LDESC;
  FARE_PAID/D12 = SEG_AMT + SEG_TAX;
  NET_TKT_CNT/D8CS  =   IF (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) THEN 1 ELSE 
                        IF (SEG_NBR EQ '01') AND 
                           (EX_FLAG EQ 'F') AND (SEG_COUNT EQ -1)
				   THEN (-1) ELSE 
                        IF (DOC_TYPE NE '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') AND
				   (SEG_COUNT EQ -1)
				   THEN (-1) ELSE 0;

TKT_PURCH/D8.2CS      = IF (TICKET_CODE EQ '1') AND
                             (SEG_NBR EQ '01') AND
                             (FARE_PAID GE 0) AND
                             (SEG_COUNT EQ 1) AND 
                             (CONJ_REL EQ 1) THEN 1 ELSE 0;

-* Defines on Previous Defines
  DISSAVINGS/D12 = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
  VASAVINGS/D12 = SEG_DISCOUNT - FARE_PAID;
-* Defines on Previously Defined Defines
-INCLUDE TRANTYPE  
END
-RUN

TABLEF FILE SR_50
PRINT AIR_MAIN.INTL_DOM AS 'INTL_DOM'
  DISSAVINGS
  DOC_TYPE	
  DOD_TYPE
  DPT_DATE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE
  FARE_PAID	
  LEVEL_DESC
  NET_TKT_CNT
  REFUSE_CODE
  RF_FLAG
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX 
  TKT_NUM
  TKT_PURCH	
  TRN_DATE
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS 	

WHERE (TRN_DATE GE &&FROMDT.EVAL) AND (TRN_DATE LE &&TODT.EVAL) OR
      (TRN_DATE GE &&FXDATE.EVAL) AND (TRN_DATE LE &&TXDATE.EVAL)
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10


-INCLUDE RPTPARMS
ON TABLE HOLD AS &&RPT_HOLD
END
-RUN

DEFINE FILE &&RPT_HOLD
CURRENT/A1 = IF TRN_DATE GE &&FROMDT.EVAL AND
                TRN_DATE LE &&TODT.EVAL THEN 'Y' ELSE 'N';
PRIOR/A1 =  IF TRN_DATE GE &&FXDATE.EVAL AND
               TRN_DATE LE &&TXDATE.EVAL THEN 'Y' ELSE 'N';
END

TABLE FILE &&RPT_HOLD
PRINT DISSAVINGS
  CURRENT
  DOC_TYPE	
  DOD_TYPE	
  EMBARK	
  EX_FLAG	
  EXCHG_SALE	
  FARE_PAID
  INTL_DOM
  LEVEL_DESC
  NET_TKT_CNT
  PRIOR	
  REFUSE_CODE
  RF_FLAG
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX 	
  TKT_NUM
  TKT_PURCH
  TRN_DATE
  VASAVINGS
  VOID_DATE 	
  VOID_STATUS 	
BY TKT_NUM
BY SEG_COUNT
ON TABLE HOLD AS TRANONE 
END
-RUN

DEFINE FILE TRANONE
EXCH/A50 = 'Total Exchanges';
GRND/A50 = 'Total Transactions';
RFND/A50 = 'Total Refunds';
RFNDF/A50 = 'Dollar Amount of Refunds';
VOID/A50 = 'Total Voids';
VOIDF/A50 = 'Dollar Amount of Voids';
AIRF/A50 = 'Total Airline Spend';
NETT/A50 = 'Net Tickets';
TKTP/A50 = 'Tickets Issued';
VASAV/A50 = 'Contract Savings';
VSVPT/A50 = 'Savings Per Net Ticket Issued';
VSVPT1/A50 = 'Savings Per Net Tkt From Increased Contract Svgs';
PVSV/A50 = 'Percentage Savings Per Net Ticket';
AVGT/A50 = 'Domestic Average Ticket Cost';
AVGT1/A50 = 'International Average Ticket Cost';
LST/A50 = 'Lost Savings';
LST1/A50 = 'Lost Savings based upon NR AS SS Reason Codes';
LSTPT/A50 = 'Lost Savings Per Net Ticket';
PCLST/A50 = 'Percentage Lost Savings Per Ticket';
PCLST1/A50 = 'Savings Per Net Ticket From Decreased LS';

EXMCOS/D9 = IF (EX_FLAG NE ' ') AND (DOC_TYPE EQ '1') THEN 1 ELSE 0;
FLAG/A1 = 'A';
FULL_RFNDS/D9 = IF ((VOID_DATE EQ 0) AND (RF_FLAG EQ 'F') AND (TKT_NUM 
  NE LAST TKT_NUM) AND (SEG_COUNT LT 0)) THEN 1 ELSE 0;	
PART_RFNDS/D9 = IF ((VOID_DATE EQ 0) AND (RF_FLAG EQ 'P') AND (TKT_NUM 
  NE LAST TKT_NUM) AND (SEG_COUNT LE 0)) THEN 1 ELSE 0;

-*ORIG_SALE/D9 = IF (SEG_NBR EQ '01') AND (FARE_PAID GE 0) AND (SEG_COUNT 
-* EQ 1) AND (EXCHG_SALE EQ ' ') THEN 1 ELSE IF (DOC_TYPE EQ '1') AND
-* (EX_FLAG EQ ' ') AND (EXCHG_SALE NE ' ') THEN 1 ELSE 0;	


ORIG_SALE/D9 = IF (SEG_NBR EQ '01') AND (FARE_PAID GE 0) AND 
     (SEG_COUNT EQ 1) AND (EXCHG_SALE EQ ' ') THEN 1 ELSE 
     IF (DOC_TYPE EQ '1') AND (EX_FLAG EQ ' ') AND (EXCHG_SALE NE ' ') AND
     (RF_FLAG EQ ' ') THEN 1 ELSE 0;	
RC/A1 = IF REFUSE_CODE EQ 'NR' OR 'AS' OR 'SS' THEN 'Y' ELSE 'N';

REFUNDS/D9 = FULL_RFNDS + PART_RFNDS;
	
TKT_CNT/D8CS = IF (SEG_NBR EQ '01') AND (FARE_PAID GE 0) AND (SEG_COUNT 
  EQ 1) THEN 1 ELSE 0;	
	
-* VOIDS/D9 = IF (VOID_DATE NE 0) AND (SEG_COUNT EQ 1) AND (SEG_NBR EQ '01') 
-*   THEN 1 ELSE 0;	
VOIDS/D9 = IF (VOID_DATE NE 0) AND (SEG_COUNT EQ 1) AND (SEG_NBR EQ '01')
 	THEN 1 ELSE IF (DOC_TYPE EQ '1' AND VOID_DATE NE 0) THEN 1 ELSE 0;

-* Defines on previous DEFINEs

EXCHGS/D9 = IF (EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (EMBARK 
  NE 'DT1' OR 'RF1' OR 'FP3') THEN TKT_CNT ELSE
  IF (DOC_TYPE EQ '1') AND (EXCHG_SALE EQ 'E') THEN 0 ELSE
  IF (SEG_COUNT GE 0) AND (EXCHG_SALE NE ' ') THEN TKT_CNT ELSE 0;	
-* REFUND_TOTAL/D12 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
-* 'FP2') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN FARE_PAID ELSE 
-*  0;

REFUND_TOTAL/D12.2 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
  'FP2' OR 'EX5') 
-* AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN (FARE_PAID * (-1)) 
   AND (DOC_TYPE NE '1') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1')
   THEN (FARE_PAID * (-1)) ELSE 0;





TOT_ECNT/D9 = EXCHGS + EXMCOS;	
TOT_TRANS/D9 = ORIG_SALE + VOIDS + TOT_ECNT + REFUNDS;
VOID_AMT/D12 = IF VOID_DATE NE 0 THEN FARE_PAID ELSE 0;
-* DEFINES ON PREVIOUS DEFINES TO DETERMINE CURRENT
CTOT_TRANS/D9 = IF CURRENT EQ 'Y' THEN TOT_TRANS ELSE 0;
CVOIDS/D9 = IF CURRENT EQ 'Y' THEN VOIDS ELSE 0;
CREFUNDS/D9 = IF CURRENT EQ 'Y' THEN REFUNDS ELSE 0;
CTOT_ECNT/D9 = IF CURRENT EQ 'Y' THEN TOT_ECNT ELSE 0;
CNET_TKT/D9CS = IF (VOID_DATE EQ 0) AND (CURRENT EQ 'Y') THEN NET_TKT_CNT ELSE 0;
CNTTKTD/D9 = IF (VOID_DATE EQ 0) AND (CURRENT EQ 'Y') AND (INTL_DOM EQ 'D')
                  THEN NET_TKT_CNT ELSE 0;
CNTTKTI/D9 = IF (VOID_DATE EQ 0) AND (CURRENT EQ 'Y') AND (INTL_DOM EQ 'I')
                  THEN NET_TKT_CNT ELSE 0;
CFARE/D12CS = IF (VOID_DATE EQ 0) AND (CURRENT EQ 'Y') THEN FARE_PAID ELSE 0;
CFARED/D12CS = IF (VOID_DATE EQ 0) AND (INTL_DOM EQ 'D') AND (CURRENT EQ 'Y')
                  THEN  FARE_PAID ELSE 0;
CFAREI/D12CS = IF (VOID_DATE EQ 0) AND (INTL_DOM EQ 'I') AND (CURRENT EQ 'Y')
                  THEN FARE_PAID ELSE 0;
CTKTP/D9 = IF (CURRENT EQ 'Y') THEN TKT_PURCH ELSE 0;
CVOIDF/D12 = IF CURRENT EQ 'Y' THEN VOID_AMT ELSE 0;
CREFUNDF/D12 = IF CURRENT EQ 'Y' THEN REFUND_TOTAL ELSE 0;
CVASAV/D12 = IF (VOID_DATE EQ 0) AND (CURRENT EQ 'Y') THEN VASAVINGS ELSE 0;
CLST/D12 = IF (VOID_DATE EQ 0) AND (CURRENT EQ 'Y') THEN DISSAVINGS ELSE 0;
CLST1/D12 = IF (VOID_DATE EQ 0) AND (CURRENT EQ 'Y') AND (RC EQ 'Y') THEN
               DISSAVINGS ELSE 0;
-* DEFINES ON PREVIOUS DEFINES TO DETERMINE PRIOR
PTOT_TRANS/D9 = IF PRIOR EQ 'Y' THEN TOT_TRANS ELSE 0;
PVOIDS/D9 = IF PRIOR EQ 'Y' THEN VOIDS ELSE 0;
PREFUNDS/D9 = IF PRIOR EQ 'Y' THEN REFUNDS ELSE 0;
PTOT_ECNT/D9 = IF PRIOR EQ 'Y' THEN TOT_ECNT ELSE 0;
PNET_TKT/D9CS = IF (VOID_DATE EQ 0) AND (PRIOR EQ 'Y') THEN NET_TKT_CNT ELSE 0;
PNTTKTD/D9 = IF (VOID_DATE EQ 0) AND (PRIOR EQ 'Y') AND (INTL_DOM EQ 'D')
                  THEN NET_TKT_CNT ELSE 0;
PNTTKTI/D9 = IF (VOID_DATE EQ 0) AND (PRIOR EQ 'Y') AND (INTL_DOM EQ 'I')
                  THEN NET_TKT_CNT ELSE 0;
PFARE/D12CS = IF (VOID_DATE EQ 0) AND (PRIOR EQ 'Y') THEN FARE_PAID ELSE 0;
PFARED/D12CS = IF (VOID_DATE EQ 0) AND (INTL_DOM EQ 'D') AND (PRIOR EQ 'Y')
                  THEN  FARE_PAID ELSE 0;
PFAREI/D12CS = IF (VOID_DATE EQ 0) AND (INTL_DOM EQ 'I') AND (PRIOR EQ 'Y')
                  THEN FARE_PAID ELSE 0;
PTKTP/D9 = IF (PRIOR EQ 'Y') THEN TKT_PURCH ELSE 0;
PVOIDF/D12 = IF PRIOR EQ 'Y' THEN VOID_AMT ELSE 0;
PREFUNDF/D12 = IF PRIOR EQ 'Y' THEN REFUND_TOTAL ELSE 0;
PVASAV/D12 = IF (VOID_DATE EQ 0) AND (PRIOR EQ 'Y') THEN VASAVINGS ELSE 0;
PLST/D12 = IF (VOID_DATE EQ 0) AND (PRIOR EQ 'Y') THEN DISSAVINGS ELSE 0;
PLST1/D12 = IF (VOID_DATE EQ 0) AND (PRIOR EQ 'Y') AND (RC EQ 'Y') THEN
               DISSAVINGS ELSE 0;
END

TABLE FILE TRANONE
SUM
  AIRF
  AVGT
  AVGT1
  CLST
  CLST1
  CREFUNDS
  CTOT_ECNT
  CTOT_TRANS
  CVOIDS
  CFARE
  CFARED
  CFAREI
  CNET_TKT
  CNTTKTD
  CNTTKTI
  CTKTP
  CVOIDF
  CREFUNDF
  CVASAV
  EXCHG_SALE	
  EXCH
  EXMCOS
  FARE_PAID	
  FULL_RFNDS	
  PART_RFNDS
  GRND
  LST
  LST1
  LSTPT
  LEVEL_DESC
  NET_TKT_CNT
  NETT
  ORIG_SALE
  PCLST
  PCLST1
  PLST
  PLST1
  PTOT_TRANS
  PVOIDS
  PREFUNDS
  PTOT_ECNT
  PNET_TKT
  PNTTKTD
  PNTTKTI
  PFARE
  PFARED
  PFAREI
  PTKTP
  PVOIDF
  PVSV
  PREFUNDF
  PVASAV
  REFUNDS	
  RFND	 
  RFNDF
  TKTP
  VOID
  VOIDS
  VOIDF
  VOID_DATE
  EXCHGS
  TOT_ECNT	
  TOT_TRANS
  VASAV
  VSVPT
  VSVPT1
COMPUTE CVSVPT/P12.2CS = IF ((CNET_TKT LT 1) AND (CNET_TKT GT (-1)))
                          THEN 0 ELSE (CVASAV/CNET_TKT); 
COMPUTE PVSVPT/P12.2CS = IF ((PNET_TKT LT 1) AND (PNET_TKT GT (-1))) 
                          THEN 0 ELSE (PVASAV/PNET_TKT);
-* COMPUTE TVSVPT1/D12C = (CVSVPT * CNET_TKT);
COMPUTE TVSVPT1/D12C = ((CVSVPT - PVSVPT) * CNET_TKT);
COMPUTE PCTCVS/P12.1 = IF ((CFARE LT 1) AND (CFARE GT (-1))) THEN 0 ELSE
                          ((CVASAV/CFARE)*100);
COMPUTE PCTPVS/P12.1 = IF ((PFARE LT 1) AND (PFARE GT (-1))) THEN 0 ELSE
                          ((PVASAV/PFARE)*100);
COMPUTE CAVGD/P12.2CS = IF ((CNTTKTD LT 1) AND (CNTTKTD GT (-1))) 
                          THEN 0 ELSE (CFARED/CNTTKTD);
COMPUTE PAVGD/P12.2CS = IF ((PNTTKTD LT 1) AND (PNTTKTD GT (-1))) 
                          THEN 0 ELSE (PFARED/PNTTKTD);
COMPUTE CAVGI/P12.2CS = IF ((CNTTKTI LT 1) AND (CNTTKTI GT (-1))) 
                          THEN 0 ELSE (CFAREI/CNTTKTI);
COMPUTE PAVGI/P12.2CS = IF ((PNTTKTI LT 1) AND (PNTTKTI GT (-1))) 
                          THEN 0 ELSE (PFAREI/PNTTKTI);
COMPUTE CLSTPT/P12.2 = IF ((CNET_TKT LT 1) AND (CNET_TKT GT (-1))) 
                         THEN 0 ELSE (CLST/CNET_TKT);
COMPUTE PLSTPT/P12.2 = IF ((PNET_TKT LT 1) AND (PNET_TKT GT (-1))) 
                         THEN 0 ELSE (PLST/PNET_TKT);
COMPUTE CPCTLSV/P12.1 = IF ((CFARE LT 1) AND (CFARE GT (-1))) THEN 0 ELSE
                           ((CLST/CFARE)*100);
COMPUTE PPCTLSV/P12.1 = IF ((PFARE LT 1) AND (PFARE GT (-1))) THEN 0 ELSE
                           ((PLST/PFARE)*100);
COMPUTE TLST/D12C =  ((PLSTPT - CLSTPT)*CNET_TKT);
-* INCREASE DECREASE PERCENTAGE CALCULATIONS
IDFARE/P12.2 = IF ((PFARE LT 1) AND (PFARE GT (-1))) THEN 0 ELSE
                  (((CFARE-PFARE)/PFARE)*100);
IDTKTI/P12.2 = IF ((PTKTP LT 1) AND (PTKTP GT (-1))) THEN 0 ELSE
                  (((CTKTP-PTKTP)/PTKTP)*100);
IDTOTT/P12.2 = IF ((PTOT_TRAN LT 1) AND (PTOT_TRAN GT (-1))) THEN 0 ELSE
                  (((CTOT_TRAN-PTOT_TRAN)/PTOT_TRAN)*100);
IDNETT/P12.2 = IF ((PNET_TKT LT 1) AND (PNET_TKT GT (-1))) THEN 0 ELSE
                  (((CNET_TKT-PNET_TKT)/PNET_TKT)*100);
IDVSV/P12.2 = IF  ((PVASAV LT 1) AND (PVASAV GT (-1))) THEN 0 ELSE
                  (((CVASAV-PVASAV)/PVASAV)*100);
IDVSVPT/P12.2 = IF ((PVSVPT LT 1) AND (PVSVPT GT (-1))) THEN 0 ELSE
                   (((CVSVPT-PVSVPT)/PVSVPT)*100);
IDEXCH/P12.2 = IF ((PTOT_ECNT LT 1) AND (PTOT_ECNT GT (-1))) THEN 0 ELSE
                  (((CTOT_ECNT-PTOT_ECNT)/PTOT_ECNT)*100);
IDRFND/P12.2 = IF ((PREFUNDS LT 1) AND (PREFUNDS GT (-1))) THEN 0 ELSE
                  (((CREFUNDS-PREFUNDS)/PREFUNDS)*100);
IDRFF/P12.2 = IF ((PREFUNDF LT 1) AND (PREFUNDF GT (-1))) THEN 0 ELSE
                 (((CREFUNDF-PREFUNDF)/PREFUNDF)*100);
IDVOIDS/P12.2 = IF ((PVOIDS LT 1) AND (PVOIDS GT (-1))) THEN 0 ELSE 
                   (((CVOIDS-PVOIDS)/PVOIDS)*100);
IDVOIDF/P12.2 = IF ((PVOIDF LT 1) AND (PVOIDF GT (-1))) THEN 0 ELSE
                   (((CVOIDF-PVOIDF)/PVOIDF)*100);
IDPCTVS/P12.2 = (PCTCVS-PCTPVS);
IDAVGD/P12.2 = IF ((PAVGD LT 1) AND (PAVGD GT (-1))) THEN 0 ELSE
                 (((CAVGD-PAVGD)/PAVGD)*100);
IDAVGI/P12.2 = IF ((PAVGI LT 1) AND (PAVGI GT (-1))) THEN 0 ELSE
                 (((CAVGI-PAVGI)/PAVGI)*100);

IDLST/P12.2 = IF ((PLST LT 1) AND (PLST GT (-1))) THEN 0 ELSE
                 (((CLST-PLST)/PLST)*100);
IDLST1/P12.2 = IF ((PLST1 LT 1) AND (PLST1 GT (-1))) THEN 0 ELSE
                  (((CLST1-PLST1)/PLST1)*100);

IDPCTLS/P12.2S = (CPCTLSV-PPCTLSV);
BY FLAG
ON TABLE HOLD AS JHOLD
END
-RUN

TABLE FILE JHOLD
SUM AIRF
  AVGT
  AVGT1
  CLST
  CLST1
  CREFUNDS
  CTOT_ECNT
  CTOT_TRANS
  CVOIDS
  CFARE
  CFARED
  CFAREI
  CNET_TKT
  CNTTKTD
  CNTTKTI
  CTKTP
  CVOIDF
  CREFUNDF
  CVASAV
  EXCHG_SALE	
  EXCH
  EXMCOS
  FARE_PAID	
  FULL_RFNDS	
  PART_RFNDS
  GRND
  LST
  LST1
  LSTPT
  LEVEL_DESC
  NET_TKT_CNT
  NETT
  ORIG_SALE
  PCLST
  PCLST1
  PLST
  PLST1
  PTOT_TRANS
  PVOIDS
  PREFUNDS
  PTOT_ECNT
  PNET_TKT
  PNTTKTD
  PNTTKTI
  PFARE
  PFARED
  PFAREI
  PTKTP
  PVOIDF
  PVSV
  PREFUNDF
  PVASAV
  REFUNDS	
  RFND	 
  RFNDF
  TKTP
  VOID
  VOIDS
  VOIDF
  VOID_DATE
  EXCHGS
  TOT_ECNT	
  TOT_TRANS
  VASAV
  VSVPT
  VSVPT1
  CVSVPT
  PVSVPT
  TVSVPT1
  PCTCVS
  PCTPVS
  CAVGD
  PAVGD
  CAVGI
  PAVGI
  CLSTPT
  PLSTPT
  CPCTLSV
  PPCTLSV
  TLST
 IDFARE
 IDTKTI
 IDTOTT
 IDNETT
 IDVSV
 IDVSVPT
 IDEXCH
 IDPCTLS
 IDRFND
 IDRFF
 IDVOIDS
 IDVOIDF
 IDPCTVS
 IDAVGD
 IDAVGI
 IDLST
 IDLST1
COMPUTE IDPLSTPT/P12.2 = (CLSTPT-PLSTPT);
BY FLAG
ON TABLE HOLD AS JHOLD1
END
-RUN

TABLE FILE JHOLD1
SUM AIRF
  AVGT
  AVGT1
  CLST
  CLST1
  CREFUNDS
  CTOT_ECNT
  CTOT_TRANS
  CVOIDS
  CFARE
  CFARED
  CFAREI
  CNET_TKT
  CNTTKTD
  CNTTKTI
  CTKTP
  CVOIDF
  CREFUNDF
  CVASAV
  EXCHG_SALE	
  EXCH
  EXMCOS
  FARE_PAID	
  FULL_RFNDS	
  PART_RFNDS
  GRND
  LST
  LST1
  LSTPT
  LEVEL_DESC
  NET_TKT_CNT
  NETT
  ORIG_SALE
  PCLST
  PCLST1
  PLST
  PLST1
  PTOT_TRANS
  PVOIDS
  PREFUNDS
  PTOT_ECNT
  PNET_TKT
  PNTTKTD
  PNTTKTI
  PFARE
  PFARED
  PFAREI
  PTKTP
  PVOIDF
  PVSV
  PREFUNDF
  PVASAV
  REFUNDS	
  RFND	 
  RFNDF
  TKTP
  VOID
  VOIDS
  VOIDF
  VOID_DATE
  EXCHGS
  TOT_ECNT	
  TOT_TRANS
  VASAV
  VSVPT
  VSVPT1
  CVSVPT
  PVSVPT
  TVSVPT1
  PCTCVS
  PCTPVS
  CAVGD
  PAVGD
  CAVGI
  PAVGI
  CLSTPT
  PLSTPT
  CPCTLSV
  PPCTLSV
  TLST
 IDFARE
 IDTKTI
 IDTOTT
 IDNETT
 IDPCTLS
 IDVSV
 IDVSVPT
 IDEXCH
 IDRFND
 IDRFF
 IDVOIDS
 IDVOIDF
 IDPCTVS
 IDAVGD
 IDAVGI
 IDLST
 IDLST1
 IDPLSTPT
COMPUTE IDLSTPT1/P12.2 = IF ((PLSTPT LT 1) AND (PLSTPT GT (-1))) THEN 0 ELSE
                            ((IDPLSTPT/PLSTPT)*100);
BY FLAG
ON TABLE HOLD AS TRANTWO FORMAT FOCUS INDEX FLAG
END
-RUN















