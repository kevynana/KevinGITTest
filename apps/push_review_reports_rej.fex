-INCLUDE SETECHO
-TYPE STARTING PUSH_REVIEW_REPORTS
 
-*SET TEMPERASE=OFF
-* File push_review_reports.fex
-*   This Focexec will check for scheduled Reports that need to be pushed
-*   each week and each month.
SET BASEURL='&&SRVR.EVAL'
SET EMPTYREPORT=OFF
SET BYDISPLAY=ON
SET LINES=99999
 
-INCLUDE CLASSPATH
 
-SET &&WPATH1=TEMPPATH(50,'A50');
-SET &&JPATH=STRREP(50,'&&WPATH1.EVAL',1,'\',2,'\\',150,'A150');
 
-DEFAULT &THRU=0;
 
-SET &TDATE=IF &THRU EQ 0 THEN &YYMD ELSE &THRU;
-SET &TDATE=20120515;
-*-SET &TDATE=20080704
 
-* Get Reports where the Total Set was scheduled
-*
JOIN CLEAR *
JOIN
 INNER PUSH_GROUPS.PUSH_GROUPS.GROUP_KEY IN PUSH_GROUPS TO MULTIPLE
 PUSH_REPORTS_KEYS.PUSH_REPORTS_KEYS.GROUP_KEY IN PUSH_REPORTS_KEYS AS J1
END
JOIN
 INNER PUSH_GROUPS.PUSH_GROUPS.SET_KEY IN PUSH_GROUPS TO UNIQUE
 RPT_SET.RPT_SET.SET_KEY IN RPT_SET AS J2
END
JOIN
 INNER RPT_SET.RPT_SET.SET_KEY IN PUSH_GROUPS TO MULTIPLE
 RPT_INST.RPT_INST.SET_KEY IN RPT_INST AS J3
END
JOIN
 INNER RPT_INST.RPT_INST.ROLLUP_CODE IN PUSH_GROUPS TO UNIQUE
 ROLLUP.ROLLUP.ROLLUP_CODE IN ROLLUP AS J4
END
JOIN
INNER RPT_INST.RPT_INST.GLOBAL_PARM IN PUSH_GROUPS TO UNIQUE
 ROLLSET_MASTER.ROLLSET_MASTER.GLOBAL_PARM IN ROLLSET_MASTER AS J5
END
JOIN
 INNER PUSH_GROUPS.PUSH_GROUPS.SCHED_OWNER IN PUSH_GROUPS TO UNIQUE
 USRTBL.USRTBL.USER_NAME IN USRTBL TAG J0 AS J0
END
-RUN
 
DEFINE FILE PUSH_GROUPS CLEAR
OUTTO/A2='TC';
-* Today's Date
-*TDATE1/YYMD=&TDATE;
TDATE1/YYMD=END_DATE + 1;
P_MONTH/MDYY=TDATE1;
P_BOW/MDYY=DATEMOV(P_MONTH, 'BOW');
P_EOW/MDYY=DATEMOV(P_MONTH, 'EOW');
 
AFM_DATE/MDYY=DATEADD(P_BOW, 'D', (-7));
ATO_DATE/MDYY=DATEADD((P_EOW + 2), 'D', (-7));
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'D', (-7)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'D', (-7)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=ATX_DATE0;
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
ACYFM_DATE/MDYY=AFM_DATE;
ACYTO_DATE/MDYY=ATO_DATE;
APYFM_DATE/MDYY=AFM_DATE;
APYTO_DATE/MDYY=ATO_DATE;
EXFEX/A10=IF ROLLUP_CODE EQ 'TOTAL-R' THEN 'WRUNTOTAL' ELSE
          IF RPT_TYPE EQ 'QTR' THEN 'RUN_QTR' ELSE 'WRUNINDV';
RPT_NAMEX/A60='Weekly-' || RPT_NAME;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
   END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_W EQ '1'
WHERE PUSH_REPORTS_KEYS.INST_KEY EQ 0
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_WEEKLY_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDWS FORMAT FOCUS
END
-RUN
 
 
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
 
AFM_DATE/MDYY=IF SCHED_M EQ '1' THEN P_BOM ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Monthly-' || RPT_NAME;
 
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_M EQ '1'
WHERE PUSH_REPORTS_KEYS.INST_KEY EQ 0
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDMS FORMAT FOCUS
END
-RUN
-* Get list of Monthly YTD Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
 
AFM_DATE/MDYY=IF SCHED_MYTD EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='MYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
   END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_MYTD EQ '1'
WHERE PUSH_REPORTS_KEYS.INST_KEY EQ 0
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDMYTDS FORMAT FOCUS
END
-RUN
 
-* Get list of Quarterly Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_Q EQ '1' AND CUR_QTR EQ '1' THEN Q1_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '2' THEN Q2_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '3' THEN Q3_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '4' THEN Q4_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Quarterly-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
   END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_Q EQ '1'
WHERE PUSH_REPORTS_KEYS.INST_KEY EQ 0
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDQS FORMAT FOCUS
END
-RUN
 
-* Get list of Quarterly YTD Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_QYTD EQ '1' THEN Q1_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='QYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_QYTD EQ '1'
WHERE PUSH_REPORTS_KEYS.INST_KEY EQ 0
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDQYTDS FORMAT FOCUS
END
-RUN
 
-* Get list of Annual Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_A EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Annual-' || RPT_NAME;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_A EQ '1'
WHERE PUSH_REPORTS_KEYS.INST_KEY EQ 0
WHERE RUN_EOM EQ ANNUAL
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDAS FORMAT FOCUS
END
-RUN
 
-* Get list of BiAnnual Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_BA EQ '1' AND CUR_BIA EQ '1' THEN BIANNUAL_BEGIN1 ELSE
              IF SCHED_BA EQ '1' AND CUR_BIA EQ '2' THEN BIANNUAL_BEGIN2 ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Biannual-' || RPT_NAME;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
      SEPARATE_EMAIL
      EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_BA EQ '1'
WHERE PUSH_REPORTS_KEYS.INST_KEY EQ 0
WHERE RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q4E
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDBAS FORMAT FOCUS
END
-RUN
 
-***************************************************************************
-* Get Individual Reports that were scheduled
-***************************************************************************
JOIN CLEAR *
JOIN
 INNER PUSH_GROUPS.PUSH_GROUPS.GROUP_KEY IN PUSH_GROUPS TO MULTIPLE
 PUSH_REPORTS_KEYS.PUSH_REPORTS_KEYS.GROUP_KEY IN PUSH_REPORTS_KEYS AS J1
END
JOIN
 INNER PUSH_REPORTS_KEYS.PUSH_REPORTS_KEYS.INST_KEY IN PUSH_GROUPS TO UNIQUE
 RPT_INST.RPT_INST.INST_KEY IN RPT_INST AS J2
END
JOIN
 INNER RPT_INST.RPT_INST.ROLLUP_CODE IN PUSH_GROUPS TO UNIQUE
 ROLLUP.ROLLUP.ROLLUP_CODE IN ROLLUP AS J3
END
JOIN
INNER RPT_INST.RPT_INST.GLOBAL_PARM IN PUSH_GROUPS TO UNIQUE
 ROLLSET_MASTER.ROLLSET_MASTER.GLOBAL_PARM IN ROLLSET_MASTER AS J5
END
-RUN
JOIN
 INNER PUSH_GROUPS.PUSH_GROUPS.SCHED_OWNER IN PUSH_GROUPS TO UNIQUE
 USRTBL.USRTBL.USER_NAME IN USRTBL TAG J0 AS J0
END
-RUN
 
DEFINE FILE PUSH_GROUPS CLEAR
OUTTO/A2='TC';
-* Today's Date
-*TDATE1/YYMD=&TDATE;
TDATE1/YYMD=END_DATE + 1;
P_MONTH/MDYY=TDATE1;
P_BOW/MDYY=DATEMOV(P_MONTH, 'BOW');
P_EOW/MDYY=DATEMOV(P_MONTH, 'EOW');
 
AFM_DATE/MDYY=DATEADD(P_BOW, 'D', (-7));
ATO_DATE/MDYY=DATEADD((P_EOW + 2), 'D', (-7));
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'D', (-7)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'D', (-7)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=ATX_DATE0;
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
ACYFM_DATE/MDYY=AFM_DATE;
ACYTO_DATE/MDYY=ATO_DATE;
APYFM_DATE/MDYY=AFM_DATE;
APYTO_DATE/MDYY=ATO_DATE;
 
EXFEX/A10=IF ROLLUP_CODE EQ 'TOTAL-R' THEN 'WRUNTOTAL' ELSE
          IF RPT_TYPE EQ 'QTR' THEN 'RUN_QTR' ELSE 'WRUNINDV';
RPT_NAMEX/A60='Weekly-' || RPT_NAME;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
-* Get list of Weekly Scheduled Reports
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_W EQ '1'
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_WEEKLY_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE
 
ON TABLE HOLD AS HLDW FORMAT FOCUS
END
-RUN
 
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
 
AFM_DATE/MDYY=IF SCHED_M EQ '1' THEN P_BOM ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Monthly-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      INST_KEY
   GROUP_KEY
   GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_M EQ '1'
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDM FORMAT FOCUS
END
-RUN
 
-* Get list of Monthly YTD Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
 
AFM_DATE/MDYY=IF SCHED_MYTD EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='MYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      INST_KEY
   GROUP_KEY
   GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
   END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_MYTD EQ '1'
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDMYTD FORMAT FOCUS
END
-RUN
 
-* Get list of Quarterly Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_Q EQ '1' AND CUR_QTR EQ '1' THEN Q1_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '2' THEN Q2_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '3' THEN Q3_BEGIN ELSE
              IF SCHED_Q EQ '1' AND CUR_QTR EQ '4' THEN Q4_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Quarterly-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      INST_KEY
   GROUP_KEY
   GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
   END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_Q EQ '1'
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDQ FORMAT FOCUS
END
-RUN
 
-* Get list of Quarterly YTD Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_QYTD EQ '1' THEN Q1_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='QYTD-' || RPT_NAME;
LPM/YYM=DATEADD(LAST_PROCESS_DATE, 'M', (-1));
 
ATD/YYM=ATO_DATE;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      INST_KEY
   GROUP_KEY
   GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
   END_DATE
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_QYTD EQ '1'
WHERE RUN_EOM EQ Q1E OR
      RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q3E OR
      RUN_EOM EQ Q4E
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDQYTD FORMAT FOCUS
END
-RUN
 
-* Get list of Annual Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_A EQ '1' THEN ANNUAL_BEGIN ELSE 0;
ATO_DATE/MDYY=P_EOM;
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Annual-' || RPT_NAME;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      INST_KEY
   GROUP_KEY
   GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
      SEPARATE_EMAIL
      EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_A EQ '1'
WHERE RUN_EOM EQ ANNUAL
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDA FORMAT FOCUS
END
-RUN
 
-* Get list of BiAnnual Scheduled Reports
DEFINE FILE PUSH_GROUPS CLEAR
-INCLUDE PUSH_DATE_DEFINES
AFM_DATE/MDYY=IF SCHED_BA EQ '1' AND CUR_BIA EQ '1' THEN BIANNUAL_BEGIN1 ELSE
              IF SCHED_BA EQ '1' AND CUR_BIA EQ '2' THEN BIANNUAL_BEGIN2 ELSE 0;
ATO_DATE/MDYY=P_EOM;
 
AFX_DATE/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(AFM_DATE, 'Y', (-1)) ELSE AFM_DATE;
ATX_DATE0/MDYY=IF RUN_DATE_TYPES NE 'B' THEN DATEADD(ATO_DATE, 'Y', (-1)) ELSE DATEMOV(DATEADD(ATO_DATE, 'M', (3)),'EOM');
ATX_DATE/MDYY=DATEMOV(ATX_DATE0, 'EOM');
 
ACMFM_DATE/MDYY=AFM_DATE;
ACMTO_DATE/MDYY=ATO_DATE;
APMFM_DATE/MDYY=AFX_DATE;
APMTO_DATE/MDYY=ATX_DATE;
 
ACYFM_DATE/MDYY=ANNUAL_BEGIN;
ACYTO_DATE/MDYY=P_EOM;
APYFM_DATE/MDYY=DATEADD(ACYFM_DATE, 'Y', (-1));
APYTO_DATE0/MDYY=DATEADD(ACYTO_DATE, 'Y', (-1));
APYTO_DATE/MDYY=DATEMOV(APYTO_DATE0, 'EOM');
 
RPT_NAMEX/A60='Biannual-' || RPT_NAME;
PUSH_EADDRS/A765=PUSH_EADDRS1 || PUSH_EADDRS2 || PUSH_EADDRS3;
END
TABLE FILE PUSH_GROUPS
PRINT SET_KEY
      RPT_INST.INST_KEY
      GROUP_KEY
      GROUP_NAME
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAMEX AS RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      PUSH_EADDRS
      END_DATE
      SEPARATE_EMAIL
      EMAIL_SUBJECT
      EMAIL
BY SCHED_OWNER
WHERE SCHED_BA EQ '1'
WHERE RUN_EOM EQ Q2E OR
      RUN_EOM EQ Q4E
 
WHERE ROLLUP.ROLLUP.END_DATE GT LAST_PROCESS_DATE AND
      ROLLUP.ROLLUP.END_DATE GE ATO_DATE AND
      ATO_DATE GT LAST_PROCESS_DATE
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDBA FORMAT FOCUS
END
-RUN
 
-* Put the files together and eliminate duplicates based on the
-* date ranges the reports are running for.
-*
USE CLEAR *
USE
HLDWS.FOC AS HLDA
HLDMS.FOC AS HLDA
HLDMYTDS.FOC AS HLDA
HLDQS.FOC AS HLDA
HLDQYTDS.FOC AS HLDA
HLDAS.FOC AS HLDA
HLDBAS.FOC AS HLDA
HLDW.FOC AS HLDA
HLDM.FOC AS HLDA
HLDMYTD.FOC AS HLDA
HLDQ.FOC AS HLDA
HLDQYTD.FOC AS HLDA
HLDA.FOC AS HLDA
HLDBA.FOC AS HLDA
END
-RUN
 
DEFINE FILE HLDA
P_EADDRS/A765=LOCASE(765, PUSH_EADDRS, P_EADDRS);
END
TABLE FILE HLDA
SUM
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      GROUP_NAME
      SEPARATE_EMAIL
      EMAIL_SUBJECT
      EMAIL
      P_EADDRS AS PUSH_EADDRS
BY SCHED_OWNER
BY SET_KEY
BY GROUP_KEY
BY INST_KEY
BY AFM_DATE
BY ATO_DATE
BY AFX_DATE
BY ATX_DATE
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS RCPARCHK
END
-RUN
 
JOIN CLEAR *
JOIN SET_KEY IN RCPARCHK TO SET_KEY IN RPT_SET AS J1
JOIN INST_KEY IN RCPARCHK TO INST_KEY IN RPT_INST AS J2
-RUN
 
TABLE FILE RCPARCHK
SUM
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      GROUP_NAME
      PUSH_EADDRS
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
 
   RPT_SET.ROLLUP_CODE AS S_ROLLUP
   RPT_INST.ROLLUP_CODE AS I_ROLLUP
 
BY SCHED_OWNER
BY SET_KEY
BY GROUP_KEY
BY INST_KEY
BY AFM_DATE
BY ATO_DATE
BY AFX_DATE
BY ATX_DATE
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS RCPARCH1
END
-RUN
 
JOIN CLEAR *
-RUN
 
DEFINE FILE RCPARCH1
SORT_KEY1/I11=IF SEPARATE_EMAIL NE '1' THEN 0 ELSE GROUP_KEY;
PUSH_EADDRS1/A765=CTRAN(765, PUSH_EADDRS, 013, 032, PUSH_EADDRS1);
PUSH_EADDRS2/A765=CTRAN(765, PUSH_EADDRS1, 010, 032, PUSH_EADDRS2);
END
TABLE FILE RCPARCH1
SUM
      OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      EXFEX
      ROLLUP_CODE
      GROUP_NAME
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
      PUSH_EADDRS2 AS PUSH_EADDRS
BY SORT_KEY1
BY SCHED_OWNER
BY SET_KEY
BY GROUP_KEY
BY INST_KEY
BY AFM_DATE NOPRINT
BY ATO_DATE NOPRINT
BY AFX_DATE NOPRINT
BY ATX_DATE NOPRINT
 
WHERE ROLLUP_CODE EQ I_ROLLUP AND
      ROLLUP_CODE EQ S_ROLLUP
 
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS RCPARMS1
END
-RUN
 
-SET &TDAY=EDIT(&MDYY,'99/99/9999');
 
TABLE FILE RCPARCH1
" "
"eTTek Review Reports"
"** Error Report for &TDAY **"
""
"Set Rollup does not match Instance Rollup"
PRINT
      SET_KEY AS 'Set,Key'
      INST_KEY AS 'Inst,Key'
      RPT_NAME AS 'Report Name'
      OUTPUT_FORMAT AS 'Report,Format'
      DATETYPE AS 'Date,Type'
      AFM_DATE AS 'FM_Date'
      ATO_DATE AS 'TO_Date'
      S_ROLLUP AS 'Set,Rollup'
      I_ROLLUP AS 'Instance,Rollup'
      PUSH_EADDRS2 AS 'Push To EMail Addresses'
BY SCHED_OWNER AS 'Schedule,Owner'
BY ROLLUP_CODE AS 'Rollup'
BY PUSH_EADDRS2 NOPRINT UNDER-LINE
WHERE ROLLUP_CODE NE I_ROLLUP OR
      ROLLUP_CODE NE S_ROLLUP
ON TABLE SET PAGE-NUM OFF
ON TABLE NOTOTAL
ON TABLE HOLD AS PRPTE1 FORMAT HTMTABLE
ON TABLE SET EMPTYREPORT OFF
ON TABLE SET HTMLCSS ON
ON TABLE SET STYLE *
     UNITS=IN,
     PAGESIZE='Letter',
     LEFTMARGIN=0.250000,
     RIGHTMARGIN=0.250000,
     TOPMARGIN=0.250000,
     BOTTOMMARGIN=0.250000,
     SQUEEZE=ON,
     ORIENTATION=PORTRAIT,
$
TYPE=REPORT,
     FONT='ARIAL',
     SIZE=10,
     COLOR='BLACK',
     BACKCOLOR='NONE',
     STYLE=NORMAL,
$
TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     BACKCOLOR=( RGB(242 242 242) 'WHITE' ),
$
TYPE=TITLE,
     COLUMN=N9,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     COLUMN=N7,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9,
     COLOR='WHITE',
     BACKCOLOR=RGB(154 175 212),
     STYLE=BOLD,
$
TYPE=HEADING,
     SIZE=12,
     COLOR=RGB(36 43 114),
     STYLE=BOLD,
     JUSTIFY=CENTER,
$
TYPE=FOOTING,
     STYLE=BOLD,
$
TYPE=SUBHEAD,
     SIZE=9,
     STYLE=BOLD,
$
-*TYPE=REPORT,
-*     IMAGE=/image/TNTLogo.gif,
-*     POSITION=(0.027778 0.027778),
-*     SIZE=(1.902778 0.652778),
-*$
TYPE=REPORT,
     COLUMN=N13,
     WRAP=8.000000,
$
ENDSTYLE
END
-RUN
TABLE FILE RCPARMS1
" "
"eTTek Review Reports"
"Scheduled to be Pushed"
"for &TDAY"
PRINT
      SET_KEY AS 'Set,Key'
      INST_KEY AS 'Inst,Key'
      RPT_NAME AS 'Report Name'
      OUTPUT_FORMAT AS 'Report,Format'
      DATETYPE AS 'Date,Type'
      AFM_DATE AS 'FM_Date'
      ATO_DATE AS 'TO_Date'
      AFX_DATE AS 'FX_Date'
      ATX_DATE AS 'TX_Date'
      PUSH_EADDRS AS 'Push To EMail Addresses'
BY SORT_KEY1 NOPRINT
BY SCHED_OWNER AS 'Schedule,Owner'
BY ROLLUP_CODE AS 'Rollup'
BY PUSH_EADDRS NOPRINT UNDER-LINE
ON PUSH_EADDRS SUBHEAD
"Schedule created for:"
ON TABLE SET PAGE-NUM OFF
ON TABLE NOTOTAL
ON TABLE SET LINES 99999
ON TABLE HOLD AS PRPT1 FORMAT HTMTABLE
ON TABLE SET EMPTYREPORT ON
ON TABLE SET HTMLCSS ON
ON TABLE SET STYLE *
     UNITS=IN,
     PAGESIZE='Letter',
     LEFTMARGIN=0.250000,
     RIGHTMARGIN=0.250000,
     TOPMARGIN=0.250000,
     BOTTOMMARGIN=0.250000,
     SQUEEZE=ON,
     ORIENTATION=PORTRAIT,
$
TYPE=REPORT,
     FONT='ARIAL',
     SIZE=10,
     COLOR='BLACK',
     BACKCOLOR='NONE',
     STYLE=NORMAL,
$
TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     BACKCOLOR=( RGB(242 242 242) 'WHITE' ),
$
TYPE=TITLE,
     COLUMN=N10,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     COLUMN=N8,
     JUSTIFY=CENTER,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
$
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=9,
     COLOR='WHITE',
     BACKCOLOR=RGB(154 175 212),
     STYLE=BOLD,
$
TYPE=HEADING,
     SIZE=12,
     COLOR=RGB(36 43 114),
     STYLE=BOLD,
     JUSTIFY=CENTER,
$
TYPE=FOOTING,
     STYLE=BOLD,
$
TYPE=SUBHEAD,
     SIZE=9,
     STYLE=BOLD,
$
-*TYPE=REPORT,
-*     IMAGE=/image/TNTLogo.gif,
-*     POSITION=(0.027778 0.027778),
-*     SIZE=(1.902778 0.652778),
-*$
TYPE=REPORT,
     COLUMN=N14,
     WRAP=8.000000,
$
ENDSTYLE
END
-RUN
 
-IF &RECORDS EQ 0 GOTO NOBKUP;
APP MAP RQBKUP D:\Data\push_rpt_backups
APP PREPENDPATH RQBKUP
-RUN
-SET &TI=EDIT(HHMMSS('A10'),'99$99$99');
-SET &FN='RQBKUP/push_rpt_parms' || '&YYMD' || '&TI';
 
DEFINE FILE RCPARMS1
STYPE/A1='P';
RCFORMAT/A15=OUTPUT_FORMAT;
FTP1/A50='';
FTP2/A50='';
FTP3/A50='';
END
TABLE FILE RCPARMS1
SUM   OUTTO
      OUTPUT_FORMAT
      DATETYPE
      RPT_NAME
      AFM_DATE
      ATO_DATE
      AFX_DATE
      ATX_DATE
      ACMFM_DATE
      ACMTO_DATE
      APMFM_DATE
      APMTO_DATE
      ACYFM_DATE
      ACYTO_DATE
      APYFM_DATE
      APYTO_DATE
      ROLLUP_CODE
      STYPE
      RCFORMAT
  SEPARATE_EMAIL
  EMAIL_SUBJECT
      EMAIL
      PUSH_EADDRS
BY EXFEX
BY SCHED_OWNER
BY SET_KEY
BY INST_KEY
ON TABLE SAVE AS &FN.EVAL FORMAT COMT
END
-RUN
-NOBKUP
 
JOIN CLEAR *
-RUN
USE CLEAR *
USE
HLDMS.FOC AS HLDAS
HLDMYTDS.FOC AS HLDAS
HLDQS.FOC AS HLDAS
HLDQYTDS.FOC AS HLDAS
HLDAS.FOC AS HLDAS
HLDBAS.FOC AS HLDAS
END
-RUN
 
DEFINE FILE HLDAS
IKEY/I11=0;
END
TABLE FILE HLDAS
SUM ATO_DATE AS LAST_PROCESS_DATE
BY SCHED_OWNER
BY SET_KEY
BY GROUP_KEY
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS HLDSETS
END
-RUN
 
DEFINE FILE HLDWS
IKEY/I11=0;
END
TABLE FILE HLDWS
SUM END_DATE AS LAST_WEEKLY_PROCESS_DATE
BY SCHED_OWNER
BY SET_KEY
BY GROUP_KEY
ON TABLE SET ASNAMES ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS HLDWSETS
END
-RUN
 
 
USE CLEAR *
USE
HLDM.FOC AS HLDA
HLDMYTD.FOC AS HLDA
HLDQ.FOC AS HLDA
HLDQYTD.FOC AS HLDA
HLDA.FOC AS HLDA
HLDBA.FOC AS HLDA
END
-RUN
 
TABLE FILE HLDA
SUM ATO_DATE AS LAST_PROCESS_DATE
BY SCHED_OWNER
BY SET_KEY
BY GROUP_KEY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDINST
END
-RUN
 
TABLE FILE HLDW
SUM END_DATE AS LAST_WEEKLY_PROCESS_DATE
BY SCHED_OWNER
BY SET_KEY
BY GROUP_KEY
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS HLDWINST
END
-RUN
 
MODIFY FILE PUSH_GROUPS
FIXFORM FROM HLDSETS
MATCH SCHED_OWNER SET_KEY GROUP_KEY
 ON MATCH UPDATE LAST_PROCESS_DATE
DATA ON HLDSETS
END
-RUN
 
MODIFY FILE PUSH_GROUPS
FIXFORM FROM HLDINST
MATCH SCHED_OWNER SET_KEY GROUP_KEY
 ON MATCH UPDATE LAST_PROCESS_DATE
DATA ON HLDINST
END
-RUN
 
MODIFY FILE PUSH_GROUPS
FIXFORM FROM HLDWSETS
MATCH SCHED_OWNER SET_KEY GROUP_KEY
 ON MATCH UPDATE LAST_WEEKLY_PROCESS_DATE
DATA ON HLDWSETS
END
-RUN
 
MODIFY FILE PUSH_GROUPS
FIXFORM FROM HLDWINST
MATCH SCHED_OWNER SET_KEY GROUP_KEY
 ON MATCH UPDATE LAST_WEEKLY_PROCESS_DATE
DATA ON HLDWINST
END
-RUN
 
-*-INCLUDE push_burst_reports
-*-RUN
-*-INCLUDE push_dbrm_reports
-*-RUN
-*-INCLUDE push_dbrw_reports
-*-RUN
 
 
-* Start process to call the java program to schedule the reports
-*
-INCLUDE PUSH_REVIEW_REPORTS_SCHEDULE
-*
-* Start process to call the java program to schedule the burst reports
-*
-*-INCLUDE PUSH_BURST_REPORTS_SCHEDULE
-*
-* Start process to call the java program to schedule the burst reports
-*
-IF &&DBRM EQ 'N' GOTO :SK3;
-*-INCLUDE PUSH_DBRM_REPORTS_SCHEDULE
-:SK3
-*
-* Start process to call the java program to schedule the burst reports
-*
-IF &&DBRW EQ 'N' GOTO :SK4;
-*-INCLUDE PUSH_DBRW_REPORTS_SCHEDULE
-:SK4
-EXIT
-HTMLFORM BEGIN
<HTML>
<BASE HREF="&&SRVR.EVAL">
<BODY>
!IBI.FIL.PRPTE1;
!IBI.FIL.PRPTE2;
!IBI.FIL.PRPT1;
!IBI.FIL.PRPT2;
-IF &&DBRM EQ 'N' GOTO :SK1;
!IBI.FIL.PRPT3;
-:SK1
-IF &&DBRW EQ 'N' GOTO :SK2;
!IBI.FIL.PRPT4;
-:SK2
</BODY>
</HTML>
-HTMLFORM END
-RUN
-*
