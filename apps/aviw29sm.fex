-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**

-* File SMRYRPT.FEX
-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-*8/18/00      IBISTL-KR            INCLUDE STYLESHEET PARAMS FOR 
-*                                  DRILLABLE REPORTS.
-*3/15/01      TANDT-SS             ADDED FIELDS FOR KIMBERLY CLARK
-*                                  TRANSACTION SUMMARY (AGENT_NUM AND
-*                                  GEOAREA)
-*4/18/01      TANDT-JK             ADDED A JOIN TO THE AGENT FILE
-*                                  SO THAT WE COULD REPORT ON AGENT_NAME
-*2/21/02      TANDT-DB             CHANGED INTERNET_FLAG TO INCLUDE TYPE
-*                                  S AND X
-* 4/18/02       SAC         Changed SIDESTEP booking to WEB Booking
-*07/03/02   STEVE              CHANGED TO eTTek Review and Copyright
-*7/9/02     Joy             Changed internet_flag define to reflect
-*                           standardized terminology
-*8/1/02    STEVE              ADDED TRAN_MYA FOR TRANSACTION BY MONTH REPORT
-*7/2/03    Joy             Added defines for online/agent transactions
-*9/4/03    Joy             Carried through Ticketing Branch field
-*02/20/04  Steve           Carried through CLIENT_NAME
-*03/16/04  Joy             Added define for KW_TRN per Karen Schroeder 
-*4/2/04    Joy             Carried through Tkt_purch - REMOVED THIS INFO
-*7/30/04   DEB             CARRIED THROUGH GEO_FLAG DEFINE
-*11/17/04  DEB             CARRIED THROUGH LVL3
-*12/21/04  DEB             ADDED ADDTL DOD_TYPE TO BOOKING TYPE DEFINES
-*1/27/05   DEB             ADDED CODE FOR GLOBAL CURRENCY
-*10/11/05  DEB             ADDED DOD_TYPE H TO BOOKING TYPE DEFINES
-*04/20/10   DEB                CHANGED ORIG_SALE DEFINE
-*1/16/14 UPDATED ONLINE/TRADITIONAL DEFINES TO USE ONLINE_TRADITIONAL FIELD INSTEAD OF DOD_TYPE
-*5/22/14   DEB             ADDED EX5 TO NUMEROUS DEFINES
-**********************************************************************


SET ASNAMES = ON
-RUN

-IF &&CURRENCY NE 'USD' THEN GOTO CHECK1 ELSE GOTO NEXT;
-CHECK1;
-SET &&SUBHEAD = <NAMEC;
-SET &TAMT_CUR = 'FARE,PAID, (' | &&CURRENCY || ')';
-SET &&S_SUBJ3='GPAID_FARE/D16.2CS AS ' | '''&TAMT_CUR.EVAL''';
-GOTO NEXT;
-RUN


-NEXT;
TABLE FILE AIRTRANS
PRINT 
  AGENT_NUM 
  AIR_KEY	
  AIRLINE
  BKD_ONLINE
  BR_CL_IDX	
  CLASS	
  CLIENT_NAME
  CURR1X
  DOC_TYPE
  DOD_TYPE
  DPT_DATE
  EMAIL_ADDR
  EMBARK	
  EX_FLAG	
  EXCHG_SALE
  GEOAREA
  GEO_FLAG
  GRAND_MSTR_CODE	
  GROUP_CODE
  GSEG_AMT/D16.2CS
  GSEG_COM/D16.2CS
  GSEG_TAX/D16.2CS
  INVOICE_NUM	
  LEVEL1	
  LEVEL2	
  LEVEL3
  LVL3
  LEVEL_DESC
  MCOS
  MTG_CODE	
  MSTR_GRP_CODE
  NAMEC
  PAID_FAREX/D16.2CS	
  PASSNGR_NAME	
  REFUSE_KEY	
  RESV_BRANCH	
  RF_FLAG
  SEG_AMT	
  SEG_COM	
  SEG_COUNT
  SEG_NBR 	
  SEG_TAX 
  TICKET_BRANCH	
  TKT_NUM
  TRAN_MYA
  TRN_DATE	
  VAL_AIRLINE	
  VOID_DATE 	
  VOID_STATUS 	
BY TKT_NUM
BY SEG_COUNT
ON TABLE HOLD AS TRANONE
END
-RUN

-JOIN
JOIN TRANONE.AGENT_NUM IN TRANONE TO AGENT.AGENT IN AGENT AS J1
-RUN

DEFINE FILE TRANONE
EMCO_TAX/D12 = IF DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E' THEN SEG_TAX 
  ELSE 0;
GEMCO_TAX/D16 = IF DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E' THEN GSEG_TAX 
  ELSE 0;	
EXCH_AMT/D12 = IF (DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E') THEN 0 ELSE IF 
  ((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (EMBARK NE 'DT1' OR 
  'RF1' OR 'FP3') AND (RF_FLAG EQ ' ')) OR ((SEG_COUNT GE 0) AND 
  (EXCHG_SALE NE ' ')) OR (EMBARK EQ 'EX1' OR 'EX5') THEN SEG_AMT ELSE 0;
GEXCH_AMT/D16 = IF (DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E') THEN 0 ELSE IF 
  ((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (EMBARK NE 'DT1' OR 
  'RF1' OR 'FP3') AND (RF_FLAG EQ ' ')) OR ((SEG_COUNT GE 0) AND 
  (EXCHG_SALE NE ' ')) OR (EMBARK EQ 'EX1' OR 'EX5') THEN GSEG_AMT ELSE 0;		
EXCH_MCO/D12 = IF DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E' THEN SEG_AMT 
  ELSE 0;
GEXCH_MCO/D16 = IF DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E' THEN GSEG_AMT 
  ELSE 0;	
EXCH_TAX/D12 = IF (DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E') THEN 0 ELSE IF 
  ((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (EMBARK NE 'DT1' OR 
  'RF1' OR 'FP3') AND (RF_FLAG EQ ' ')) OR ((SEG_COUNT GE 0) AND 
  (EXCHG_SALE NE ' ')) OR (EMBARK EQ 'EX1' OR 'EX5') THEN SEG_TAX ELSE 0;
GEXCH_TAX/D16 = IF (DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E') THEN 0 ELSE IF 
  ((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (EMBARK NE 'DT1' OR 
  'RF1' OR 'FP3') AND (RF_FLAG EQ ' ')) OR ((SEG_COUNT GE 0) AND 
  (EXCHG_SALE NE ' ')) OR (EMBARK EQ 'EX1' OR 'EX5') THEN GSEG_TAX ELSE 0;	
EXMCOS/D9 = IF (EX_FLAG NE ' ') AND (DOC_TYPE EQ '1') AND (EXCHG_SALE 
	NE ' ') THEN 1 ELSE 0;  
FARE_PAID/D12.2 = SEG_AMT + SEG_TAX;
GFARE_PAID/D16.2 = GSEG_AMT + GSEG_TAX; 	
FULL_RFNDS/D9 = IF ((VOID_DATE EQ 0) AND (RF_FLAG EQ 'F') AND (TKT_NUM 
  NE LAST TKT_NUM) AND (SEG_COUNT LT 0)) THEN 1 ELSE 0;
INTERNET_FLAG/A42=DOD_DESC;
NEW_SALES/D12 = IF (SEG_AMT GT 0) AND (SEG_COUNT GE 0) AND (EXCHG_SALE 
  EQ ' ') AND (EMBARK NE 'EX1' OR 'RF1' OR 'EX5') THEN SEG_AMT ELSE 0;
GNEW_SALES/D16 = IF (SEG_AMT GT 0) AND (SEG_COUNT GE 0) AND (EXCHG_SALE 
  EQ ' ') AND (EMBARK NE 'EX1' OR 'RF1' OR 'EX5') THEN GSEG_AMT ELSE 0;
	
NEW_SEG_AMT/D12.2 = IF VOID_STATUS EQ '0' THEN SEG_AMT ELSE 0;	
GNEW_SEG_AMT/D16.2 = IF VOID_STATUS EQ '0' THEN GSEG_AMT ELSE 0;	
NEW_SEG_COM/D12.2 = IF VOID_STATUS EQ '0' THEN SEG_COM ELSE 0;
GNEW_SEG_COM/D16.2 = IF VOID_STATUS EQ '0' THEN GSEG_COM ELSE 0;	
NEW_SEG_TAX/D12.2 = IF VOID_STATUS EQ '0' THEN SEG_TAX ELSE 0;
GNEW_SEG_TAX/D16.2 = IF VOID_STATUS EQ '0' THEN GSEG_TAX ELSE 0;	
NEW_TAX/D12 = IF ((SEG_TAX GT 0) AND (SEG_COUNT GE 0) AND (EXCHG_SALE EQ 
  ' ') AND (EMBARK NE 'EX1' OR 'RF1' OR 'EX5')) THEN SEG_TAX ELSE 0;
GNEW_TAX/D16 = IF ((SEG_TAX GT 0) AND (SEG_COUNT GE 0) AND (EXCHG_SALE EQ 
  ' ') AND (EMBARK NE 'EX1' OR 'RF1' OR 'EX5')) THEN GSEG_TAX ELSE 0;

	
NEW_TOTAL/D12 = NEW_SALES + NEW_TAX;
GNEW_TOTAL/D16 = GNEW_SALES + GNEW_TAX;	
-*ORIG_SALE/D9 = IF (SEG_NBR EQ '01') AND (FARE_PAID GE 0) AND (SEG_COUNT 
-* EQ 1) AND (EXCHG_SALE EQ ' ') THEN 1 ELSE IF (DOC_TYPE EQ '1') AND
-* (EX_FLAG EQ ' ') AND (EXCHG_SALE NE ' ') THEN 1 ELSE 0;	

ORIG_SALE/D9 = IF (SEG_NBR EQ '01') AND (FARE_PAID GE 0) AND (SEG_COUNT 
 EQ 1) AND (EXCHG_SALE EQ ' ') THEN 1 ELSE IF (DOC_TYPE EQ '1') AND
 (EX_FLAG EQ ' ') AND (EXCHG_SALE NE ' ') AND (RF_FLAG EQ ' ') THEN 1 ELSE 0;	

OTH_SALES/D9 = IF DOC_TYPE EQ '5' OR '6' OR '7' OR '8' THEN ORIG_SALE 
  ELSE 0;
	
OTHR_AMT/D12 = IF DOC_TYPE EQ '5' OR '6' OR '7' OR '8' THEN NEW_SALES 
  ELSE 0;	
OTHR_TAX/D12 = IF DOC_TYPE EQ '5' OR '6' OR '7' OR '8' THEN NEW_TAX ELSE 
  0;	
OTHR_TOTAL/D12 = IF DOC_TYPE EQ '5' OR '6' OR '7' OR '8' THEN NEW_TOTAL 
  ELSE 0;


GOTHR_AMT/D16 = IF DOC_TYPE EQ '5' OR '6' OR '7' OR '8' THEN GNEW_SALES 
  ELSE 0;	
GOTHR_TAX/D16 = IF DOC_TYPE EQ '5' OR '6' OR '7' OR '8' THEN GNEW_TAX ELSE 
  0;	
GOTHR_TOTAL/D16 = IF DOC_TYPE EQ '5' OR '6' OR '7' OR '8' THEN GNEW_TOTAL 
  ELSE 0;	


	
PAID_FARE/D12.2 = IF VOID_DATE EQ 0 THEN FARE_PAID ELSE 0;
GPAID_FARE/D16.2 = IF VOID_DATE EQ 0 THEN GFARE_PAID ELSE 0;	
PART_RFNDS/D9 = IF ((VOID_DATE EQ 0) AND (RF_FLAG EQ 'P') AND (TKT_NUM 
  NE LAST TKT_NUM) AND (SEG_COUNT LE 0)) THEN 1 ELSE 0;
	
PTA_AMT/D12 = IF DOC_TYPE EQ '4' THEN NEW_SALES ELSE 0;
GPTA_AMT/D16 = IF DOC_TYPE EQ '4' THEN GNEW_SALES ELSE 0;	
	
PTA_CNT/D9 = IF DOC_TYPE EQ '4' THEN ORIG_SALE ELSE 0;
	
PTA_TAX/D12 = IF DOC_TYPE EQ '4' THEN NEW_TAX ELSE 0;
GPTA_TAX/D12 = IF DOC_TYPE EQ '4' THEN GNEW_TAX ELSE 0;	
	
PTA_TOTAL/D12 = IF DOC_TYPE EQ '4' THEN NEW_TOTAL ELSE 0;
GPTA_TOTAL/D16 = IF DOC_TYPE EQ '4' THEN GNEW_TOTAL ELSE 0;
	
REFUND_AMT/D12 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
  'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN SEG_AMT ELSE 
  0;	
REFUND_TAX/D12 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
  'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN SEG_TAX ELSE 
  0;	
REFUND_TOTAL/D12 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
  'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN FARE_PAID ELSE 
  0;


GREF_AMT/D16 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
  'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN GSEG_AMT ELSE 
  0;	
GREF_TAX/D16 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
  'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN GSEG_TAX ELSE 
  0;	
GREF_TTL/D16 = IF ((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 
  'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1') THEN GFARE_PAID ELSE 
  0;	


	
REFUNDS/D9 = FULL_RFNDS + PART_RFNDS;	
TKT_CNT/D8CS = IF (SEG_NBR EQ '01') AND (FARE_PAID GE 0) AND (SEG_COUNT 
  EQ 1) THEN 1 ELSE 0;	
TKTLESS/D9 = IF DOC_TYPE EQ '9' THEN ORIG_SALE ELSE 0;


	
TKTLS_AMT/D12 = IF DOC_TYPE EQ '9' THEN NEW_SALES ELSE 0;	
TKTLS_TAX/D12 = IF DOC_TYPE EQ '9' THEN NEW_TAX ELSE 0;	
TKTLS_TOTAL/D12 = IF DOC_TYPE EQ '9' THEN NEW_TOTAL ELSE 0;

GTKTLS_AMT/D16 = IF DOC_TYPE EQ '9' THEN GNEW_SALES ELSE 0;	
GTKTLS_TAX/D16 = IF DOC_TYPE EQ '9' THEN GNEW_TAX ELSE 0;	
GTKTLS_TOTAL/D16 = IF DOC_TYPE EQ '9' THEN GNEW_TOTAL ELSE 0;

		
TOT_ETAX/D12 = EXCH_TAX + EMCO_TAX;	
TOT_EXCH/D12 = EXCH_AMT + EXCH_MCO;


GTOT_ETAX/D16 = GEXCH_TAX + GEMCO_TAX;	
GTOT_EXCH/D16 = GEXCH_AMT + GEXCH_MCO;
	
TOUR_AMT/D12 = IF DOC_TYPE EQ '2' THEN NEW_SALES ELSE 0;	
TOUR_ORDERS/D9 = IF DOC_TYPE EQ '2' THEN ORIG_SALE ELSE 0;	
TOUR_TAX/D12 = IF DOC_TYPE EQ '2' THEN NEW_TAX ELSE 0;	
TOUR_TOTAL/D12 = IF DOC_TYPE EQ '2' THEN NEW_TOTAL ELSE 0;


GTOUR_AMT/D16 = IF DOC_TYPE EQ '2' THEN GNEW_SALES ELSE 0;	
GTOUR_TAX/D16 = IF DOC_TYPE EQ '2' THEN GNEW_TAX ELSE 0;	
GTOUR_TOTAL/D16 = IF DOC_TYPE EQ '2' THEN GNEW_TOTAL ELSE 0;
	
TRAN_DT/MDYY = TRN_DATE;
	
VOID_AMT/D12 = IF VOID_DATE NE 0 THEN SEG_AMT ELSE 0;	
VOID_TAX/D12 = IF VOID_DATE NE 0 THEN SEG_TAX ELSE 0;	
VOID_TOTAL/D12 = IF VOID_DATE NE 0 THEN FARE_PAID ELSE 0;

GVOID_AMT/D16 = IF VOID_DATE NE 0 THEN GSEG_AMT ELSE 0;	
GVOID_TAX/D16 = IF VOID_DATE NE 0 THEN GSEG_TAX ELSE 0;	
GVOID_TOTAL/D16 = IF VOID_DATE NE 0 THEN GFARE_PAID ELSE 0;
	
VOIDS/D9 = IF (VOID_DATE NE 0) AND (SEG_COUNT EQ 1) AND (SEG_NBR EQ '01')
 THEN 1 ELSE IF (DOC_TYPE EQ '1' AND VOID_DATE NE 0) THEN 1 ELSE 0;	

-* Defines on previous DEFINEs
EMCO_TOTAL/D12 = IF DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E' THEN FARE_PAID 
  ELSE 0;

GEMCO_TOTAL/D16 = IF DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E' THEN GFARE_PAID 
  ELSE 0;	
EXCHGS/D9 = IF (EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (EMBARK 
 NE 'DT1' OR 'RF1' OR 'FP3') THEN TKT_CNT ELSE IF (DOC_TYPE EQ '1') AND 
(EXCHG_SALE EQ 'E') THEN 0 ELSE IF (SEG_COUNT GE 0) AND (EXCHG_SALE NE 
  ' ') THEN TKT_CNT ELSE 0;

EXCH_TOTAL/D12 = IF (DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E') THEN 0 ELSE 
  IF (((EXCHG_SALE NE ' ') AND (SEG_COUNT GE 0)) OR ((EMBARK NE 'DT1' OR 
  'RF1' OR 'FP3') AND (RF_FLAG EQ ' ') AND (EX_FLAG EQ 'F' OR 'P') AND 
  (SEG_COUNT LE 0)) OR (EMBARK EQ 'EX1' OR 'EX5')) THEN FARE_PAID ELSE 0;

GEXCH_TOTAL/D16 = IF (DOC_TYPE EQ '1' AND EXCHG_SALE EQ 'E') THEN 0 ELSE 
  IF (((EXCHG_SALE NE ' ') AND (SEG_COUNT GE 0)) OR ((EMBARK NE 'DT1' OR 
  'RF1' OR 'FP3') AND (RF_FLAG EQ ' ') AND (EX_FLAG EQ 'F' OR 'P') AND 
  (SEG_COUNT LE 0)) OR (EMBARK EQ 'EX1' OR 'EX5')) THEN GFARE_PAID ELSE 0;

	
FRFND_AMT/D12 = IF RF_FLAG EQ 'F' THEN REFUND_AMT ELSE 0;	
FRFND_TAX/D12 = IF RF_FLAG EQ 'F' THEN REFUND_TAX ELSE 0;	
FRFND_TOTAL/D12 = IF RF_FLAG EQ 'F' THEN REFUND_TOTAL ELSE 0;

GFREF_AMT/D16 = IF RF_FLAG EQ 'F' THEN GREF_AMT ELSE 0;	
GFREF_TAX/D16 = IF RF_FLAG EQ 'F' THEN GREF_TAX ELSE 0;	
GFREF_TTL/D16 = IF RF_FLAG EQ 'F' THEN GREF_TTL ELSE 0;		

HNDWRT_AMT/D12 = IF DOC_TYPE EQ '3' THEN NEW_SALES ELSE 0;	
HNDWRT_TAX/D12 = IF DOC_TYPE EQ '3' THEN NEW_TAX ELSE 0;	
HNDWRT_TOTAL/D12 = IF DOC_TYPE EQ '3' THEN NEW_TOTAL ELSE 0;

GHNDWRT_AMT/D16 = IF DOC_TYPE EQ '3' THEN GNEW_SALES ELSE 0;	
GHNDWRT_TAX/D16 = IF DOC_TYPE EQ '3' THEN GNEW_TAX ELSE 0;	
GHNDWRT_TOTAL/D16 = IF DOC_TYPE EQ '3' THEN GNEW_TOTAL ELSE 0;
	
HNDWRTS/D9 = IF DOC_TYPE EQ '3' THEN ORIG_SALE ELSE 0;


	
MCO_AMT/D12 = IF DOC_TYPE EQ '1' THEN NEW_SALES ELSE 0;	
MCO_CNT/D9 = IF DOC_TYPE EQ '1' THEN ORIG_SALE ELSE 0;		
MCO_TAX/D12 = IF DOC_TYPE EQ '1' THEN NEW_TAX ELSE 0;	
MCO_TOTAL/D12 = IF DOC_TYPE EQ '1' THEN NEW_TOTAL ELSE 0;


GMCO_AMT/D16 = IF DOC_TYPE EQ '1' THEN GNEW_SALES ELSE 0;	
GMCO_TAX/D16 = IF DOC_TYPE EQ '1' THEN GNEW_TAX ELSE 0;	
GMCO_TOTAL/D16 = IF DOC_TYPE EQ '1' THEN GNEW_TOTAL ELSE 0;
		
NET_AMT/D12 = NEW_SALES + REFUND_AMT + TOT_EXCH - VOID_AMT;	
NET_TAX/D12 = NEW_TAX + REFUND_TAX + TOT_ETAX - VOID_TAX;

GNET_AMT/D16 = GNEW_SALES + GREF_AMT + GTOT_EXCH - GVOID_AMT;	
GNET_TAX/D16 = GNEW_TAX + GREF_TAX + GTOT_ETAX - GVOID_TAX;

	
PRFND_AMT/D12 = IF RF_FLAG EQ 'P' THEN REFUND_AMT ELSE 0;	
PRFND_TAX/D12 = IF RF_FLAG EQ 'P' THEN REFUND_TAX ELSE 0;	
PRFND_TOTAL/D12 = IF RF_FLAG EQ 'P' THEN REFUND_TOTAL ELSE 0;

GPREF_AMT/D16 = IF RF_FLAG EQ 'P' THEN GREF_AMT ELSE 0;	
GPREF_TAX/D16 = IF RF_FLAG EQ 'P' THEN GREF_TAX ELSE 0;	
GPREF_TTL/D16 = IF RF_FLAG EQ 'P' THEN GREF_TTL ELSE 0;
		
TOTAL_EXCHG/D12 = EXCH_TOTAL + EMCO_TOTAL;

GTOTAL_EXCHG/D16 = GEXCH_TOTAL + GEMCO_TOTAL;	
TOT_ECNT/D9 = EXCHGS + EXMCOS;	
TOT_TRANS/D9 = ORIG_SALE + VOIDS + TOT_ECNT + REFUNDS;
	
CHARGE_TRN/D9 = ORIG_SALE + VOIDS + EXCHGS + REFUNDS;
KW_TRN/D9 = ORIG_SALE + EXCHGS;
TRN_TYPE/A4 = IF (VOIDS EQ 1) THEN 'VOID' ELSE IF (ORIG_SALE EQ 1) THEN 
  'SALE' ELSE IF (TOT_ECNT EQ 1) THEN 'EXCH' ELSE IF (REFUNDS EQ 1) THEN 
  'RFND' ELSE ' ';	
FEE1/D12.2CS = 35.25;
FEE1X/D20.6 = FEE1 * CURR1X;

-* Defines on previous DEFINEs
NET_TOTAL/D12 = NEW_TOTAL + REFUND_TOTAL + TOTAL_EXCHG - VOID_TOTAL;
GNET_TOTAL/D16 = GNEW_TOTAL + GREF_TTL + GTOTAL_EXCHG - GVOID_TOTAL;
NET_TRAN/D12 = ORIG_SALE + EXCHGS - REFUNDS - VOIDS;	
FEE/D12.2CS = CHARGE_TRN * FEE1;
GFEE/D16.2CS = CHARGE_TRN * FEE1X;
OTOT_TRN/D9 = IF ONLINE_TRADITIONAL NE ' ' THEN TOT_TRANS ELSE 0;
TTOT_TRN/D9 = IF DOD_TYPE NE 'H' OR 'I' OR 'J' OR 'M' OR 'X' OR 
                     'A' OR 'L' OR 'N' OR 'S' THEN TOT_TRANS ELSE 0;

	

-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-**********************************************************************
 NOWTOD/A8 WITH TKT_NUM = HHMMSS (NOWTOD);
END
TABLE FILE TRANONE
-INCLUDE HEADER
"&&SUBHEAD"
"</2"
    &&S_SUBJ1
    &&S_SUBJ2
    &&S_SUBJ3
    &&S_SUBJ4
    &&S_SUBJ5
    &&S_SUBJ6
    &&S_SUBJ7
    &&S_SUBJ8
    &&S_SUBJ9
    &&S_SUBJ10
    
-*BY
   &&S_TARG1
   &&S_TARG2
   &&S_TARG3
   &&S_TARG4
   &&S_TARG5
   &&S_TARG6
   &&S_TARG7
   &&S_TARG8
   &&S_TARG9
   &&S_TARG10
-*ON
   &&SUMM_ON1
   &&SUMM_ON2
   &&SUMM_ON3
   &&SUMM_ON4
   &&SUMM_ON5
   &&SUMM_ON6
   &&SUMM_ON7
   &&SUMM_ON8
   &&SUMM_ON9
   &&SUMM_ON10

-INCLUDE FOOTERTR
ON TABLE COLUMN-TOTAL
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT

-**********************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT 
-*                                  WITH AN INCLUDE
-**********************************************************************
ON TABLE SET STYLE *
-INCLUDE &&SMSTY     

-**********************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/18/00      IBISTL-KR            INCLUDE STYLESHEET PARAMS FOR 
-*                                  DRILLABLE REPORTS.
-**********************************************************************
-IF &&DRILLABLE EQ 'N' GOTO SKIP_DRILL;
-INCLUDE &&DSTY

-SKIP_DRILL

ENDSTYLE
&&OUTLINE1
&&SUMMDEST
&&OUTLINE2
END
-RUN

JOIN CLEAR J1
-RUN

-IF &&DRILLABLE EQ 'Y' GOTO SKIP_R3;

EX REPORT_3

-SKIP_R3
