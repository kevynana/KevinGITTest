-* File CATQTRHP.FEX
-*
-*****   This routine reads the Control DB, looking for the current
-*****     ROLLUP to determine if the Rollup databases need concatenation
-*****     then generates the appropriate INCLUDE file for the Hierarchy
-*****     update
-*****   AUTHOR:  Dave Kuzanek
-*****   PRODUCTION DATE:
-*

MAINTAIN FILES CONTROL AND ROLLUP AND ROLLQTR AND HLDCATHP

COMPUTE Cnt1/I1 = ;
COMPUTE OutLineF/A72 =;
COMPUTE Hold_Line/A72 = ;
COMPUTE Roll/A6 = ;
COMPUTE DBName/A12 = ;
COMPUTE DPos/I1 = ;
COMPUTE To_Flag/A1 = ;

COMPUTE Q_Temp.QFMDT/YYMD = ;
COMPUTE Q_Temp.QTODT/YYMD = ;
COMPUTE Q_Temp.QTR/A1 = ;

COMPUTE SqX/A2 = HEXBYT(39, SqX) || HEXBYT(39, SqX);
COMPUTE DqX/A2 = HEXBYT(34, DqX);
COMPUTE SpX/A1 = HEXBYT(64, SpX);
COMPUTE AmpX/A1 = HEXBYT(38, AmpX);

INFER ROLLUP.ROLLUP_CODE INTO Roll_Stack
INFER ROLLQTR.ROLLUP_CODE INTO Qtr_Stack
INFER CONTROL.CONTROL_ID INTO Cntl_Stack
INFER HLDCATHP.ROLLUP_CODE INTO Serv_Stack

REPOSITION CONTROL.CONTROL_ID
FOR ALL NEXT CONTROL.CONTROL_ID INTO Cntl_Stack
FOR ALL NEXT HLDCATHP.ROLLUP_CODE INTO Serv_Stack
REPOSITION ROLLUP.ROLLUP_CODE
NEXT ROLLUP.ROLLUP_CODE INTO Roll_Stack
  WHERE ROLLUP.ROLLUP_CODE EQ Cntl_Stack(1).ROLLUP_CODE

COMPUTE Roll = Roll_Stack(1).COMP;

IF Roll_Stack(1).QTR_ENABLE EQ 'X' THEN
BEGIN
  STACK CLEAR Qtr_Stack
  REPOSITION ROLLQTR.ROLLUP_CODE
  NEXT ROLLQTR.ROLLUP_CODE INTO Qtr_Stack WHERE
    ROLLQTR.ROLLUP_CODE EQ Roll_Stack(1).ROLLUP_CODE
  PERFORM Multiple_DB
  PERFORM Write_Mult
ENDBEGIN
ELSE BEGIN
  PERFORM Single_DB
ENDBEGIN
GOTO END

CASE Single_DB
-* Air
  COMPUTE DBName = 'S_' || Roll || '.FOC';
-*  COMPUTE Hold_Line = Roll_Stack(1).AIR_PATH || DBName ||
  COMPUTE Hold_Line = Serv_Stack(1).SERV_PATH || DBName ||
    ' AS ' | 'CITYPAIR';
  TYPE ON AUSEINCL "<Hold_Line"
-* Car
  COMPUTE DBName = 'C_' || Roll || '.FOC';
-*  COMPUTE Hold_Line = Roll_Stack(1).CAR_PATH || DBName ||
  COMPUTE Hold_Line = Serv_Stack(1).SERV_PATH || DBName ||
    ' AS ' | 'CAR_MAIN';
  TYPE ON CUSEINCL "<Hold_Line"
-* Hotel
  COMPUTE DBName = 'H_' || Roll || '.FOC';
-*  COMPUTE Hold_Line = Roll_Stack(1).HTL_PATH || DBName ||
  COMPUTE Hold_Line = Serv_Stack(1).SERV_PATH || DBName ||
    ' AS ' | 'HTL_MAIN';
  TYPE ON HUSEINCL "<Hold_Line"
endcase

CASE Multiple_DB
  STACK CLEAR Q_Temp
  COMPUTE Cnt1 = 1;
  IF Qtr_Stack(1).Q1FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q1FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q1TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '1';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q2FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q2FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q2TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '2';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q3FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q3FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q3TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '3';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q4FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q4FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q4TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '4';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q5FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q5FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q5TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '5';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q6FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q6FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q6TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '6';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q7FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q7FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q7TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '7';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q8FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q8FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q8TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '8';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q9FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q9FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q9TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '9';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).Q0FMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).Q0FMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).Q0TODT;
    COMPUTE Q_Temp(Cnt1).QTR = '0';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).QZFMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).QZFMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).QZTODT;
    COMPUTE Q_Temp(Cnt1).QTR = 'Z';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  IF Qtr_Stack(1).QYFMDT GT ' ' THEN
  BEGIN
    COMPUTE Q_Temp(Cnt1).QFMDT = Qtr_Stack(1).QYFMDT;
    COMPUTE Q_Temp(Cnt1).QTODT = Qtr_Stack(1).QYTODT;
    COMPUTE Q_Temp(Cnt1).QTR = 'Y';
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDBEGIN
  STACK SORT Q_Temp BY QFMDT
endcase

CASE Write_Mult
  COMPUTE Cnt1 = 1;
  REPEAT WHILE Cnt1 LE Q_Temp.FocCount
    PERFORM Post_Mult
    COMPUTE Cnt1 = Cnt1 + 1;
  ENDREPEAT
ENDCASE

CASE Post_Mult
-* Air
  COMPUTE DBName = 'S' || Q_Temp(Cnt1).QTR || Roll || '.FOC';
-*  COMPUTE Hold_Line = Roll_Stack(1).AIR_PATH || DBName ||
  COMPUTE Hold_Line = Serv_Stack(1).SERV_PATH || DBName ||
    ' AS ' | 'CITYPAIR';
  TYPE ON AUSEINCL "<Hold_Line"
-* Car
  COMPUTE DBName = 'C' || Q_Temp(Cnt1).QTR || Roll || '.FOC';
-*COMPUTE Hold_Line = Roll_Stack(1).CAR_PATH || DBName ||
  COMPUTE Hold_Line = Serv_Stack(1).SERV_PATH || DBName ||
    ' AS ' | 'CAR_MAIN';
  TYPE ON CUSEINCL "<Hold_Line"
-* Hotel
  COMPUTE DBName = 'H' || Q_Temp(Cnt1).QTR || Roll || '.FOC';
-*  COMPUTE Hold_Line = Roll_Stack(1).HTL_PATH || DBName ||
  COMPUTE Hold_Line = Serv_Stack(1).SERV_PATH || DBName ||
    ' AS ' | 'HTL_MAIN';
  TYPE ON HUSEINCL "<Hold_Line"
ENDCASE


case Winform_Form1
-*   Winform show Form1
endcase




END
