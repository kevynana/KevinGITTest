-**************************************************************************************************************
-*  ADHOCRANKBY1.FEX
-*  This program is used to generate dynamic query when only one RANKBYTOP is selected, which means
-*  &&RANK_LIMIT GT 0 but &&RANK_LIMIT2 EQ 0.  The 2 global variables are generated from codegen.
-*  &&FieldName.&CNT2 AND &&FldFormat.&CNT2 are set in QueryBuilder.fex.
-*  Date: 01/24/2011
-*  07/12/2016 lsi S-21564 Ad Hoc - problem with ranking by Advance Purchase Days 
-**************************************************************************************************************
SET ASNAME = ON

-*step 1 (sum)
-WRITE ADHOCQUERY &QUERY 
-WRITE ADHOCQUERY SUM

-***********************************************************************************************
-* some special fields defined in aview0ex or cview0ex or hview0ex for percentage calculations
-*
-IF '&RPTGROUP.EVAL' EQ 'AIR' THEN GOTO DEFRNKAIR;
-IF '&RPTGROUP.EVAL' EQ 'CAR' THEN GOTO DEFRNKCAR;
-IF '&RPTGROUP.EVAL' EQ 'HTL' THEN GOTO DEFRNKHTL;

-DEFRNKAIR
-WRITE ADHOCQUERY MRK_COUNT MKT_CNT MILES NET_TKT_CNT NR_TKT ONL_TKT REF_EXCH_CNT XMILES
-WRITE ADHOCQUERY FARE_PAID AS 'TOT_ORG_FARE'   
-WRITE ADHOCQUERY DISSAVINGS AS 'TOT_ORG_DSAVE'
-WRITE ADHOCQUERY TKT_PURCH AS 'TOT_ORG_PURCH'
-WRITE ADHOCQUERY REF_EXCH_CNT AS 'TOT_ORG_RFEX'
-WRITE ADHOCQUERY SAVINGS AS 'TOT_ORG_SAVE'
-WRITE ADHOCQUERY NET_TKT_CNT AS 'TOT_ORG_NETTKT'
-WRITE ADHOCQUERY MRK_CNT AS 'TOT_ORG_MKTCNT'
-WRITE ADHOCQUERY BASE_FARE AS 'TOT_ORG_BASEF'
-WRITE ADHOCQUERY MILE AS 'TOT_ORG_MILES'
-GOTO ENDDEFHTL;

-DEFRNKCAR
-WRITE ADHOCQUERY BOOKINGS AS 'CBOOK'
-WRITE ADHOCQUERY RENTAL_AMT AS 'CRAMT'
-GOTO ENDDEFHTL;
-ENDDEFCAR

-DEFRNKHTL
-WRITE ADHOCQUERY NBR_DAYS AS 'HNDAYS'
-WRITE ADHOCQUERY NEW_TOTAL_AMT AS 'HTTL'
-WRITE ADHOCQUERY BOOKINGS AS 'HBOOK'
    
-ENDDEFHTL
-***********************************************************************************************

-SET &INDX = 1;
-REPEAT RankByA01A &XDTLINES2 TIMES 
-SET &Q1 = &XCOLUMN2.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-RankByA01A

-SET &INDEXX = &STARTX;
-REPEAT AdhRankByA01 &TotalByLines TIMES 
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;         
-AdhRankByA01

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDA0
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN 

-*step 2 (print)
-WRITE ADHOCQUERY TABLE FILE HOLDA0
-WRITE ADHOCQUERY PRINT

-***********************************************************************************************
-* some special fields defined in aview0ex or cview0ex or hview0ex for percentage calculations
-IF '&RPTGROUP.EVAL' EQ 'AIR' THEN GOTO DEFRNKAIR1;
-IF '&RPTGROUP.EVAL' EQ 'CAR' THEN GOTO DEFRNKCAR1;
-IF '&RPTGROUP.EVAL' EQ 'HTL' THEN GOTO DEFRNKHTL1;

-DEFRNKAIR1
-WRITE ADHOCQUERY MRK_COUNT MKT_CNT MILES NET_TKT_CNT NR_TKT ONL_TKT REF_EXCH_CNT XMILES AIRLINE
-WRITE ADHOCQUERY TOT_ORG_FARE TOT_ORG_DSAVE TOT_ORG_PURCH TOT_ORG_RFEX TOT_ORG_SAVE
-WRITE ADHOCQUERY TOT_ORG_NETTKT TOT_ORG_MKTCNT TOT_ORG_BASEF TOT_ORG_MILES
-GOTO ENDDEFHTL1;

-DEFRNKCAR1
-WRITE ADHOCQUERY CBOOK CRAMT
-GOTO ENDDEFHTL1;
-ENDDEFCAR1

-DEFRNKHTL1
-WRITE ADHOCQUERY HNDAYS HTTL HBOOK
    
-ENDDEFHTL1
-***********************************************************************************************

-SET &INDEXX = 1;
-REPEAT AdhRankByA02 &XDTLINES2 TIMES
-SET &Q1 = &XCOLUMN2.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA02

-WRITE ADHOCQUERY RANKED BY HIGHEST &&RANK_METH NOPRINT

-SET &INDEXX = &STARTX;
-REPEAT AdhRankByB02 &TotalByLines TIMES
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB02

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDA1
-WRITE ADHOCQUERY END

-*STEP 3(PRINT) : DEFINE RANK_VAL

-WRITE ADHOCQUERY DEFINE FILE HOLDA1
-WRITE ADHOCQUERY   RANKLIMIT/I9 = &&RANK_LIMIT;
-WRITE ADHOCQUERY   DRANK/D9 = RANK;
-WRITE ADHOCQUERY   ARANK/A11 = FTOA(DRANK, '(D9)', 'A11');
-WRITE ADHOCQUERY   LIST/D9 = (LAST LIST + 1);
-WRITE ADHOCQUERY   CRANKX/A11 = FTOA(LIST, '(D9)', 'A11');
-WRITE ADHOCQUERY   CRANK/A9 = EDIT(CRANKX,'$$999999999');

-WRITE ADHOCQUERY   RANK_VAL/A9 = EDIT(ARANK, '$999999999');
-*-WRITE ADHOCQUERY   RANK_VALUE/A5 = IF RANK LE RANKLIMIT THEN RANK_VAL ELSE 'Other';
-WRITE ADHOCQUERY   RANK_VALUE/A9 = IF RANKLIMIT EQ 0 THEN RANK_VAL ELSE IF LIST GT RANKLIMIT THEN 'Other' ELSE CRANK; 
-WRITE ADHOCQUERY END

-WRITE ADHOCQUERY TABLE FILE HOLDA1
-WRITE ADHOCQUERY PRINT 

-***********************************************************************************************
-* some special fields defined in aview0ex or cview0ex or hview0ex for percentage calculations
-IF '&RPTGROUP.EVAL' EQ 'AIR' THEN GOTO DEFRNKAIR2;
-IF '&RPTGROUP.EVAL' EQ 'CAR' THEN GOTO DEFRNKCAR2;
-IF '&RPTGROUP.EVAL' EQ 'HTL' THEN GOTO DEFRNKHTL2;

-DEFRNKAIR2
-WRITE ADHOCQUERY MRK_COUNT MKT_CNT MILES NET_TKT_CNT NR_TKT ONL_TKT REF_EXCH_CNT XMILES AIRLINE 
-WRITE ADHOCQUERY TOT_ORG_FARE TOT_ORG_DSAVE TOT_ORG_PURCH TOT_ORG_RFEX TOT_ORG_SAVE
-WRITE ADHOCQUERY TOT_ORG_NETTKT TOT_ORG_MKTCNT TOT_ORG_BASEF TOT_ORG_MILES
-GOTO ENDDEFHTL2;

-DEFRNKCAR2
-WRITE ADHOCQUERY CBOOK CRAMT
-GOTO ENDDEFHTL2;
-ENDDEFCAR2

-DEFRNKHTL2
-WRITE ADHOCQUERY HNDAYS HTTL HBOOK
    
-ENDDEFHTL2
-***********************************************************************************************

-SET &INDEXX = 1;
-REPEAT AdhRankByA03 &XDTLINES2 TIMES
-SET &Q1 = &XCOLUMN2.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA03

-WRITE ADHOCQUERY BY RANK_VALUE

-SET &INDEXX = &STARTX;
-REPEAT AdhRankByB03 &TotalByLines TIMES
-SET &Q1 = &BYCOLUMNX.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL';
-WRITE ADHOCQUERY &QUERYLINE

-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB03

-WRITE ADHOCQUERY ON TABLE HOLD AS HOLDA2
-WRITE ADHOCQUERY END


-SET &SORTFLD = &BYCOLUMNX.&STARTX ;
-SET &LEN=ARGLEN(100, '&SORTFLD.EVAL', 'I2') - 3;
-SET &SORTFLD = SUBSTR(100,'&SORTFLD.EVAL',4,&LEN+3, &LEN, 'A&LEN.EVAL');
-SET &SORTFLD = TRIM('B', &SORTFLD, &LEN, ' ', 1, 'A&LEN.EVAL' );

-*STEP 4(SUM): redefine a sort field (production code or description)
-WRITE ADHOCQUERY DEFINE FILE HOLDA2

-*add X to the By fields in order to sum up 'All Other'
-SET &CNT2 = 1;
-REPEAT AdhRankByB04 &TotalByLines TIMES
-SET &Q1 = &&FieldName.&CNT2 ;
-SET &Q2 = &&FldFormat.&CNT2 ;

-*if the field is a numeric field, assign 0 to it and supress the 0 in the report
-SET &Q2 = IF '&Q2.EVAL' LIKE 'D%' THEN '&Q2.EVAL' || 'S' ELSE &Q2;

-SET &FLDNAME = '&Q1.EVAL' || 'X' | '/' | '&Q2.EVAL' ;
-SET &ELSEVAL = IF '&Q2.EVAL' LIKE 'D%' THEN 0 ELSE ''' ''';
-WRITE ADHOCQUERY   &FLDNAME = IF RANK_VALUE LE '&&RANK_LIMIT' THEN &Q1 ELSE &ELSEVAL;

-*-WRITE ADHOCQUERY   &FLDNAME = IF RANK_VALUE LE '&&RANK_LIMIT' THEN &Q1 ELSE 'All Other';
-*-WRITE ADHOCQUERY   &FLDNAME = IF RANK_VALUE LE '&&RANK_LIMIT' THEN &Q11 ELSE '';

-SET &CNT2 = &CNT2 + 1;
-AdhRankByB04


-WRITE ADHOCQUERY   NOWTOD/A8 = HHMMSS (NOWTOD);
-*Write defined fields
-IF &DEFINES EQ 0 THEN GOTO NODEFINES2;
-SET &INDX = 1;
-REPEAT Writedef2 &DEFINES TIMES 
-SET &Q1 = &DCOLUMN.&INDX;
-SET &QUERYLINE = '&Q1.EVAL' ;
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDX = &INDX + 1;         
-Writedef2
-NODEFINES2

-*start of the change on 07/17/2012
-*check if flight duration range selected - print blank in the row of "Other"
-SET &INDEXX = 1;
-REPEAT AdRankDet5X &TotalDetailLines TIMES
-SET &Q1 = &COLUMN.&INDEXX;
-IF '&Q1.EVAL' NE 'FLIGHT_RANGE' OR 'TKT_FLIGHT_RANGE' THEN GOTO IncDetail5X;
-SET &FLDNAME = '&Q1.EVAL' || 'X';
-WRITE ADHOCQUERY   &FLDNAME/A30 = IF RANK_VALUE LE '&&RANK_LIMIT' THEN &Q1 ELSE '';
-IncDetail5X
-SET &INDEXX = &INDEXX + 1;          
-AdRankDet5X
-*Changed on 07/17/2012

-WRITE ADHOCQUERY END


-WRITE ADHOCQUERY TABLE FILE HOLDA2
-WRITE ADHOCQUERY -INCLUDE HEADAIR
-WRITE ADHOCQUERY "</2"
-WRITE ADHOCQUERY SUM 




-*Write Detail fields to the query
-SET &INDEXX = 1;
-REPEAT AdhRankByA05 &TotalDetailLines TIMES
-SET &Q1 = &COLUMN.&INDEXX;
-SET &Q1 = IF '&Q1.EVAL' CONTAINS 'FLIGHT_RANGE' THEN '&Q1.EVAL' || 'X' ELSE '&Q1.EVAL';

-SET &Q2 = &COLTITLE.&INDEXX;
-SET &QUERYLINE = '&Q1.EVAL' || ' AS ' | '''&Q2.EVAL''';
-WRITE ADHOCQUERY &QUERYLINE
-SET &INDEXX = &INDEXX + 1;          
-AdhRankByA05


-WRITE ADHOCQUERY BY RANK_VALUE AS ''

-*Write sort fields (By fields - used defined name in the query) to the query
-SET &CNT2 = 1;
-SET &INDEXX = &STARTX;

-SET &Q1 = &&FieldName.&CNT2 ;
-SET &FSTSORT = '&Q1.EVAL' || 'X';

-REPEAT AdhRankByB05 &TotalByLines TIMES
-SET &Q1 = &&FieldName.&CNT2 ;
-SET &Q2 = &COLTITLE.&INDEXX;
-SET &QUERYLINE = 'BY ' | '&Q1.EVAL' || 'X' | ' AS ' | '''&Q2.EVAL''';
-WRITE ADHOCQUERY &QUERYLINE
-SET &CNT2 = &CNT2 + 1;
-SET &INDEXX = &INDEXX + 1;   
-AdhRankByB05

-WRITE ADHOCQUERY ON TABLE PAGE-BREAK AND SUBFOOT
-WRITE ADHOCQUERY -INCLUDE SBFOOT
-WRITE ADHOCQUERY ON TABLE SET PAGE-NUM OFF
-WRITE ADHOCQUERY ON TABLE SET STYLE *
-WRITE ADHOCQUERY -INCLUDE &&DTSTY
-WRITE ADHOCQUERY ENDSTYLE

-WRITE ADHOCQUERY &&OUTLINE1
-WRITE ADHOCQUERY &&OUTLINE2 


-SET &SubtotalLine1 = IF &SUBTOTALS NE 0 THEN 'ON ' | '&FSTSORT.EVAL' | ' RECOMPUTE MULTILINES &SubtotalColumns.EVAL AS ' | '''Total For '''  ELSE ' ';
-WRITE ADHOCQUERY &SubtotalLine1

-*-WRITE ADHOCQUERY ON TABLE COLUMN-TOTAL
-*-WRITE ADHOCQUERY &SubtotalLine2

-WRITE ADHOCQUERY &GrandTotalLIne
-WRITE ADHOCQUERY END
-WRITE ADHOCQUERY -RUN 
-CLOSE ADHOCQUERY;
  