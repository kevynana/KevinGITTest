-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* File APSMRY.FEX
-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*1/28/02      TANDT-DB             CARRIED THROUGH CLCAT_B CLCAT_C
-*                                    CLCAT_D CLCAT_F CLCAT_O
-*07/03/02   STEVE              CHANGED TO eTTek Review and Copyright
-*7/23/07    DEB                CARRIED THROUGH KB_AGT 
-*  02/02/2015  REJ  S-05681 Changes to the no data report to prepare for the Available
-*                           Report changes.  Rollup Code is being removed from BRPTINST in
-*                           ER5, so I'm removing the reference to the ROLLUP_CODE in that report.
-* Story ID S-10086 Added &&overdrill flag logic for use in 5.0 to choose to for the report to be drillable or non-drillable - 9/15/15 - JM
-*01/11/16 - JEM - S-13286 Updated to allow reports to sort/subtotal by id-levels
-*03/09/17 - DLV - S-22486 Changed ettek Review to Post-trip Reporting
-*10/20/17 - JEM - S-41096 Adding ATP to the standard ABFLTDUR report for each class of service

-**********************************************************************
-INCLUDE SETECHO

SET ASNAMES = ON
-RUN 

-IF &&SETF EQ 'MAFLTDUR' GOTO MANI;
-IF &&SETF EQ 'MXFLTDUR' GOTO METX;

TABLE FILE &&RPT_HOLD
SUM 
    DISSAVINGS AS 'DISSAV'
    FARE_PAID/D12.2CS AS 'TFARE'
    NET_TKT_CNT AS 'NTTKT'
    REF_EXCH_CNT AS 'TRFEX'
    SAVINGS AS 'TSAVE'
    TKT_PURCH AS 'TTKT'
BY LEVEL_DESC 
ON TABLE HOLD AS HOLDONE
END
-RUN

TABLE FILE &&RPT_HOLD
SUM FARE_PAID/D12.2CS AS 'TLFARE'
    NET_TKT_CNT AS 'TLTKT'
BY LEVEL_DESC
BY FLT_LEN
ON TABLE HOLD AS HOLDTWO
END
-RUN


TABLE FILE &&RPT_HOLD
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
  FLT_LEN
  KEY
  LEVEL1
  LEVEL2
  LEVEL3
  LVSEL
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT  
  XPSNGR_NM
BY LEVEL_DESC
ON TABLE HOLD AS XTWO
END
-RUN


MATCH FILE XTWO
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
  FLT_LEN
   KEY
  LEVEL1
  LEVEL2
  LEVEL3
  LVSEL
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT    
BY LEVEL_DESC
ON TABLE HOLD
RUN
FILE HOLDONE
SUM TTKT
    TRFEX
    NTTKT
    DISSAV
    TSAVE
    TFARE
BY LEVEL_DESC
AFTER MATCH HOLD AS MATCHTWO OLD-OR-NEW 
END
-RUN


MATCH FILE MATCHTWO
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
  KEY
  LEVEL1
  LEVEL2
  LEVEL3
  LVSEL
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  TTKT
  TRFEX
  NTTKT
  DISSAV
  TSAVE
  TFARE
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT    
BY LEVEL_DESC
BY FLT_LEN
ON TABLE HOLD
RUN
FILE HOLDTWO
SUM TLFARE
    TLTKT
BY LEVEL_DESC 
BY FLT_LEN
AFTER MATCH HOLD AS XTHREE OLD-OR-NEW
END
-RUN
    
-IF &LINES EQ 0 THEN GOTO NORECORDS;

 
 


-Continue
DEFINE FILE XTHREE
  PCTDSAVE/D8.1 =   IF ((DISSAV LT 1) AND (DISSAV GT (-1))) THEN 0 ELSE 
                       ((DISSAVINGS/DISSAV)*100);	
  PCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((FARE_PAID/TFARE)*100);	
  FPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((FIRST/TFARE)*100);	
  FPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                       ((F_NTKT/NTTKT)*100);
  BPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                       ((B_NTKT/NTTKT)*100);	                       
  BPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((BUSINESS/TFARE)*100);  
  PPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                       ((P_NTKT/NTTKT)*100);	
  PPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((PECO/TFARE)*100);  


  EPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                       ((E_NTKT/NTTKT)*100);	
  EPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((ECO/TFARE)*100); 
                       
  DPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                       ((D_NTKT/NTTKT)*100);	
  DPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((DEFAULT/TFARE)*100);                         

  UPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                       ((U_NTKT/NTTKT)*100);	                       
  UPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((UPGRADE/TFARE)*100);  
  UPVOL/D12.2CS =   UPGRADE;
  PCTRFEX/D8.1S =   IF ((TRFEX LT 1) AND (TRFEX GT (-1))) THEN 0 ELSE
                       ((REF_EXCH_CNT/TRFEX)*100);	
  PCTSAVE/D8.1 =    IF ((TSAVE LT 1) AND (TSAVE GT (-1))) THEN 0 ELSE 
                       ((SAVINGS/TSAVE)*100);	
  PCTTKT/D8.1S =    IF ((TTKT LT 1) AND (TTKT GT (-1))) THEN 0 ELSE 
                       ((TKT_PURCH/TTKT)*100);	
  TFLTLEN_TKT/D8CS = IF FLT_LEN NE LAST FLT_LEN THEN TLTKT ELSE 0;


-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-**********************************************************************
  NOWTOD/A8 WITH LEVEL_DESC = HHMMSS (NOWTOD);	
END

 

SET ASNAMES=ON

-SET &&RPTSUF = 'FLTDUR';
-SET &FMM=EDIT(&&FROMDT,'$$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'$9999');
-SET &TOM=EDIT(&&TODT,'$$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'$9999');
-SET &&SP = '|';
-SET &&SP3 = IF &&ROLLCNCT EQ ' ' THEN ' ' ELSE &&SP;
-SET &&SP4 = IF &&ROLLPHN EQ ' ' THEN ' ' ELSE &&SP;
-SET &&RCNCT = &&ROLLCNCT.LENGTH;
-SET &&CSL = &&ROLLCS.LENGTH;
-SET &&CSLP = IF &&RCNCT.EVAL GE 10 OR &&CSL.EVAL GE 10 THEN 60 ELSE 68;
-SET &&ROLLCS11 = TRUNCATE(&&ROLLCS);
-SET &&RCNCT1 = TRUNCATE(&&ROLLCNCT);
-RUN



-INCLUDE FDEFRPTS
-RUN

-IF '&&ROLLUP.EVAL' EQ 'BLV-R' GOTO BLV;

TABLE FILE XTHREE
SUM  F_NTKT AS 'First'
     FIRST AS 'First,Volume'
     FPCTNTKT  AS 'First,% of Net Tickets'
     FPCTFARE AS 'First,% of ,Volume'
COMPUTE FATKT/D12.2CS = IF (F_NTKT LT 1) AND (F_NTKT GT (-1)) THEN 0 ELSE FIRST/F_NTKT; AS 'First,Class,ATP'

     B_NTKT AS 'Business'
     BUSINESS AS 'Business,Volume'
     BPCTNTKT AS 'Business,% of Net Tickets'
     BPCTFARE AS 'Business,% of ,Volume'
COMPUTE BATKT/D12.2CS = IF (B_NTKT LT 1) AND (B_NTKT GT (-1)) THEN 0 ELSE BUSINESS/B_NTKT; AS 'Business,Class,ATP'
     

     U_NTKT AS 'Upgrade'
     UPGRADE AS 'Upgrade,Volume'
     UPCTNTKT AS 'Upgrade,% of Net Tickets'
     UPCTFARE AS 'Upgrade,% of ,Volume'
COMPUTE UATKT/D12.2CS = IF (U_NTKT LT 1) AND (U_NTKT GT (-1)) THEN 0 ELSE UPGRADE/U_NTKT; AS 'Upgrade,Class,ATP'
     
     P_NTKT AS 'Premium Economy'
     PECO AS 'Premium,Economy,Volume'
     PPCTNTKT AS 'Premium,Economy,% of Net Tickets'
     PPCTFARE AS 'Premium,Economy,% of ,Volume'
COMPUTE PATKT/D12.2CS = IF (P_NTKT LT 1) AND (P_NTKT GT (-1)) THEN 0 ELSE PECO/P_NTKT; AS 'Premium Economy,Class ATP'
     
     E_NTKT  AS 'Economy'
     ECO AS 'Economy,Volume'
     EPCTNTKT AS 'Economy,% of Net,Tickets'     
     EPCTFARE AS 'Economy,% of ,Volume'
COMPUTE EATKT/D12.2CS = IF (E_NTKT LT 1) AND (E_NTKT GT (-1)) THEN 0 ELSE ECO/E_NTKT; AS 'Economy,Class,ATP'
     
     D_NTKT  AS 'Default'
     DEFAULT AS 'Default,Volume'
     DPCTNTKT AS 'Default,% of Net,Tickets'     
     DPCTFARE AS 'Default,% of ,Volume'     
COMPUTE DATKT/D12.2CS = IF (D_NTKT LT 1) AND (D_NTKT GT (-1)) THEN 0 ELSE DEFAULT/D_NTKT; AS 'Default,Class,ATP'
     
     TFLTLEN_TKT AS 'Total Tickets'
     FARE_PAID AS 'Total Volume'
     PCTFARE  AS '% of Total,Volume'     
BY LEVEL_DESC AS 'Hierarchy'
BY KEY NOPRINT
BY FLT_LEN AS 'Flight Length'
ON LEVEL_DESC RECOMPUTE AS 'Total'
 



-HEAD
HEADING
-INCLUDE HDREXLS

FOOTING BOTTOM
"&&FOOTER1"
"&&FOOTER2"
"Class of service is based on highest class of service for each ticket "
"Flight length is based on the segment that is greatest in length for each ticket "
"Default contains refund/exchange adjustments and unknown classes of service"
"Excludes MCOs and forfeit penalty amounts"
" "
"Post-trip Reporting &DATE AT <NOWTOD <75 &&FOOTR"
ON TABLE SET PAGE-NUM OFF
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT

ON TABLE SET STYLE *

-IF &&OVERDRILL EQ 'Y' GOTO OVERDRILL;

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N1, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL='NOCAT' LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL' \
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N3, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N4, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'F' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $



TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N9, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'B' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N14, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'U' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
  
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N19, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'P' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N24, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'E' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N29, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'D' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $


-OVERDRILL;

    TYPE=REPORT, COLUMN=N2, WRAP= .75,$
    TYPE=REPORT, COLUMN=N3, WRAP= .75,$ 
    TYPE=REPORT, COLUMN=N4, WRAP= .75,$
    TYPE=REPORT, COLUMN=N5, WRAP= .75,$
    TYPE=REPORT, COLUMN=N6, WRAP= .75,$
    TYPE=REPORT, COLUMN=N7, WRAP= .75,$
    TYPE=REPORT, COLUMN=N8, WRAP= .75,$
    TYPE=REPORT, COLUMN=N9, WRAP=  .75,$
    TYPE=REPORT, COLUMN=N10, WRAP= .75,$
    TYPE=REPORT, COLUMN=N11, WRAP= .75,$
    TYPE=REPORT, COLUMN=N12, WRAP= .75,$
    TYPE=REPORT, COLUMN=N13, WRAP= .75,$
    TYPE=REPORT, COLUMN=N14, WRAP= .75,$
    TYPE=REPORT, COLUMN=N15, WRAP= .75,$
    TYPE=REPORT, COLUMN=N16, WRAP= .75,$
    TYPE=REPORT, COLUMN=N17, WRAP= .75,$   
    TYPE=REPORT, COLUMN=N18, WRAP= .75,$
    TYPE=REPORT, COLUMN=N19, WRAP= .75,$  
    TYPE=REPORT, COLUMN=N20, WRAP= .75,$
    TYPE=REPORT, COLUMN=N21, WRAP= .75,$   
    TYPE=REPORT, COLUMN=N22, WRAP= .75,$
    TYPE=REPORT, COLUMN=N23, WRAP= .75,$  
    TYPE=REPORT, COLUMN=N24, WRAP= .75,$
    TYPE=REPORT, COLUMN=N25, WRAP= .75,$   
    TYPE=REPORT, COLUMN=N26, WRAP= .75,$
    TYPE=REPORT, COLUMN=N27, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N28, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N29, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N30, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N31, WRAP= .75,$  
    
    
    
    
UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.100000, RIGHTMARGIN=0.030000, 
    TOPMARGIN=0.300000, BOTTOMMARGIN=0.050000, SQUEEZE=ON, 
    ORIENTATION=LANDSCAPE, $
    
TYPE=REPORT, FONT=ARIAL, SIZE=8, JUSTIFY=LEFT, BACKCOLOR=NONE, STYLE=NORMAL, $

TYPE=HEADING, SIZE=8, STYLE=BOLD, FONT='ARIAL', COLOR=RGB(31 114 164), BACKCOLOR=NONE, $
TYPE=HEADING, HEADALIGN=BODY, $
TYPE=HEADING, LINE=1, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=2, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=3, COLSPAN=23, SIZE=9, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=4, COLSPAN=23, SIZE=9,JUSTIFY=CENTER, $
TYPE=HEADING, LINE=5, COLSPAN=3, JUSTIFY=LEFT, $


TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8, $
-*      BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
     
     
-JOY
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     COLOR='WHITE',
     BACKCOLOR=RGB(31 114 164),
     STYLE=BOLD,$
     
TYPE=TITLE, JUSTIFY=LEFT, $     
    
TYPE=TABFOOTING, FONT=ARIAL, COLOR=GRAY,$
     
TYPE=FOOTING, FONT=ARIAL, COLOR=GRAY,$

TYPE=SUBHEAD,
     STYLE=BOLD,
$

TYPE=SUBTOTAL, 
     STYLE=BOLD, 
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER', $
     
TYPE=GRANDTOTAL, STYLE=BOLD, $
ENDSTYLE


&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
-*
END
-RUN

-GOTO XXIT;


-BLV;
TABLE FILE XTHREE
SUM  F_NTKT AS 'First'
     FIRST AS 'First,Volume'
     FPCTNTKT  AS 'First,% of Net Tickets'
     FPCTFARE AS 'First,% of ,Volume'
     B_NTKT AS 'Business'
     BUSINESS AS 'Business,Volume'
     BPCTNTKT AS 'Business,% of Net Tickets'
     BPCTFARE AS 'Business,% of ,Volume'

     U_NTKT AS 'Upgrade'
     UPGRADE AS 'Upgrade,Volume'
     UPCTNTKT AS 'Upgrade,% of Net Tickets'
     UPCTFARE AS 'Upgrade,% of ,Volume'
     
     P_NTKT AS 'Premium Economy'
     PECO AS 'Premium,Economy,Volume'
     PPCTNTKT AS 'Premium,Economy,% of Net Tickets'
     PPCTFARE AS 'Premium,Economy,% of ,Volume'
     
     E_NTKT  AS 'Economy'
     ECO AS 'Economy,Volume'
     EPCTNTKT AS 'Economy,% of Net,Tickets'     
     EPCTFARE AS 'Economy,% of ,Volume'
     
     D_NTKT  AS 'Default'
     DEFAULT AS 'Default,Volume'
     DPCTNTKT AS 'Default,% of Net,Tickets'     
     DPCTFARE AS 'Default,% of ,Volume'     
     
     TFLTLEN_TKT AS 'Total Tickets'
     FARE_PAID AS 'Total Volume'
     PCTFARE  AS '% of Total,Volume'    
BY LVSEL NOPRINT     
BY LEVEL_DESC AS 'Hierarchy'
BY KEY NOPRINT
BY FLT_LEN AS 'Flight Length'
ON LEVEL_DESC RECOMPUTE AS 'Total'
 



-HEAD
HEADING
-INCLUDE HDREXLS



FOOTING BOTTOM
"&&FOOTER1"
"&&FOOTER2"
"Class of service is based on highest class of service for each ticket "
"Flight length is based on the segment that is greatest in length for each ticket "
"Default contains refund/exchange adjustments and unknown classes of service"
"Excludes MCOs and forfeit penalty amounts"
" "
"<75 &&FOOTR"
ON TABLE SET PAGE-NUM OFF
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT

ON TABLE SET STYLE *

-IF &&OVERDRILL EQ 'Y' GOTO OVERDRILLBV;

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N2, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL='NOCAT' LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N4, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N4 LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N5, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N4 LSEL=LEVEL_DESC PARM1= 'F' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $



TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N8, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N4 LSEL=LEVEL_DESC PARM1= 'B' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N12, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N4 LSEL=LEVEL_DESC PARM1= 'U' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
  
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N16, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N4 LSEL=LEVEL_DESC PARM1= 'P' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N20, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N4 LSEL=LEVEL_DESC PARM1= 'E' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N24, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N4 LSEL=LEVEL_DESC PARM1= 'D' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

-OVERDRILLBV; 

       TYPE=REPORT, COLUMN=N3, WRAP= .75,$ 
       TYPE=REPORT, COLUMN=N4, WRAP= .75,$
       TYPE=REPORT, COLUMN=N5, WRAP= .75,$
       TYPE=REPORT, COLUMN=N6, WRAP= .75,$
       TYPE=REPORT, COLUMN=N7, WRAP= .75,$
       TYPE=REPORT, COLUMN=N8, WRAP= .75,$
       TYPE=REPORT, COLUMN=N9, WRAP=  .75,$
       TYPE=REPORT, COLUMN=N10, WRAP= .75,$
       TYPE=REPORT, COLUMN=N11, WRAP= .75,$
       TYPE=REPORT, COLUMN=N12, WRAP= .75,$
       TYPE=REPORT, COLUMN=N13, WRAP= .75,$
       TYPE=REPORT, COLUMN=N14, WRAP= .75,$
       TYPE=REPORT, COLUMN=N15, WRAP= .75,$
       TYPE=REPORT, COLUMN=N16, WRAP= .75,$
       TYPE=REPORT, COLUMN=N17, WRAP= .75,$   
       TYPE=REPORT, COLUMN=N18, WRAP= .75,$
       TYPE=REPORT, COLUMN=N19, WRAP= .75,$  
       TYPE=REPORT, COLUMN=N20, WRAP= .75,$
       TYPE=REPORT, COLUMN=N21, WRAP= .75,$   
       TYPE=REPORT, COLUMN=N22, WRAP= .75,$
       TYPE=REPORT, COLUMN=N23, WRAP= .75,$  
       TYPE=REPORT, COLUMN=N24, WRAP= .75,$
       TYPE=REPORT, COLUMN=N25, WRAP= .75,$   
       TYPE=REPORT, COLUMN=N26, WRAP= .75,$
       TYPE=REPORT, COLUMN=N27, WRAP= .75,$      
       TYPE=REPORT, COLUMN=N28, WRAP= .75,$      
       TYPE=REPORT, COLUMN=N29, WRAP= .75,$      
       TYPE=REPORT, COLUMN=N30, WRAP= .75,$      
       TYPE=REPORT, COLUMN=N31, WRAP= .75,$  
    
UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.100000, RIGHTMARGIN=0.030000, 
    TOPMARGIN=0.300000, BOTTOMMARGIN=0.050000, SQUEEZE=ON, 
    ORIENTATION=LANDSCAPE, $
    
TYPE=REPORT, FONT=ARIAL, SIZE=8, JUSTIFY=LEFT, BACKCOLOR=NONE, STYLE=NORMAL, $
TYPE=HEADING, SIZE=8, STYLE=BOLD, FONT='ARIAL', COLOR=RGB(31 114 164), BACKCOLOR=NONE, $
TYPE=HEADING, HEADALIGN=BODY, $
TYPE=HEADING, LINE=1, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=2, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=3, COLSPAN=23, SIZE=9, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=4, COLSPAN=23, SIZE=9,JUSTIFY=CENTER, $
TYPE=HEADING, LINE=5, COLSPAN=3, JUSTIFY=LEFT, $


TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8, $
-*      BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
     
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     COLOR='WHITE',
     BACKCOLOR=RGB(31 114 164),
     STYLE=BOLD,$
     
TYPE=TITLE, JUSTIFY=LEFT, $     
    
TYPE=TABFOOTING, FONT=ARIAL, COLOR=GRAY,$
     
TYPE=FOOTING, FONT=ARIAL, COLOR=GRAY,$

TYPE=SUBHEAD,
     STYLE=BOLD,
$

TYPE=SUBTOTAL, 
     STYLE=BOLD, 
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER', $
     
TYPE=GRANDTOTAL, STYLE=BOLD, $    
  
    

ENDSTYLE


&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
-*
END
-RUN

-GOTO XXIT;


-**************************  Mani-r Version that includes flights durations 10 hours and 10 +

-MANI;

TABLE FILE &&RPT_HOLD
SUM 
    DISSAVINGS AS 'DISSAV'
    FARE_PAID/D12.2CS AS 'TFARE'
    NET_TKT_CNT AS 'NTTKT'
    REF_EXCH_CNT AS 'TRFEX'
    SAVINGS AS 'TSAVE'
    TKT_PURCH AS 'TTKT'
BY LEVEL_DESC 
ON TABLE HOLD AS HOLDONE
END
-RUN

TABLE FILE &&RPT_HOLD
SUM FARE_PAID/D12.2CS AS 'TLFARE'
    NET_TKT_CNT AS 'TLTKT'
BY LEVEL_DESC
BY FLT_LENA
ON TABLE HOLD AS HOLDTWO
END
-RUN



TABLE FILE &&RPT_HOLD
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME   
  DISSAVINGS
  DST_APC
  FARE_PAID
  FLT_LENA
  KEYA
  LEVEL1
  LEVEL2
  LEVEL3
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT    
BY LEVEL_DESC
ON TABLE HOLD AS XTWO
END
-RUN


MATCH FILE XTWO
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
  FLT_LENA
   KEYA
  LEVEL1
  LEVEL2
  LEVEL3
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT    
BY LEVEL_DESC
ON TABLE HOLD
RUN
FILE HOLDONE
SUM TTKT
    TRFEX
    NTTKT
    DISSAV
    TSAVE
    TFARE
BY LEVEL_DESC
AFTER MATCH HOLD AS XTWO OLD-OR-NEW 
END
-RUN


MATCH FILE XTWO
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
   KEYA
  LEVEL1
  LEVEL2
  LEVEL3
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  TTKT
  TRFEX
  NTTKT
  DISSAV
  TSAVE
  TFARE
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT    
BY LEVEL_DESC
BY FLT_LENA
ON TABLE HOLD
RUN
FILE HOLDTWO
SUM TLFARE
    TLTKT
BY LEVEL_DESC    
BY FLT_LENA
AFTER MATCH HOLD AS XTHREE OLD-OR-NEW
END
-RUN
    
-IF &LINES EQ 0 THEN GOTO NORECORDS;


 


-Continue
DEFINE FILE XTHREE
  PCTDSAVE/D8.1 =   IF ((DISSAV LT 1) AND (DISSAV GT (-1))) THEN 0 ELSE 
                         ((DISSAVINGS/DISSAV)*100);	
    PCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                         ((FARE_PAID/TFARE)*100);	
    FPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                         ((FIRST/TFARE)*100);	
    FPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                         ((F_NTKT/NTTKT)*100);
    BPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                         ((B_NTKT/NTTKT)*100);	                       
    BPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                         ((BUSINESS/TFARE)*100);  
    PPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                         ((P_NTKT/NTTKT)*100);	
    PPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                         ((PECO/TFARE)*100);  
  
  
    EPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                         ((E_NTKT/NTTKT)*100);	
    EPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                         ((ECO/TFARE)*100);  
                         
   DPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                       ((D_NTKT/NTTKT)*100);	
   DPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                       ((DEFAULT/TFARE)*100);                        
  
    UPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                         ((U_NTKT/NTTKT)*100);	                       
    UPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                         ((UPGRADE/TFARE)*100);  
    UPVOL/D12.2CS =   UPGRADE;
    PCTRFEX/D8.1S =   IF ((TRFEX LT 1) AND (TRFEX GT (-1))) THEN 0 ELSE
                         ((REF_EXCH_CNT/TRFEX)*100);	
    PCTSAVE/D8.1 =    IF ((TSAVE LT 1) AND (TSAVE GT (-1))) THEN 0 ELSE 
                         ((SAVINGS/TSAVE)*100);	
    PCTTKT/D8.1S =    IF ((TTKT LT 1) AND (TTKT GT (-1))) THEN 0 ELSE 
                         ((TKT_PURCH/TTKT)*100);	
  TFLTLEN_TKT/D8CS = IF FLT_LENA NE LAST FLT_LENA THEN TLTKT ELSE 0;
-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-**********************************************************************
  NOWTOD/A8 WITH LEVEL_DESC = HHMMSS (NOWTOD);	
END

 

SET ASNAMES=ON

-SET &&RPTSUF = 'FLTDUR';
-SET &FMM=EDIT(&&FROMDT,'$$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'$9999');
-SET &TOM=EDIT(&&TODT,'$$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'$9999');


-INCLUDE FDEFRPTS
-RUN

TABLE FILE XTHREE
SUM  F_NTKT AS 'First'
     FIRST AS 'First,Volume'
     FPCTNTKT  AS 'First,% of Net Tickets'
     FPCTFARE AS 'First,% of ,Volume'
     B_NTKT AS 'Business'
     BUSINESS AS 'Business,Volume'
     BPCTNTKT AS 'Business,% of Net Tickets'
     BPCTFARE AS 'Business,% of ,Volume'

     U_NTKT AS 'Upgrade'
     UPGRADE AS 'Upgrade,Volume'
     UPCTNTKT AS 'Upgrade,% of Net Tickets'
     UPCTFARE AS 'Upgrade,% of ,Volume'
     
     P_NTKT AS 'Premium Economy'
     PECO AS 'Premium,Economy,Volume'
     PPCTNTKT AS 'Premium,Economy,% of Net Tickets'
     PPCTFARE AS 'Premium,Economy,% of ,Volume'
     
     E_NTKT  AS 'Economy'
     ECO AS 'Economy,Volume'
     EPCTNTKT AS 'Economy,% of Net,Tickets'     
     EPCTFARE AS 'Economy,% of ,Volume'
     
     D_NTKT  AS 'Default'
     DEFAULT AS 'Default,Volume'
     DPCTNTKT AS 'Default,% of Net,Tickets'     
     DPCTFARE AS 'Default,% of ,Volume'      
     
     TFLTLEN_TKT AS 'Total Tickets'
     FARE_PAID AS 'Total Volume'
     PCTFARE  AS '% of Total,Volume'    
BY LEVEL_DESC AS 'Hierarchy'
BY KEYA NOPRINT
BY FLT_LENA AS 'Flight Length'
ON LEVEL_DESC RECOMPUTE AS 'Total'
 


-HEAD
HEADING
-INCLUDE HDREXLS


FOOTING BOTTOM
"&&FOOTER1"
"&&FOOTER2"
"Class of service is based on highest class of service for each ticket "
"Flight length is based on the segment that is greatest in length for each ticket "
"Default contains refund/exchange adjustments and unknown classes of service"
"Excludes MCOs and forfeit penalty amounts"
" "
"Post-trip Reporting &DATE AT <NOWTOD <75 &&FOOTR"
ON TABLE SET PAGE-NUM OFF
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT

ON TABLE SET STYLE *

-IF &&OVERDRILL EQ 'Y' GOTO OVERDRILLMN;

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N1, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL='NOCAT' LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N3, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N4, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'F' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $



TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N8, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'B' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N12, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'U' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
  
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N16, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'P' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N20, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'E' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N24, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'D' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

-OVERDRILLMN;
 

    TYPE=REPORT, COLUMN=N2, WRAP= .75,$
    TYPE=REPORT, COLUMN=N3, WRAP= .75,$ 
    TYPE=REPORT, COLUMN=N4, WRAP= .75,$
    TYPE=REPORT, COLUMN=N5, WRAP= .75,$
    TYPE=REPORT, COLUMN=N6, WRAP= .75,$
    TYPE=REPORT, COLUMN=N7, WRAP= .75,$
    TYPE=REPORT, COLUMN=N8, WRAP= .75,$
    TYPE=REPORT, COLUMN=N9, WRAP=  .75,$
    TYPE=REPORT, COLUMN=N10, WRAP= .75,$
    TYPE=REPORT, COLUMN=N11, WRAP= .75,$
    TYPE=REPORT, COLUMN=N12, WRAP= .75,$
    TYPE=REPORT, COLUMN=N13, WRAP= .75,$
    TYPE=REPORT, COLUMN=N14, WRAP= .75,$
    TYPE=REPORT, COLUMN=N15, WRAP= .75,$
    TYPE=REPORT, COLUMN=N16, WRAP= .75,$
    TYPE=REPORT, COLUMN=N17, WRAP= .75,$   
    TYPE=REPORT, COLUMN=N18, WRAP= .75,$
    TYPE=REPORT, COLUMN=N19, WRAP= .75,$  
    TYPE=REPORT, COLUMN=N20, WRAP= .75,$
    TYPE=REPORT, COLUMN=N21, WRAP= .75,$   
    TYPE=REPORT, COLUMN=N22, WRAP= .75,$
    TYPE=REPORT, COLUMN=N23, WRAP= .75,$  
    TYPE=REPORT, COLUMN=N24, WRAP= .75,$
    TYPE=REPORT, COLUMN=N25, WRAP= .75,$   
    TYPE=REPORT, COLUMN=N26, WRAP= .75,$
    TYPE=REPORT, COLUMN=N27, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N28, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N29, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N30, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N31, WRAP= .75,$   
    
UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.100000, RIGHTMARGIN=0.030000, 
    TOPMARGIN=0.300000, BOTTOMMARGIN=0.050000, SQUEEZE=ON, 
    ORIENTATION=LANDSCAPE, $
    
TYPE=REPORT, FONT=ARIAL, SIZE=8, JUSTIFY=LEFT, BACKCOLOR=NONE, STYLE=NORMAL, $
TYPE=HEADING, SIZE=8, STYLE=BOLD, FONT='ARIAL', COLOR=RGB(31 114 164), BACKCOLOR=NONE, $
TYPE=HEADING, HEADALIGN=BODY, $
TYPE=HEADING, LINE=1, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=2, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=3, COLSPAN=23, SIZE=9, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=4, COLSPAN=23, SIZE=9,JUSTIFY=CENTER, $
TYPE=HEADING, LINE=5, COLSPAN=3, JUSTIFY=LEFT, $


TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8, $
-*      BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
     
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     COLOR='WHITE',
     BACKCOLOR=RGB(31 114 164),
     STYLE=BOLD,$
     
TYPE=TITLE, JUSTIFY=LEFT, $     
    
TYPE=TABFOOTING, FONT=ARIAL, COLOR=GRAY,$
     
TYPE=FOOTING, FONT=ARIAL, COLOR=GRAY,$

TYPE=SUBHEAD,
     STYLE=BOLD,
$

TYPE=SUBTOTAL, 
     STYLE=BOLD, 
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER', $
     
TYPE=GRANDTOTAL, STYLE=BOLD, $

ENDSTYLE


&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
-*
END
-RUN

-GOTO XXIT;

-METX;

TABLE FILE &&RPT_HOLD
SUM 
    DISSAVINGS AS 'DISSAV'
    FARE_PAID/D12.2CS AS 'TFARE'
    NET_TKT_CNT AS 'NTTKT'
    REF_EXCH_CNT AS 'TRFEX'
    SAVINGS AS 'TSAVE'
    TKT_PURCH AS 'TTKT'
BY LEVEL_DESC 
ON TABLE HOLD AS HOLDONE
END
-RUN

TABLE FILE &&RPT_HOLD
SUM FARE_PAID/D12.2CS AS 'TLFARE'
    NET_TKT_CNT AS 'TLTKT'
BY LEVEL_DESC
BY MXFLT_LEN
ON TABLE HOLD AS HOLDTWO
END
-RUN


TABLE FILE &&RPT_HOLD
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
  MXFLT_LEN
  MXKEY
  LEVEL1
  LEVEL2
  LEVEL3
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT      
BY LEVEL_DESC
ON TABLE HOLD AS XTWO
END
-RUN


MATCH FILE XTWO
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
  MXFLT_LEN
  MXKEY
  LEVEL1
  LEVEL2
  LEVEL3
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT      
BY LEVEL_DESC
ON TABLE HOLD
RUN
FILE HOLDONE
SUM TTKT
    TRFEX
    NTTKT
    DISSAV
    TSAVE
    TFARE
BY LEVEL_DESC
AFTER MATCH HOLD AS XTWO OLD-OR-NEW 
END
-RUN


MATCH FILE XTWO
PRINT AGENT_NUM
  AIRLINE
  CAT
  CLIENT_NAME 
  DISSAVINGS
  DST_APC
  FARE_PAID
  MXKEY
  LEVEL1
  LEVEL2
  LEVEL3
  NET_TKT_CNT
  REF_EXCH_CNT	
  RTE_APT_NM
  SEG_AMT
  SAVINGS  	
  TKT_PURCH	
  VAL_AIRLINE	
  XPSNGR_NM
  TTKT
  TRFEX
  NTTKT
  DISSAV
  TSAVE
  TFARE
  BUSINESS
  UPGRADE
  FIRST 
  ECO
  PECO
  DEFAULT
  B_NTKT
  U_NTKT
  P_NTKT
  E_NTKT
  F_NTKT
  D_NTKT      
BY LEVEL_DESC
BY MXFLT_LEN
ON TABLE HOLD
RUN
FILE HOLDTWO
SUM TLFARE
    TLTKT
BY LEVEL_DESC    
BY MXFLT_LEN
AFTER MATCH HOLD AS XTHREE OLD-OR-NEW
END
-RUN
    
-IF &LINES EQ 0 THEN GOTO NORECORDS;


 


-Continue
DEFINE FILE XTHREE
  PCTDSAVE/D8.1 =   IF ((DISSAV LT 1) AND (DISSAV GT (-1))) THEN 0 ELSE 
                           ((DISSAVINGS/DISSAV)*100);	
      PCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                           ((FARE_PAID/TFARE)*100);	
      FPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                           ((FIRST/TFARE)*100);	
      FPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                           ((F_NTKT/NTTKT)*100);
      BPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                           ((B_NTKT/NTTKT)*100);	                       
      BPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                           ((BUSINESS/TFARE)*100);  
      PPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                           ((P_NTKT/NTTKT)*100);	
      PPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                           ((PECO/TFARE)*100);  
    
    
      EPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                           ((E_NTKT/NTTKT)*100);	
      EPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                           ((ECO/TFARE)*100);  
                           
      DPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                          ((D_NTKT/NTTKT)*100);	
      DPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                            ((DEFAULT/TFARE)*100);                             
    
      UPCTNTKT/D8.1S = IF ((NTTKT LT 1) AND (NTTKT GT (-1))) THEN 0 ELSE 
                           ((U_NTKT/NTTKT)*100);	                       
      UPCTFARE/D8.1S =   IF ((TFARE LT 1) AND (TFARE GT (-1))) THEN 0 ELSE 
                           ((UPGRADE/TFARE)*100);  
      UPVOL/D12.2CS =   UPGRADE;
      PCTRFEX/D8.1S =   IF ((TRFEX LT 1) AND (TRFEX GT (-1))) THEN 0 ELSE
                           ((REF_EXCH_CNT/TRFEX)*100);	
      PCTSAVE/D8.1 =    IF ((TSAVE LT 1) AND (TSAVE GT (-1))) THEN 0 ELSE 
                           ((SAVINGS/TSAVE)*100);	
      PCTTKT/D8.1S =    IF ((TTKT LT 1) AND (TTKT GT (-1))) THEN 0 ELSE 
                           ((TKT_PURCH/TTKT)*100);	
      TFLTLEN_TKT/D8CS = IF MXFLT_LEN NE LAST MXFLT_LEN THEN TLTKT ELSE 0;
-**********************************************************************
-*DATE           NAME               DESCRIPTION
-*7/31/00      IBISTL-KR            ADDED DEFINE FOR NOWTOD WHICH IS 
-*                                  USED IN FOOTERSM
-**********************************************************************
  NOWTOD/A8 WITH LEVEL_DESC = HHMMSS (NOWTOD);	
END

 

SET ASNAMES=ON

-SET &&RPTSUF = 'FLTDUR';
-SET &FMM=EDIT(&&FROMDT,'$$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'$9999');
-SET &TOM=EDIT(&&TODT,'$$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'$9999');


-INCLUDE FDEFRPTS
-RUN

TABLE FILE XTHREE
SUM  F_NTKT AS 'First'
     FIRST AS 'First,Volume'
     FPCTNTKT  AS 'First,% of Net Tickets'
     FPCTFARE AS 'First,% of ,Volume'
     B_NTKT AS 'Business'
     BUSINESS AS 'Business,Volume'
     BPCTNTKT AS 'Business,% of Net Tickets'
     BPCTFARE AS 'Business,% of ,Volume'

     U_NTKT AS 'Upgrade'
     UPGRADE AS 'Upgrade,Volume'
     UPCTNTKT AS 'Upgrade,% of Net Tickets'
     UPCTFARE AS 'Upgrade,% of ,Volume'
     
     P_NTKT AS 'Premium Economy'
     PECO AS 'Premium,Economy,Volume'
     PPCTNTKT AS 'Premium,Economy,% of Net Tickets'
     PPCTFARE AS 'Premium,Economy,% of ,Volume'
     
     E_NTKT  AS 'Economy'
     ECO AS 'Economy,Volume'
     EPCTNTKT AS 'Economy,% of Net,Tickets'     
     EPCTFARE AS 'Economy,% of ,Volume'
     
     D_NTKT  AS 'Default'
     DEFAULT AS 'Default,Volume'
     DPCTNTKT AS 'Default,% of Net,Tickets'     
     DPCTFARE AS 'Default,% of ,Volume'      
     
     TFLTLEN_TKT AS 'Total Tickets'
     FARE_PAID AS 'Total Volume'
     PCTFARE  AS '% of Total,Volume' 
BY LEVEL_DESC AS 'Hierarchy'
BY MXKEY NOPRINT
BY MXFLT_LEN AS 'Flight Length'
ON LEVEL_DESC RECOMPUTE AS 'Total'
 

-HEAD
HEADING
-INCLUDE HDREXLS


FOOTING BOTTOM
"&&FOOTER1"
"&&FOOTER2"
"Class of service is based on highest class of service for each ticket "
"Flight length is based on the segment that is greatest in length for each ticket "
"Default contains refund/exchange adjustments and unknown classes of service"
"Excludes MCOs and forfeit penalty amounts"
" "
"Post-trip Reporting &DATE AT <NOWTOD <75 &&FOOTR"
ON TABLE SET PAGE-NUM OFF
ON TABLE PAGE-BREAK AND SUBFOOT
-INCLUDE SBFOOT

ON TABLE SET STYLE *

-IF &&OVERDRILL EQ 'Y' GOTO OVERDRILLMX;

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N1, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL='NOCAT' LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N3, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1='0'  FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N4, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'F' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $



TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N8, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'B' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
 
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N12, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'U' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $
  
TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N16, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'P' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL' \
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N20, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'E' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $


TYPE=DATA,STYLE=-UNDERLINE, COLOR=RGB(0 0 138), COLUMN=N24, \
URL=&&SRVR.EVAL/ibi_apps/WFServlet? \
(IBIF_ex='DRFCAT' ROW_LABEL=N3 LSEL=LEVEL_DESC PARM1= 'D' FDATE=&&FROMDT.EVAL TDATE=&&TODT.EVAL PARM2='&&IDLEVELBREAK.EVAL'\
 SETFNM='&&DTTMSTRM.EVAL' \
 FPARM='&&DTTMID.EVAL' \
ROLUP='&&ROLLUP' user='&&UNAME'), $

-OVERDRILLMX; 

    TYPE=REPORT, COLUMN=N2, WRAP= .75,$
        TYPE=REPORT, COLUMN=N3, WRAP= .75,$ 
        TYPE=REPORT, COLUMN=N4, WRAP= .75,$
        TYPE=REPORT, COLUMN=N5, WRAP= .75,$
        TYPE=REPORT, COLUMN=N6, WRAP= .75,$
        TYPE=REPORT, COLUMN=N7, WRAP= .75,$
        TYPE=REPORT, COLUMN=N8, WRAP= .75,$
        TYPE=REPORT, COLUMN=N9, WRAP=  .75,$
        TYPE=REPORT, COLUMN=N10, WRAP= .75,$
        TYPE=REPORT, COLUMN=N11, WRAP= .75,$
        TYPE=REPORT, COLUMN=N12, WRAP= .75,$
        TYPE=REPORT, COLUMN=N13, WRAP= .75,$
        TYPE=REPORT, COLUMN=N14, WRAP= .75,$
        TYPE=REPORT, COLUMN=N15, WRAP= .75,$
        TYPE=REPORT, COLUMN=N16, WRAP= .75,$
        TYPE=REPORT, COLUMN=N17, WRAP= .75,$   
        TYPE=REPORT, COLUMN=N18, WRAP= .75,$
        TYPE=REPORT, COLUMN=N19, WRAP= .75,$  
        TYPE=REPORT, COLUMN=N20, WRAP= .75,$
        TYPE=REPORT, COLUMN=N21, WRAP= .75,$   
        TYPE=REPORT, COLUMN=N22, WRAP= .75,$
        TYPE=REPORT, COLUMN=N23, WRAP= .75,$  
        TYPE=REPORT, COLUMN=N24, WRAP= .75,$
        TYPE=REPORT, COLUMN=N25, WRAP= .75,$   
        TYPE=REPORT, COLUMN=N26, WRAP= .75,$
        TYPE=REPORT, COLUMN=N27, WRAP= .75,$      
        TYPE=REPORT, COLUMN=N28, WRAP= .75,$      
        TYPE=REPORT, COLUMN=N29, WRAP= .75,$      
        TYPE=REPORT, COLUMN=N30, WRAP= .75,$      
    TYPE=REPORT, COLUMN=N31, WRAP= .75,$  
    
UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.100000, RIGHTMARGIN=0.030000, 
    TOPMARGIN=0.300000, BOTTOMMARGIN=0.050000, SQUEEZE=ON, 
    ORIENTATION=LANDSCAPE, $
    
TYPE=REPORT, FONT=ARIAL, SIZE=8, JUSTIFY=LEFT, BACKCOLOR=NONE, STYLE=NORMAL, $
TYPE=HEADING, SIZE=8, STYLE=BOLD, FONT='ARIAL', COLOR=RGB(31 114 164), BACKCOLOR=NONE, $
TYPE=HEADING, HEADALIGN=BODY, $
TYPE=HEADING, LINE=1, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=2, COLSPAN=3, JUSTIFY=LEFT, $
TYPE=HEADING, LINE=3, COLSPAN=23, SIZE=9, JUSTIFY=CENTER, $
TYPE=HEADING, LINE=4, COLSPAN=23, SIZE=9,JUSTIFY=CENTER, $
TYPE=HEADING, LINE=5, COLSPAN=3, JUSTIFY=LEFT, $


TYPE=DATA,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8, $
-*      BACKCOLOR=(RGB(242 242 242) 'WHITE' ),$
     
TYPE=TITLE,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-STYLE=RIDGE,
     BORDER-BOTTOM-STYLE=RIDGE,
     BORDER-LEFT-STYLE=RIDGE,
     BORDER-RIGHT-STYLE=RIDGE,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER',
     SIZE=8,
     COLOR='WHITE',
     BACKCOLOR=RGB(31 114 164),
     STYLE=BOLD,$
     
TYPE=TITLE, JUSTIFY=LEFT, $     
    
TYPE=TABFOOTING, FONT=ARIAL, COLOR=GRAY,$
     
TYPE=FOOTING, FONT=ARIAL, COLOR=GRAY,$

TYPE=SUBHEAD,
     STYLE=BOLD,
$

TYPE=SUBTOTAL, 
     STYLE=BOLD, 
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
     BORDER-TOP-COLOR='SILVER',
     BORDER-BOTTOM-COLOR='SILVER',
     BORDER-LEFT-COLOR='SILVER',
     BORDER-RIGHT-COLOR='SILVER', $
     
TYPE=GRANDTOTAL, STYLE=BOLD, $

ENDSTYLE


&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
-*
END
-RUN

-GOTO XXIT;



-NORECORDS
-SET &&RPTSUF = 'MSG';
-INCLUDE FDEFRPTS
-RUN
JOIN SET_KEY IN BRPTINST TO SET_KEY IN BRPT_SET AS J1
DEFINE FILE BRPTINST
EMPTY/A35 = 'NO RECORDS FOUND FOR THIS SELECTION';
NOWTOD/A8 WITH INST_KEY = HHMMSS (NOWTOD);
END
TABLE FILE BRPTINST
-INCLUDE HDREXLS
PRINT EMPTY AS 'REPORT,MESSAGE' 
BY ROLLUP_CODE AS 'ROLLUP,CODE'
BY RPT_NAME AS 'REPORT,NAME'
BY SELECT_LEV AS 'BREAK,LEVEL'
IF INST_KEY EQ &&IKEY
IF RECORDLIMIT EQ 1
-INCLUDE FOOTERDT
ON TABLE SUBFOOT
-INCLUDE SBFOOT
ON TABLE SET PAGE-NUM OFF
ON TABLE SET STYLE *
-INCLUDE SMEXL
ENDSTYLE
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN



-XXIT
