-**************************************************************************************************
-* file name: ConvertRPTFLDS.fex
-*            convert FOCUS RPT_FLDS.FOC into SQL tables.
-* SQL tables: RPT_FLDS_PARM
-*             RPT_FLDS_PARM_VALUES
-*             RPT_FLDS_MISC
-*             RPT_FLDS_QREVIEW
-*             RPT_FLDS_QREVIEW2
-*             RPT_FLDS_TOTAL_R
-*             RPT_FLDS_TOTAL_R2
-*             RPT_FLDS_TRVLSMRY
-*             RPT_FLDS_UDID
-*             RPT_FLDS_HIERARCHY
-*             RPT_FLDS_DVR
-*             RPT_FLDS_OPTIONS
-* 
-* The first part of this program is to convert those fields with multiple selections into Available  
-* fields. Those Available fields will be moved to RPT_FLDS_PARM; and their values will be moved to
-* RPT_FLDS_PARM_VALUES
-* 
-* All rows for RPT_FLDS_PARM will be written to PARMFILE.txt for MODIFY FREEFORM.
-* All rows for RPT_FLDS_PARM_VALUES will be written to PARMVALS.Ttxt for MODIFY FREEFORM.
-*
-* The second part of this program will convert those special segments to the corresponding SQL 
-* tables. This will be coded in other fex programs.
-**************************************************************************************************
-SET &ECHO = ALL;
-SET &TEMPPATH = 'D:\LUSHENG\'

-SET &WHERE='WHERE RECORDLIMIT EQ 10';

-* filedef these two files for modify freeform
-SET &PARMFILE = &TEMPPATH || 'PARMFILE.TXT';
-SET &PARMVALS = &TEMPPATH || 'PARMVALS.TXT';
FILEDEF PARMFILE DISK &PARMFILE
FILEDEF PARMVALS DISK &PARMVALS

-SET &PARM_SEQ = 0;

-*-GOTO THISSTEP;
-**************************************************************
-* PART ONE - STEP: 1
-* Convert BOOKING TYPES (fieldName: DOD_TYPE) in root segment
-**************************************************************
-* don't need to convert if all booking types are selected or none of them is selected.

DEFINE FILE RPT_FLDS
  FLAG/A1= IF (BOOKTYPE_A NE 0 AND BOOKTYPE_AE NE 0 AND BOOKTYPE_O NE 0 AND BOOKTYPE_OE NE 0 AND
      BOOKTYPE_W NE 0 AND BOOKTYPE_WE NE 0 AND BOOKTYPE_AW NE 0 AND BOOKTYPE_AWE NE 0 AND 
      BOOKTYPE_E NE 0 AND BOOKTYPE_EE NE 0 AND BOOKTYPE_C NE 0 AND BOOKTYPE_CE NE 0) OR
      (BOOKTYPE_A NE 1 AND BOOKTYPE_AE NE 1 AND BOOKTYPE_O NE 1 AND BOOKTYPE_OE NE 1 AND
	  BOOKTYPE_W NE 1 AND BOOKTYPE_WE NE 1 AND BOOKTYPE_AW NE 1 AND BOOKTYPE_AWE NE 1 AND 
      BOOKTYPE_E NE 1 AND BOOKTYPE_EE NE 1 AND BOOKTYPE_C NE 1 AND BOOKTYPE_CE NE 1) THEN 'N' ELSE 'Y';
END

TABLE FILE RPT_FLDS
PRINT 
BOOKTYPE_A BOOKTYPE_AE BOOKTYPE_O BOOKTYPE_OE 
BOOKTYPE_W BOOKTYPE_WE BOOKTYPE_AW BOOKTYPE_AWE
BOOKTYPE_E BOOKTYPE_EE BOOKTYPE_C BOOKTYPE_CE
BY INST_KEY 

WHERE FLAG EQ 'Y'     
&WHERE
ON TABLE SAVE AS ROOTFLDS
END
-RUN

-IF &LINES EQ 0 THEN GOTO Check2;
-SET &COUNT = &LINES;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'DOD_TYPE';
-* only OPERATOR EQ is used for booking types in the conversion
-SET &OPERATOR = 'EQ';
-SET &VALUE_FORMAT = 'T';

-REPEAT ToEndBKType &COUNT TIMES 

-READ ROOTFLDS NOCLOSE &INSTKEY.7. &BT1.1. &BT2.1. &BT3.1. &BT4.1. &BT5.1. &BT6.1. &BT7.1. &BT8.1. &BT9.1. &BT10.1. &BT11.1. &BT12.1. 

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-* in the inner loop, each booking type will generates one record in rpt_flds_parm_values table
-* each record has its &PARM_VALUE_SEQ 

-SET &PARM_VALUE_SEQ = 0;
-SET &INDX2 = 1;
-REPEAT ToEndBTInner 12 TIMES
-SET &BT = &BT.&INDX2;
-IF &BT EQ 0 THEN GOTO INCCNT2;

-SET &DATA_VALUE = IF &INDX2 EQ 1 THEN ' ' 
-             ELSE IF &INDX2 EQ 2 THEN 'K' 
-             ELSE IF &INDX2 EQ 3 THEN 'I' 
-             ELSE IF &INDX2 EQ 4 THEN 'J' 
-             ELSE IF &INDX2 EQ 5 THEN 'S' 
-             ELSE IF &INDX2 EQ 6 THEN 'L' 
-             ELSE IF &INDX2 EQ 7 THEN 'A' 
-             ELSE IF &INDX2 EQ 8 THEN 'N' 
-             ELSE IF &INDX2 EQ 9 THEN 'X' 
-             ELSE IF &INDX2 EQ 10 THEN 'M' 
-             ELSE IF &INDX2 EQ 11 THEN 'C' 
-             ELSE IF &INDX2 EQ 12 THEN 'D'; 

-SET &DATA_DESC = IF &INDX2 EQ 1 THEN 'Agent Booked Ticket' 
-             ELSE IF &INDX2 EQ 2 THEN 'Agent Booked Ticket - EXE' 
-             ELSE IF &INDX2 EQ 3 THEN 'Online Booked Tickt' 
-             ELSE IF &INDX2 EQ 4 THEN 'Online Booked Tickt - EXE' 
-             ELSE IF &INDX2 EQ 5 THEN 'Web Booked Ticket' 
-             ELSE IF &INDX2 EQ 6 THEN 'Web Booked Ticket - EXE' 
-             ELSE IF &INDX2 EQ 7 THEN 'Agency Web Booked Ticket' 
-             ELSE IF &INDX2 EQ 8 THEN 'Agency Web Booked Ticket - EXE' 
-             ELSE IF &INDX2 EQ 9 THEN 'Exchange from Online' 
-             ELSE IF &INDX2 EQ 10 THEN 'Exchange from Online - EXE' 
-             ELSE IF &INDX2 EQ 11 THEN 'Consolidator' 
-             ELSE IF &INDX2 EQ 12 THEN 'Consolidator - Executive'; 

-SET &PARM_VALUE_SEQ = &PARM_VALUE_SEQ + 1;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-INCCNT2
-SET &INDX2 = &INDX2 + 1;

-ToEndBTInner
-ToEndBKType
-CLOSE ROOTFLDS

-**************************************************************************************************
-* PART ONE -  STEP: 2  Convert region code  (INCLGEO -> GEO_CODE)
-* Convert one field at a time
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT COMMON1.INCLGEO RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
&WHERE
ON TABLE SAVE AS SAVEREG1
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndREG2;

-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndREG1 &COUNT TIMES
-READ SAVEREG1 NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-INCLUDE CHKCPFLAG
-IF &LINES EQ 0 THEN GOTO NOREGRIND;
-READ CPFLAG &RIND.1.
-NOREGRIND

-SET &DB_FIELD = IF &RIND EQ 'C' OR &RPTGRP EQ 'CAR' THEN 'PICK_CTY.GEO_ZONE'
- ELSE IF &RIND EQ 'H' OR &RPTGRP EQ 'HTL' THEN 'CITY.GEO_ZONE'
- ELSE IF &RIND EQ 'S' AND &SETFILE EQ 'ABCNTRY' OR 'CONGCNTY' THEN 'RTE_APT.GEO_ZONE'
- ELSE IF &RIND EQ 'S' AND &RPTSTREAM  NE 'ADHOCRPT' THEN 'EMB_APT.GEO_ZONE'
- ELSE IF &RIND EQ 'T' AND &SETFILE EQ 'CHTRIPI' OR 'ABCNTFST' OR 'ABCNTFNL' OR &RPTSTREAM  EQ 'ADHOCRPT' THEN 'TKT_MAIN.FST_DEST_GEO_ZONE'
- ELSE 'GEO_ZONE';

-SET &OPERATOR= IF &INCLUDE EQ 1 AND &RPTSTREAM EQ 'ADHOCRPT' THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 1 AND &RIND NE 'T' THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 AND &RPTSTREAM EQ 'ADHOCRPT' THEN 'OMITS' 
- ELSE IF &INCLUDE EQ 2 AND &RIND NE 'T' THEN 'NE' 
- ELSE IF &INCLUDE EQ 1 THEN 'CONTAINS' ELSE IF &INCLUDE EQ 2 THEN 'OMITS' ELSE '';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndREG1
-CLOSE SAVEREG1

-* convert region code and region name
JOIN CLEAR *
JOIN REGION_CODE IN RPT_FLDS TO GEO_ZONE IN GEO AS J1
END

TABLE FILE RPT_FLDS
PRINT 
REGION_CODE GEO_NAME
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE REGION_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEREG2
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndREG2 &COUNT TIMES
-READ SAVEREG2 NOCLOSE &INSTKEY.7. &SEQ_NO.2. &REGIONCODE.3. &GEO_NAME.15.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &REGIONCODE;
-SET &DATA_DESC = &GEO_NAME;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndREG2
-CLOSE SAVEREG2
-**************************************************************************************************
-* PART ONE -  STEP: 3 Convert country code (FIELD=INCL4, ALIAS=INCL_CN -> COUNTRY_CODE)
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT COMMON1.INCL4 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
&WHERE
ON TABLE SAVE AS SAVECN1
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndCntry2;

-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndCntry1 &COUNT TIMES
-READ SAVECN1 NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-INCLUDE CHKCPFLAG
-IF &LINES EQ 0 THEN GOTO NOCNRIND;
-READ CPFLAG &RIND.1.
-NOCNRIND

-SET &DB_FIELD = IF &RIND EQ 'C' OR &RPTGRP EQ 'CAR' THEN 'PICK_CTY.COUNTRY_CODE'
- ELSE IF &RIND EQ 'H' OR &RPTGRP EQ 'HTL' THEN 'CITY.COUNTRY_CODE'
- ELSE IF &RIND EQ 'S' AND &SETFILE EQ 'ABCNTRY' OR 'CONGCNTY' THEN 'RTE_APT.COUNTRY_CODE'
- ELSE IF &RIND EQ 'S' AND &RPTSTREAM  NE 'ADHOCRPT' THEN 'EMB_APT.COUNTRY_CODE'
- ELSE IF &RIND EQ 'T' AND &SETFILE EQ 'CHTRIPI' OR 'ABCNTFST' OR 'ABCNTFNL' THEN 'TKT_MAIN.FST_DEST_CNTRY_CODE'
- ELSE IF &RIND EQ 'T' OR &RPTSTREAM  EQ 'ADHOCRPT' THEN 'TKT_MAIN.CTRY_COD' 
- ELSE 'COUNTRY_CODE';

-SET &OPERATOR = IF &INCLUDE EQ 1 AND &RPTSTREAM EQ 'ADHOCRPT'  THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 1 AND &RIND NE 'T' THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 AND &RPTSTREAM EQ 'ADHOCRPT' THEN 'OMITS' 
- ELSE IF &INCLUDE EQ 2 AND &RIND NE 'T' THEN ' NE ' 
- ELSE IF &INCLUDE EQ 1 THEN 'CONTAINS' ELSE IF &INCLUDE EQ 2 THEN 'OMITS' ELSE '';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndCntry1
-CLOSE SAVECN1

-* convert COUNTRY CODE and COUNTRY NAME
JOIN CLEAR *
JOIN COUNTRY_CODE IN RPT_FLDS TO COUNTRY_CODE IN COUNTRY AS J1
END

TABLE FILE RPT_FLDS
PRINT 
COUNTRY_CODE COUNTRY_NAME
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE COUNTRY_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVECN2
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndCntry2 &COUNT TIMES
-READ SAVECN2 NOCLOSE &INSTKEY.7. &SEQ_NO.2. &CNCODE.3. &CN_NAME.25.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &CNCODE;
-SET &DATA_DESC = &CN_NAME;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndCntry2
-CLOSE SAVECN2

-**************************************************************************************************
-* PART ONE -  STEP: 4 Convert STATE code (FIELD=INCL5, ALIAS=INCL_ST --> STATE_CODE)
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT COMMON1.INCL5 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndState2;

-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndState1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-INCLUDE CHKCPFLAG

-IF &LINES EQ 0 THEN GOTO NORIND;
-READ CPFLAG &RIND.1.
-NORIND

-SET &DB_FIELD = IF &RIND EQ 'C' OR &RPTGRP EQ 'CAR' THEN 'PICK_CTY.STATE_CODE'
- ELSE IF &RIND EQ 'H' OR &RPTGRP EQ 'HTL' THEN 'CITY.STATE_CODE'
- ELSE IF &RIND EQ 'S' AND &RPTSTREAM  NE 'ADHOCRPT' THEN 'EMB_APT.STATE_CODE'
- ELSE IF &RPTSTREAM  EQ 'ADHOCRPT' THEN 'TKT_MAIN.STATE_CODES' 
- ELSE 'STATE_CODE';

-SET &OPERATOR = IF &INCLUDE EQ 1 AND &RPTSTREAM EQ 'ADHOCRPT' THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 1 AND &RIND NE 'T' THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 AND &RPTSTREAM EQ 'ADHOCRPT' THEN 'OMITS'
- ELSE IF &INCLUDE EQ 2 AND &RIND NE 'T' THEN 'NE' 
- ELSE IF &INCLUDE EQ 1 THEN 'CONTAINS' ELSE IF &INCLUDE EQ 2 THEN 'OMITS' ELSE '';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndState1
-CLOSE SAVEF

-* convert STATE CODE and STATE NAME
DEFINE FILE STATE
  STCODE/A2 = EDIT(STATE_CODE,'99');
END
TABLE FILE STATE
PRINT STCODE STATE_NAME
ON TABLE HOLD AS HOLDST FORMAT FOCUS INDEX STCODE 
END
-RUN

JOIN CLEAR *
JOIN STATE_CODE IN RPT_FLDS TO STCODE IN HOLDST AS J1
END

TABLE FILE RPT_FLDS
PRINT 
STATE_CODE STATE_NAME
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE STATE_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndState2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &STCODE.2. &ST_NAME.25.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &STCODE;
-SET &DATA_DESC = &ST_NAME;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndState2
-CLOSE SAVEVAL
-EndState

-**************************************************************************************************
-* PART ONE - STEP: 5 Convert ID Level1 
-* INCL1 --> ID_LEVEL1; INCL2 --> ID_LEVEL2; INCL3 --> ID_LEVEL3; 
-* INCLL4 --> ID_LEVEL4;  INCLL5 --> ID_LEVEL5; INCLL6 --> ID_LEVEL6;
-* INCLL7 --> ID_LEVEL7
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT COMMON1.INCL1 
BY INST_KEY
WHERE COMMON1.INCL1 NE 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO ENDLEVEL1;

-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndLEVEL1A &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &DB_FIELD = 'LEVEL1';
-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 THEN 'NE'
- ELSE IF &INCLUDE EQ 3 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 4 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndLEVEL1A
-CLOSE SAVEF

-* convert ID LEVEL and description, get ID level description from rollup.foc
JOIN CLEAR *
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J1
JOIN ROLLUP_CODE IN RPT_INST TO ROLLUP_CODE IN ROLLUP AS J2
END

TABLE FILE RPT_INST
PRINT ID_LEVEL1 LEV1 
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE ID_LEVEL1 NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndLEVEL1B &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &LEVEL1.15. &USLEV1.20.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &LEVEL1;
-SET &DATA_DESC = &USLEV1;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndLEVEL1B
-CLOSE SAVEVAL
-ENDLEVEL1

-**************************************************************************************************
-* PART ONE - STEP: 6 Convert ID Level2 
-* INCL1 --> ID_LEVEL1; INCL2 --> ID_LEVEL2; INCL3 --> ID_LEVEL3; 
-* INCLL4 --> ID_LEVEL4;  INCLL5 --> ID_LEVEL5; INCLL6 --> ID_LEVEL6;
-* INCLL7 --> ID_LEVEL7
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT COMMON1.INCL2 
BY INST_KEY
WHERE COMMON1.INCL2 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO ENDLEVEL2;

-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndLEVEL2A &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &DB_FIELD = 'LEVEL2';
-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 THEN 'NE'
- ELSE IF &INCLUDE EQ 3 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 4 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndLEVEL2A
-CLOSE SAVEF

-* convert ID LEVEL and description, get ID level description from rollup.foc
JOIN CLEAR *
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J1
JOIN ROLLUP_CODE IN RPT_INST TO ROLLUP_CODE IN ROLLUP AS J2
END

TABLE FILE RPT_INST
PRINT ID_LEVEL2 LEV2 
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE ID_LEVEL1 NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndLEVEL2B &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &LEVEL2.15. &USLEV2.20.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &LEVEL2;
-SET &DATA_DESC = &USLEV2;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndLEVEL2B
-CLOSE SAVEVAL
-ENDLEVEL2

-**************************************************************************************************
-* PART ONE - STEP: 7 Convert ID Level3 
-* INCL1 --> ID_LEVEL1; INCL2 --> ID_LEVEL2; INCL3 --> ID_LEVEL3; 
-* INCLL4 --> ID_LEVEL4;  INCLL5 --> ID_LEVEL5; INCLL6 --> ID_LEVEL6;
-* INCLL7 --> ID_LEVEL7
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT COMMON1.INCL3 
BY INST_KEY
WHERE COMMON1.INCL3 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO ENDLEVEL3;

-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndLEVEL3A &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &DB_FIELD = 'LEVEL3';
-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 THEN 'NE'
- ELSE IF &INCLUDE EQ 3 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 4 THEN 'OMITS';


-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndLEVEL3A
-CLOSE SAVEF

-* convert ID LEVEL and description, get ID level description from rollup.foc
JOIN CLEAR *
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J1
JOIN ROLLUP_CODE IN RPT_INST TO ROLLUP_CODE IN ROLLUP AS J2
END

TABLE FILE RPT_INST
PRINT ID_LEVEL3 LEV3 
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE ID_LEVEL3 NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL3;
-SET &COUNT = &LINES;
-REPEAT EndLEVEL3B &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &LEVEL3.15. &USLEV3.20.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &LEVEL3;
-SET &DATA_DESC = &USLEV3;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndLEVEL3B
-CLOSE SAVEVAL
-ENDLEVEL3

-**************************************************************************************************
-* PART ONE - STEP: 8 Convert ID Level4 
-* INCL1 --> ID_LEVEL1; INCL2 --> ID_LEVEL2; INCL3 --> ID_LEVEL3; 
-* INCLL4 --> ID_LEVEL4;  INCLL5 --> ID_LEVEL5; INCLL6 --> ID_LEVEL6;
-* INCLL7 --> ID_LEVEL7
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT COMMON1.INCLL4 
BY INST_KEY
WHERE INCLL4 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL4;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;

-REPEAT EndLEVEL4A &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &DB_FIELD = 'LEVEL4';
-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 THEN 'NE'
- ELSE IF &INCLUDE EQ 3 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 4 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndLEVEL4A
-CLOSE SAVEF

-* convert ID LEVEL and description, get ID level description from rollup.foc
JOIN CLEAR *
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J1
JOIN ROLLUP_CODE IN RPT_INST TO ROLLUP_CODE IN ROLLUP AS J2
END

TABLE FILE RPT_INST
PRINT ID_LEVEL4 LEV4 
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE ID_LEVEL4 NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL4;
-SET &COUNT = &LINES;
-REPEAT EndLEVEL4B &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &LEVEL4.60. &USLEV4.20.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &LEVEL4;
-SET &DATA_DESC = &USLEV4;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndLEVEL4B
-CLOSE SAVEVAL
-ENDLEVEL4

-**************************************************************************************************
-* PART ONE - STEP: 9  Convert ID Level5 
-* INCL1 --> ID_LEVEL1; INCL2 --> ID_LEVEL2; INCL3 --> ID_LEVEL3; 
-* INCLL4 --> ID_LEVEL4;  INCLL5 --> ID_LEVEL5; INCLL6 --> ID_LEVEL6;
-* INCLL7 --> ID_LEVEL7
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT COMMON1.INCLL5 
BY INST_KEY
WHERE INCLL5 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL5;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;

-REPEAT EndLEVEL5A &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &DB_FIELD = 'LEVEL5';
-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 THEN 'NE'
- ELSE IF &INCLUDE EQ 3 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 4 THEN 'OMITS';


-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndLEVEL5A
-CLOSE SAVEF

-* convert ID LEVEL and description, get ID level description from rollup.foc
JOIN CLEAR *
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J1
JOIN ROLLUP_CODE IN RPT_INST TO ROLLUP_CODE IN ROLLUP AS J2
END

TABLE FILE RPT_INST
PRINT ID_LEVEL5 LEV5
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE ID_LEVEL5 NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL5;
-SET &COUNT = &LINES;
-REPEAT EndLEVEL5B &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &LEVEL5.20. &USLEV5.20.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &LEVEL5;
-SET &DATA_DESC = &USLEV5;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndLEVEL5B
-CLOSE SAVEVAL
-ENDLEVEL5

-**************************************************************************************************
-* PART ONE - STEP: 10  Convert ID Level6 
-* INCL1 --> ID_LEVEL1; INCL2 --> ID_LEVEL2; INCL3 --> ID_LEVEL3; 
-* INCLL4 --> ID_LEVEL4;  INCLL5 --> ID_LEVEL5; INCLL6 --> ID_LEVEL6;
-* INCLL7 --> ID_LEVEL7
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT COMMON1.INCLL6 
BY INST_KEY
WHERE INCLL6 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL6;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;

-REPEAT EndLEVEL6A &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &DB_FIELD = 'LEVEL6';
-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 THEN 'NE'
- ELSE IF &INCLUDE EQ 3 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 4 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndLEVEL6A
-CLOSE SAVEF

-* convert ID LEVEL and description, get ID level description from rollup.foc
JOIN CLEAR *
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J1
JOIN ROLLUP_CODE IN RPT_INST TO ROLLUP_CODE IN ROLLUP AS J2
END

TABLE FILE RPT_INST
PRINT ID_LEVEL6 LEV6
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE ID_LEVEL6 NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL6;
-SET &COUNT = &LINES;
-REPEAT EndLEVEL6B &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &LEVEL6.20. &USLEV6.20.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &LEVEL6;
-SET &DATA_DESC = &USLEV6;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndLEVEL6B
-CLOSE SAVEVAL
-ENDLEVEL6

-**************************************************************************************************
-* PART ONE - STEP: 11  Convert ID Level7 
-* INCL1 --> ID_LEVEL1; INCL2 --> ID_LEVEL2; INCL3 --> ID_LEVEL3; 
-* INCLL4 --> ID_LEVEL4;  INCLL5 --> ID_LEVEL5; INCLL6 --> ID_LEVEL6;
-* INCLL7 --> ID_LEVEL7
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT COMMON1.INCLL7 
BY INST_KEY
WHERE INCLL7 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL7;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;

-REPEAT EndLEVEL7A &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &DB_FIELD = 'LEVEL7';
-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 2 THEN 'NE'
- ELSE IF &INCLUDE EQ 3 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 4 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndLEVEL7A
-CLOSE SAVEF

-* convert ID LEVEL and description, get ID level description from rollup.foc
JOIN CLEAR *
JOIN INST_KEY IN RPT_INST TO INST_KEY IN RPT_FLDS AS J1
JOIN ROLLUP_CODE IN RPT_INST TO ROLLUP_CODE IN ROLLUP AS J2
END

TABLE FILE RPT_INST
PRINT ID_LEVEL5 LEV7
BY INST_KEY 
BY COMMON2.SEQ_NO
WHERE ID_LEVEL7 NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDLEVEL7;
-SET &COUNT = &LINES;
-REPEAT EndLEVEL7B &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &LEVEL7.20. &USLEV7.20.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &LEVEL7;
-SET &DATA_DESC = &USLEV7;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndLEVEL7B
-CLOSE SAVEVAL
-ENDLEVEL7

-**************************************************************************************************
-* PART ONE - STEP: 12  CONVERT INTL/DOM TICKET
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT INTDOMT RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE INTDOMT GT 1
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDINTDOMT;

-SET &COUNT = &LINES;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'AIR_MAIN.INTL_DOM';

-REPEAT EndINTDOMT1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-*1: ALL; 2: DOMESTIC; 3: INTL
-SET &OPERATOR = IF &INCLUDE EQ 2 THEN 'EQ' ELSE IF &INCLUDE EQ 3 THEN 'NE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-*ONE VALUE ONLY FOR RADION BUTTONS
-SET &PARM_VALUE_SEQ = 1;
-SET &DATA_VALUE = IF &INCLUDE EQ 2 THEN 'D' ELSE IF &INCLUDE EQ 3 THEN 'I';
-SET &DATA_DESC = IF &INCLUDE EQ 2 THEN 'Domestic' ELSE IF &INCLUDE EQ 3 THEN 'International';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndINTDOMT1
-CLOSE SAVEF

-ENDINTDOMT

-**************************************************************************************************
-* PART ONE - STEP: 13  CONVERT INTL/DOM CityPair
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT INTDOMS 
BY INST_KEY
WHERE INTDOMS GT 1
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDINTDOMs;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;
-SET &DB_FIELD = 'CITYPAIR.INTL_DOM';

-REPEAT EndINTDOMS1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-*1: ALL; 2: DOMESTIC; 3: INTL
-SET &OPERATOR = IF &INCLUDE EQ 2 THEN 'EQ' ELSE IF &INCLUDE EQ 3 THEN 'NE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-*ONE VALUE ONLY FOR RADION BUTTONS
-SET &PARM_VALUE_SEQ = 1;
-SET &DATA_VALUE = IF &INCLUDE EQ 2 THEN 'D' ELSE IF &INCLUDE EQ 3 THEN 'I';
-SET &DATA_DESC = IF &INCLUDE EQ 2 THEN 'Domestic' ELSE IF &INCLUDE EQ 3 THEN 'International';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndINTDOMS1
-CLOSE SAVEF

-ENDINTDOMs

-**************************************************************************************************
-* PART ONE - STEP: 14  CONVERT Class Category
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT CLASSCAT_A CLASSCAT_F CLASSCAT_B CLASSCAT_C CLASSCAT_D CLASSCAT_DEF CLASSCAT_UPG RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE CLASSCAT_A NE 0 OR CLASSCAT_F NE 0 OR CLASSCAT_B NE 0 OR CLASSCAT_C NE 0 OR CLASSCAT_D NE 0 OR CLASSCAT_DEF NE 0 OR CLASSCAT_UPG NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO EndClassCat;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;
-REPEAT EndClassCat1 &COUNT TIMES 
-READ SAVEF NOCLOSE &INSTKEY.7. &Class1.1. &Class2.1. &Class3.1. &Class4.1. &Class5.1. &Class6.1. &Class7.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-SET &SPECIAL = IF &VIEW EQ 'AVIW74' AND &RPTSTREAM EQ 'AIR_PLCY' AND (&SETFILE EQ 'ABCLASS' OR &SETFILE EQ 'TTCLASS') THEN 'Y' ELSE 'N';
-SET &DB_FIELD = IF &SPECIAL EQ 'Y' THEN 'CL_CAT' ELSE 'ADIR_ALL';
-SET &OPERATOR = 'CONTAINS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-SET &PARM_VALUE_SEQ = 0;
-SET &INDX2 = 1;
-* 7 class categories
-REPEAT EndClassCat 7 TIMES
-SET &CLASS = &Class.&INDX2;
-IF &CLASS EQ 0 THEN GOTO INCCATCNT;

-SET &DATA_VALUE = IF &INDX2 EQ 1 THEN '' 
-             ELSE IF &INDX2 EQ 2 AND &SPECIAL EQ 'Y' THEN 'F'
-             ELSE IF &INDX2 EQ 2 AND &SPECIAL EQ 'N' THEN '*F'
-             ELSE IF &INDX2 EQ 3 AND &SPECIAL EQ 'Y' THEN 'B'
-             ELSE IF &INDX2 EQ 3 AND &SPECIAL EQ 'N' THEN '*B' 
-             ELSE IF &INDX2 EQ 4 AND &SPECIAL EQ 'Y' THEN 'P'
-             ELSE IF &INDX2 EQ 4 AND &SPECIAL EQ 'N' THEN '*P'
-             ELSE IF &INDX2 EQ 5 AND &SPECIAL EQ 'Y' THEN 'E'
-             ELSE IF &INDX2 EQ 5 AND &SPECIAL EQ 'N' THEN '*E'
-             ELSE IF &INDX2 EQ 6 AND &SPECIAL EQ 'Y' THEN 'D'
-             ELSE IF &INDX2 EQ 6 AND &SPECIAL EQ 'N' THEN '*D'
-             ELSE IF &INDX2 EQ 7 AND &SPECIAL EQ 'Y' THEN 'U' 
-             ELSE IF &INDX2 EQ 7 AND &SPECIAL EQ 'N' THEN '*U';

-SET &DATA_DESC = IF &INDX2 EQ 1 THEN 'All' 
-            ELSE IF &INDX2 EQ 2 THEN 'First Class' 
-            ELSE IF &INDX2 EQ 3 THEN 'Business' 
-            ELSE IF &INDX2 EQ 4 THEN 'Premium Economy' 
-            ELSE IF &INDX2 EQ 5 THEN 'Economy' 
-            ELSE IF &INDX2 EQ 6 THEN 'Default' 
-            ELSE IF &INDX2 EQ 7 THEN 'Upgrade'; 

-IF &INDX2 EQ 1 THEN GOTO INCCATCNT;

-SET &PARM_VALUE_SEQ = &PARM_VALUE_SEQ + 1;
-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-INCCATCNT
-SET &INDX2 = &INDX2 + 1;

-EndClassCat

-EndClassCat1
-CLOSE SAVEF

-**************************************************************************************************
-* PART ONE - STEP: 15  CONVERT TRANSACTION TYPE
-* Transaction type:  Sales, Refunds, Exchanges, and Voids are binding to different fields: 
-* SALES --> SALE_FLAG; Refunds and Exchanges --> EX_RF_FLAG; Voids --> VOID_DATE
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT TRANS_TYPE_S TRANS_TYPE_E TRANS_TYPE_R TRANS_TYPE_V
BY INST_KEY
WHERE TRANS_TYPE_S NE 0 OR TRANS_TYPE_E NE 0 OR TRANS_TYPE_R NE 0 OR TRANS_TYPE_V NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO EndTransType;


-SET &COUNT = &LINES;
-REPEAT EndTransType &COUNT TIMES 
-READ SAVEF NOCLOSE &INSTKEY.7. &TransS.1. &TransE.1. &TransR.1. &TransV.1.
-*-READ SAVEF NOCLOSE &INSTKEY.7. &TransS.1. &TransE.1. &TransR.1. &TransV.1.

-IF &TransS NE '1' OR &TransV NE '1' THEN GOTO CHKExchange;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'SALES_FLAG';
-SET &OPERATOR = 'EQ';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-SET &PARM_VALUE_SEQ = 0;
-IF &TransS NE '1' THEN GOTO ChkVoids;

-SET &PARM_VALUE_SEQ = &PARM_VALUE_SEQ + 1;
-SET &DATA_VALUE = 'S';
-SET &DATA_DESC = 'Sales' ;
-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-ChkVoids
-IF &TransV NE '1' THEN GOTO CHKExchange;
-IF &TransS EQ '1' THEN GOTO PutVoidsVal;
-*Sales and Voids share same &DB_FIELD, therefore they have same &PARM_SEQ
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'SALES_FLAG';
-SET &OPERATOR = 'EQ';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-PutVoidsVal
-SET &PARM_VALUE_SEQ = 1;
-SET &DATA_VALUE = 'V';
-SET &DATA_DESC = 'Voids' ;
-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-CHKExchange
-IF &TransE NE '1' THEN GOTO ChkRefunds;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'EX_RF_FLAG';
-SET &OPERATOR = 'EQ';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-SET &PARM_VALUE_SEQ = 1;
-SET &DATA_VALUE = 'E';
-SET &DATA_DESC = 'Exchanges' ;
-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-ChkRefunds
-*Exchanges and Refunds share same &DB_FIELD, therefore they have same &PARM_SEQ
-IF &TransE EQ '1' THEN GOTO PutRefVal;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'EX_RF_FLAG';
-SET &OPERATOR = 'EQ';
-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-PutRefVal
-SET &PARM_VALUE_SEQ = 1;
-SET &DATA_VALUE = 'R';
-SET &DATA_DESC = 'Refunds' ;
-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndTransType
-CLOSE SAVEF

-**************************************************************************************************
-* PART ONE - STEP: 16  CONVERT Advance Purchase
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT ADV_PUR_A ADV_PUR_0 ADV_PUR_7 ADV_PUR_14 ADV_PUR_21
BY INST_KEY
WHERE ADV_PUR_A NE 0 OR ADV_PUR_0 NE 0 OR ADV_PUR_7 NE 0 OR ADV_PUR_14 NE 0 OR ADV_PUR_21 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO EndAdvPur;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;
-REPEAT EndAdvPur &COUNT TIMES 
-READ SAVEF NOCLOSE &INSTKEY.7. &AdvA.1. &Adv0.1. &Adv7.1. &Adv14.1. &Adv21.1.

-IF &AdvA EQ 1 THEN GOTO EndAdvPur;

-SET &DB_FIELD = 'ADV_PURCH';
-SET &OPERATOR = 'EQ';
-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$


-SET &PARM_VALUE_SEQ = 0;
-SET &INDX2 = 0;
-* 7 class categories
-REPEAT EndAdvPur 4 TIMES
-SET &ADV = &Adv.&INDX2;
-IF &ADV EQ 0 THEN GOTO IncAdvCnt;

-SET &DATA_VALUE = IF &INDX2 EQ 0  THEN '00-06' 
-             ELSE IF &INDX2 EQ 7  THEN '07-13' 
-             ELSE IF &INDX2 EQ 14 THEN '14-20'
-             ELSE IF &INDX2 EQ 21 THEN '21+' ;

-SET &DATA_DESC = IF &INDX2 EQ 0  THEN '00-06 Days' 
-            ELSE IF &INDX2 EQ 7  THEN '07-13 Days' 
-            ELSE IF &INDX2 EQ 14 THEN '14-20 Days' 
-            ELSE IF &INDX2 EQ 21 THEN '21+ Days'; 

-SET &PARM_VALUE_SEQ = &PARM_VALUE_SEQ + 1;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-IncAdvCnt
-SET &INDX2 = &INDX2 + 7;

-EndAdvPur
-CLOSE SAVEF

-**************************************************************************************************
-* PART ONE - STEP: 17 Convert Passenger Name
-* air.INCL1 --> airflds.PASSENGER; 
-* car.INCL1 --> carflds.PASSENGER; 
-* htl.INCL1 --> htlflds.PASSENGER; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-************************************************
-*AIR PASSENGERS
-************************************************
TABLE FILE RPT_FLDS
PRINT AIR.INCL1 
BY INST_KEY
WHERE AIR.INCL1 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'PASSNGR_NAME';

-REPEAT EndAIRPass1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'CONTAINS' ELSE IF &INCLUDE EQ 2 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndAIRPass1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.PASSENGER 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.PASSENGER NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndAIRPass2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &PASSENGER.33.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &PASSENGER;
-SET &DATA_DESC = '';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndAIRPass2
-CLOSE SAVEVAL

-************************************************
-*CAR PASSENGERS
-************************************************
TABLE FILE RPT_FLDS
PRINT CAR.INCL1 
BY INST_KEY
WHERE CAR.INCL1 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndCARPass1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 2 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndCARPass1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT CARFLDS.PASSENGER 
BY INST_KEY 
BY CARFLDS.SEQ_NO
WHERE CARFLDS.PASSENGER NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndCARPass2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &PASSENGER.33.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &PASSENGER;
-SET &DATA_DESC = '';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndCARPass2
-CLOSE SAVEVAL

-************************************************
-* HOTEL PASSENGERS
-************************************************

TABLE FILE RPT_FLDS
PRINT HTL.INCL1 
BY INST_KEY
WHERE HTL.INCL1 NE 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndHTLPass1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'CONTAINS' 
- ELSE IF &INCLUDE EQ 2 THEN 'OMITS';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndHTLPass1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT HTLFLDS.PASSENGER 
BY INST_KEY 
BY HTLFLDS.SEQ_NO
WHERE HTLFLDS.PASSENGER NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndHTLPass2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &PASSENGER.33.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &PASSENGER;
-SET &DATA_DESC = '';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndHTLPass2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 19 Convert TICKET NUMBER
-* air.INCL2 --> airflds.TICKET_NO; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-************************************************
-*AIR TICKET NUMBER
-************************************************

TABLE FILE RPT_FLDS
PRINT AIR.INCL2 
BY INST_KEY
WHERE AIR.INCL2 GT 0
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-SET &DB_FIELD = 'TKT_NUM';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndAIRTKT1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE IF &INCLUDE EQ 2 THEN 'NE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndAIRTKT1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.TICKET_NO 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.TICKET_NO NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndAIRTKT2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &TKTNUM.10.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &TKTNUM;
-SET &DATA_DESC = '';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndAIRTKT2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 20 Convert DPT_AIRPORT 
-* air.INCL3 --> airflds.DPT_AIRPORT; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

-************************************************
-*DEPART AIRPORT CODE
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL3 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE AIR.INCL3 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-REPEAT EndAIRDpt1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-SET &SPECIAL = IF (&SETFILE EQ 'ABDEPART' OR 'ABARRIVE' OR 'JHARRIVE' OR 'ISARRIVE' OR 'ISDEPART') THEN 'Y' ELSE 'N';
-SET &OPERATOR = IF &INCLUDE EQ 1 AND &SPECIAL EQ 'Y' THEN 'EQ'
- ELSE IF &INCLUDE EQ 2 AND &SPECIAL EQ 'Y' THEN 'NE'
- ELSE IF &INCLUDE EQ 1 THEN 'LIKE' ELSE 'NOT LIKE';

-SET &DB_FIELD = IF &SPECIAL EQ 'Y' THEN 'EMBARK' ELSE 'ADIR_STP';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndAIRDpt1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.DPT_AIRPORT 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.DPT_AIRPORT NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndAIRDpt2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &DPTAPCODE.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &DPTAPCODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndAIRDpt2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 21 Convert RTE_AIRPORT 
-* air.INCL4 --> airflds.RTE_AIRPORT; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*DEPART AIRPORT CODE
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL4 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE AIR.INCL4 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndAIRRte1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-SET &SPECIAL = IF (&SETFILE EQ 'ABDEPART' OR 'ABARRIVE' OR 'JHARRIVE' OR 'ISARRIVE' OR 'ISDEPART') THEN 'Y' ELSE 'N';
-SET &OPERATOR = IF &INCLUDE EQ 1 AND &SPECIAL EQ 'Y' THEN 'EQ'
- ELSE IF &INCLUDE EQ 2 AND &SPECIAL EQ 'Y' THEN 'NE'
- ELSE IF &INCLUDE EQ 1  THEN 'CONTAINS' ELSE IF &INCLUDE EQ 2  THEN 'OMITS';

-SET &DB_FIELD = IF &SPECIAL EQ 'Y' THEN 'ROUTE' ELSE 'ADIR_STP';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndAIRRte1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.RTE_AIRPORT 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.RTE_AIRPORT NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndAIRRte2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &RTEAPCODE.3.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &RTEAPCODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndAIRRte2
-CLOSE SAVEVAL


-**************************************************************************************************
-* PART ONE - STEP: 22 Convert VAL_AIR Validating Airline 
-* air.INCL5 --> airflds.VAL_AIR; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

-************************************************
-*Validating Airline 
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL5 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE AIR.INCL5 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndValAir1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';

-SET &DB_FIELD = 'VAL_AIRLINE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndValAir1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.VAL_AIR 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.VAL_AIR NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndValAir2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &VAL_AIR.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &VAL_AIR;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndValAir2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 23 Convert Airline Flown
-* air.INCL6 --> airflds.FLOWN_AIR; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

-************************************************
-*Flown Airline 
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL6 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE AIR.INCL6 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndFlownAir1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-SET &SPECIAL = IF (&VIEW EQ 'AVIW61' OR &VIEW EQ 'AVIEW1') THEN 'Y' ELSE 'N';
-SET &OPERATOR = IF (&SPECIAL EQ 'Y' AND &INCLUDE EQ 1) THEN 'EQ'
- ELSE IF (&SPECIAL EQ 'Y' AND &INCLUDE EQ 2) THEN 'NE'
- ELSE IF &INCLUDE EQ 1 THEN 'CONTAINS'
- ELSE IF &INCLUDE EQ 2 THEN 'OMITS';

-SET &DB_FIELD = IF &SPECIAL EQ 'Y' THEN 'AIRLINE' ELSE 'ADIR_ALL';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndFlownAir1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.FLOWN_AIR 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.FLOWN_AIR NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndFlownAir2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &FLOWN_AIR.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &FLOWN_AIR;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndFlownAir2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 24 Convert REFUSE_CODE
-* air.INCL7 --> airflds.REFUSE_CODE; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*Air Refuse code
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL7 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE AIR.INCL7 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndAirRefCd1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8.

-SET &OPERATOR = IF &INCLUDE EQ 1  THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'REFUSE_CODE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndAirRefCd1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.REFUSE_CODE 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.REFUSE_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndAirRefCd2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &AIRREFCD.2.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &AIRREFCD;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndAirRefCd2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 25 Convert City pair airport
-* air.INCL8 --> airflds.CP_AIRPORT; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*CP_AIRPORT
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL8 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM PAIR_DB
BY INST_KEY
WHERE AIR.INCL8 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndCPAP1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. &PAIRDB.1.


-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'LIKE' ELSE 'NOT LIKE';

-SET &DB_FIELD = IF ('&VIEW.EVAL' EQ 'AVIW11' OR 'AVIW15' OR 'AVIW17' OR 'AVIW18' OR 'AVIW63' OR 
-  'AVIW74' OR 'AVIW99' OR 'AVI101' OR 'AVIEW7' OR 'AVIW19' OR 'AVI105' OR 'AVI106' OR 'AVIW34' OR 'AVIW37' OR 'AVIW20') OR
-  (&RPTSTREAM EQ 'TCNONPTM') OR (&RPTSTREAM EQ 'TCNONDIR' OR 'TCNOND1' OR 'TCNONPAR' OR 'TCDEMYTD') OR
-  ('&SETFILE.EVAL' EQ 'ABACARBN' OR '&SETFILE.EVAL' EQ 'ABTCARBN') THEN 'CITYPAIR.EMBRTE'
-  ELSE IF &PAIRDB EQ 'S' THEN 'ADIR_ALL' ELSE 'ADIR_STP';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndCPAP1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.CP_AIRPORT 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.CP_AIRPORT NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndCPAP2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &CP_AIRPORT.6.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &CP_AIRPORT;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndCPAP2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 26 Convert AIR TRIP_CODE
-* air.INCL9 --> airflds.TRIP_CODE; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*Air TRIP_PURPOSE
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL9 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM PAIR_DB
BY INST_KEY
WHERE AIR.INCL9 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndAirTrip1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. &PAIRDB.1.

-SET &OPERATOR = IF &INCLUDE EQ 1  THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'TRIP_PURPOSE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndAirTrip1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.TRIP_CODE 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.TRIP_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndAirTrip2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &TRIP_PURPOSE.2.


-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &TRIP_PURPOSE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndAirTrip2
-CLOSE SAVEVAL


-**************************************************************************************************
-* PART ONE - STEP: 27 Convert AIR NHTL_CODE
-* air.INCL10 --> airflds.NHTL_CODE; get last 2 characters from NHR_KEY
-* 'WHERE EDIT(NHR_KEY,' | '''' | '$$$$$$$$99' | '''' | ') EQ '
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*Air TRIP_PURPOSE
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL10 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM PAIR_DB
BY INST_KEY
WHERE AIR.INCL10 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndAirNHTL1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. &PAIRDB.1.

-SET &OPERATOR = IF &INCLUDE EQ 1  THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'NHR_KEY';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndAirNHTL1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.NHTL_CODE 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.NHTL_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndAirNHTL2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &NHTL_CODE.2.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &NHTL_CODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndAirNHTL2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 28 Convert ORG_APC
-* air.INCL11 --> airflds.ORG_APC; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*ORG_APC
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL11 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM PAIR_DB
BY INST_KEY
WHERE AIR.INCL11 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndORGAP1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. &PAIRDB.1.

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'ORG_APC';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndORGAP1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.ORG_APC 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.ORG_APC NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndORGAP2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &ORG_APC.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &ORG_APC;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndORGAP2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 29 Convert DST_APC
-* air.INCL12 --> airflds.DST_APC; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*DST_APC
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL12 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM PAIR_DB
BY INST_KEY
WHERE AIR.INCL12 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndDSTAP1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. &PAIRDB.1.

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'DST_APC';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndDSTAP1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.DST_APC 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.DST_APC NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndDSTAP2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &DST_APC.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &DST_APC;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndDSTAP2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 30 Convert PNR_LOCATOR
-* air.INCL13 --> airflds.PNR_LOCATOR; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT AIR.INCL13 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM PAIR_DB
BY INST_KEY
WHERE AIR.INCL13 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndPRNL1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. &PAIRDB.1.

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'PNR_LOCATOR';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndPRNL1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT AIRFLDS.PNR_LOCATOR 
BY INST_KEY 
BY AIRFLDS.SEQ_NO
WHERE AIRFLDS.PNR_LOCATOR NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndPRNL2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &PNR_LOCATOR.6.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &PNR_LOCATOR;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndPRNL2
-CLOSE SAVEVAL

-**************************************************************************************************
-* The following section is to convert CAR FIELDS (PASSENGER FIELD is converted with AIR segment)
-* PART ONE - STEP: 31 Convert CAR VENDOR_CODE
-* car.INCL2 --> carflds.VENDOR_CODE; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

-************************************************
-*VENDOR_CODE
-************************************************
JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT CAR.INCL2 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE CAR.INCL2 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndVENDOR1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'VENDOR_CODE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndVENDOR1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT CARFLDS.VENDOR_CODE 
BY INST_KEY 
BY CARFLDS.SEQ_NO
WHERE CARFLDS.VENDOR_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndVENDOR2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &VENDOR_CODE.2.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &VENDOR_CODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndVENDOR2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 32 Convert CAR REFUSE_CODE
-* car.INCL3 --> carflds.REFUSE_CODE; 
-**************************************************************************************************

-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT CAR.INCL3 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE CAR.INCL3 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndCARREF1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'REFUSE_CODE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndCARREF1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT CARFLDS.REFUSE_CODE 
BY INST_KEY 
BY CARFLDS.SEQ_NO
WHERE CARFLDS.REFUSE_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndCARREF2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &REFUSE_CODE.2.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &REFUSE_CODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndCARREF2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 33 Convert CAR PICKUP_CITY
-* car.INCL4 --> carflds.PICKUP_CITY; 
-**************************************************************************************************

-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT CAR.INCL4 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE CAR.INCL4 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndPICKUP1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'PICKUP_CITY';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndPICKUP1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT CARFLDS.PICKUP_CITY 
BY INST_KEY 
BY CARFLDS.SEQ_NO
WHERE CARFLDS.PICKUP_CITY NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndPICKUP2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &PICKUP_CITY.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &PICKUP_CITY;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndPICKUP2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 34 Convert CAR DROPOFF_CITY
-* car.INCL5 --> carflds.DROPOFF_CITY; 
-**************************************************************************************************

-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT CAR.INCL5 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE CAR.INCL5 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;

-REPEAT EndDROPCITY1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'DROP_CITY';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndDROPCITY1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT CARFLDS.DROPOFF_CITY 
BY INST_KEY 
BY CARFLDS.SEQ_NO
WHERE CARFLDS.DROPOFF_CITY NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndDROPCITY2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &DROPOFF_CITY.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &DROPOFF_CITY;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndDROPCITY2
-CLOSE SAVEVAL

-**************************************************************************************************
-* PART ONE - STEP: 35 Convert CAR CAR_TYPE
-* car.INCL6 --> carflds.CAR_TYPE; 
-**************************************************************************************************

-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT CAR.INCL6 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE CAR.INCL6 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndCARTYPE;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-REPEAT EndCARTYPE1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'CAR_TYPE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndCARTYPE1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT CARFLDS.CAR_TYPE 
BY INST_KEY 
BY CARFLDS.SEQ_NO
WHERE CARFLDS.CAR_TYPE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndCARTYPE2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &CAR_TYPE.7.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &CAR_TYPE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndCARTYPE2
-CLOSE SAVEVAL

-EndCARTYPE
-**************************************************************************************************
-* PART ONE - STEP: 36 Convert CAR CTRIP_CODE
-* Car.CINCL7 --> carflds.CTRIP_CODE; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT CAR.CINCL7 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE CAR.CINCL7 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndCARTYPE;
-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndCARTRIP1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'TRIP_PURPOSE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndCARTRIP1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT CARFLDS.CTRIP_CODE 
BY INST_KEY 
BY CARFLDS.SEQ_NO
WHERE CARFLDS.CTRIP_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndCARTRIP2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &CTRIP_CODE.2.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &CTRIP_CODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndCARTRIP2
-CLOSE SAVEVAL
-EndCARTYPE

-**************************************************************************************************
-* PART ONE - STEP: 37  CAR - CONVERT INTL/DOM car rental
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT INTDOMC
BY INST_KEY
WHERE INTDOMC GT 1
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDINTDOMC;

-SET &COUNT = &LINES;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'PICK_CTY.INTL_DOM';

-REPEAT EndINTDOMC1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-*1: ALL; 2: DOMESTIC; 3: INTL
-SET &OPERATOR = IF &INCLUDE EQ 2 THEN 'EQ' 
- ELSE IF &INCLUDE EQ 3 THEN 'NE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-*ONE VALUE ONLY FOR RADION BUTTONS
-SET &PARM_VALUE_SEQ = 1;
-SET &DATA_VALUE = IF &INCLUDE EQ 2 THEN 'D' ELSE 'I';
-SET &DATA_DESC = IF &INCLUDE EQ 2 THEN 'Domestic Car Rental' ELSE 'Intl Car Rental';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndINTDOMC1
-CLOSE SAVEF

-ENDINTDOMC
-**************************************************************************************************
-* PART ONE - STEP: 38  CONVERT Car rental rate
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT RATEALL RATE1 RATE2 RATE3 RATE4 RATE5 RATE6
BY INST_KEY
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO EndCARRate;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &COUNT = &LINES;
-REPEAT EndCARRate2 &COUNT TIMES 
-READ SAVEF NOCLOSE &INSTKEY.7. &RATEALL.1. &RATE1.1. &RATE2.1. &RATE3.1. &RATE4.1. &RATE5.1. &RATE6.1.

-IF &RATEALL EQ 1 THEN GOTO EndCARRate;

-SET &DB_FIELD = 'AVGDR';
-SET &OPERATOR = 'EQ';
-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$


-SET &PARM_VALUE_SEQ = 0;
-SET &INDX2 = 1;
-* 7 class categories
-REPEAT EndCARRate 6 TIMES
-SET &RATE = &RATE.&INDX2;
-IF &RATE EQ 0 THEN GOTO IncCRateCnt;

-*'WHERE TOTAL AVGDR LT 20.00';

-SET &DATA_VALUE = IF &INDX2 EQ 1 THEN '00-19.99' 
-             ELSE IF &INDX2 EQ 2 THEN '20-34.99' 
-             ELSE IF &INDX2 EQ 3 THEN '35-49.99'
-             ELSE IF &INDX2 EQ 4 THEN '50-64.99'
-             ELSE IF &INDX2 EQ 5 THEN '65-79.99'
-             ELSE IF &INDX2 EQ 6 THEN '80+' ;

-SET &DATA_DESC =  IF &INDX2 EQ 1 THEN '$00 - $19.99' 
-             ELSE IF &INDX2 EQ 2 THEN '$20-$34.99' 
-             ELSE IF &INDX2 EQ 3 THEN '$35-$49.99'
-             ELSE IF &INDX2 EQ 4 THEN '$50-$64.99'
-             ELSE IF &INDX2 EQ 5 THEN '$65-$79.99'
-             ELSE IF &INDX2 EQ 6 THEN '$80+' ;

-SET &PARM_VALUE_SEQ = &PARM_VALUE_SEQ + 1;

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-IncCRateCnt
-SET &INDX2 = &INDX2 + 1;

-EndCARRate
-EndCARRate2
-CLOSE SAVEF

-THISSTEP
-**************************************************************************************************
-* Convert Hotel fields
-* PART ONE - STEP: 50 Convert CHAIN_CODE
-* HTL.INCL2 --> HTLflds.CHAIN_CODE; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT HTL.INCL2 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE HTL.INCL2 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndHTLCHN;
-SET &PARM_SEQ = &PARM_SEQ + 1;

-REPEAT EndHTLCHN1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'HTL_MAIN.CHAIN_CODE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndHTLCHN1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT HTLFLDS.CHAIN_CODE 
BY INST_KEY 
BY HTLFLDS.SEQ_NO
WHERE HTLFLDS.CHAIN_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndHTLCHN2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &CHAIN_CODE.2.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &CHAIN_CODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndHTLCHN2
-CLOSE SAVEVAL
-EndHTLCHN

-**************************************************************************************************
-* PART ONE - STEP: 51 Convert HTL_CITY
-* HTL.INCL3 --> HTLflds.HTL_CITY; 
-**************************************************************************************************

-SET &VALUE_FORMAT = 'T';
-SET &PARM_SEQ = &PARM_SEQ + 1;

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT HTL.INCL3 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE HTL.INCL3 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndHTLCITY;

-REPEAT EndHTLCITY1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';
-SET &DB_FIELD = 'HTL_MAIN.CITY_CODE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndHTLCITY1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT HTLFLDS.HTL_CITY 
BY INST_KEY 
BY HTLFLDS.SEQ_NO
WHERE HTLFLDS.HTL_CITY NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndHTLCITY2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &HTL_CITY.3.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &HTL_CITY;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndHTLCITY2
-CLOSE SAVEVAL
-EndHTLCITY

-**************************************************************************************************
-* PART ONE - STEP: 52 Convert REFUSE_CODE
-* HTL.INCL4 --> HTLflds.REFUSE_CODE; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT HTL.INCL4 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE HTL.INCL4 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndHTLRef;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'REFUSE_CODE';

-REPEAT EndHTLRef1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndHTLRef1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT HTLFLDS.REFUSE_CODE 
BY INST_KEY 
BY HTLFLDS.SEQ_NO
WHERE HTLFLDS.REFUSE_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndHTLRef2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &REFUSE_CODE.2.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &REFUSE_CODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndHTLRef2
-CLOSE SAVEVAL
-EndHTLRef

-**************************************************************************************************
-* PART ONE - STEP: 53 Convert HTRIP_CODE
-* HTL.HINCL5 --> HTLflds.HTRIP_CODE; 
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
JOIN INST_KEY IN RPT_FLDS TO INST_KEY IN RPT_INST AS J1
END

TABLE FILE RPT_FLDS
PRINT HTL.HINCL5 RPT_GROUP USE_PARM GLOBAL_PARM RPT_STREAM
BY INST_KEY
WHERE HTL.HINCL5 GT 0 
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-SET &COUNT = &LINES;
-IF &LINES EQ 0 THEN GOTO EndHTLTrip;

-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'TRIP_PURPOSE';

-REPEAT EndHTLTrip1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. &RPTGRP.3. &VIEW.8. &SETFILE.8. &RPTSTREAM.8. 

-SET &OPERATOR = IF &INCLUDE EQ 1 THEN 'EQ' ELSE 'NE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-EndHTLTrip1
-CLOSE SAVEF

TABLE FILE RPT_FLDS
PRINT HTLFLDS.HTRIP_CODE 
BY INST_KEY 
BY HTLFLDS.SEQ_NO
WHERE HTLFLDS.HTRIP_CODE NE ' '
&WHERE
ON TABLE SAVE AS SAVEVAL
END
-RUN

-SET &COUNT = &LINES;
-REPEAT EndHTLTrip2 &COUNT TIMES
-READ SAVEVAL NOCLOSE &INSTKEY.7. &SEQ_NO.2. &HTRIP_CODE.2.

-SET &PARM_VALUE_SEQ = &SEQ_NO;
-SET &DATA_VALUE = &HTRIP_CODE;
-SET &DATA_DESC = ' ';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndHTLTrip2
-CLOSE SAVEVAL
-EndHTLTrip
-**************************************************************************************************
-* PART ONE - STEP: 54  HOTEL - CONVERT INTL/DOM
-**************************************************************************************************
-SET &VALUE_FORMAT = 'T';

JOIN CLEAR *
TABLE FILE RPT_FLDS
PRINT INTDOMH
BY INST_KEY
WHERE INTDOMH GT 1
&WHERE
ON TABLE SAVE AS SAVEF
END
-RUN

-IF &LINES EQ 0 THEN GOTO ENDINTDOMH;

-SET &COUNT = &LINES;
-SET &PARM_SEQ = &PARM_SEQ + 1;
-SET &DB_FIELD = 'CITY.INTL_DOM';

-REPEAT EndINTDOMH1 &COUNT TIMES
-READ SAVEF NOCLOSE &INSTKEY.7. &INCLUDE.1. 

-*1: ALL; 2: DOMESTIC; 3: INTL
-SET &OPERATOR = IF &INCLUDE EQ 2 THEN 'EQ' ELSE IF &INCLUDE EQ 3 THEN 'NE';

-WRITE PARMFILE NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,DB_FIELD=&DB_FIELD, OPERATOR=&OPERATOR, VALUE_FORMAT=&VALUE_FORMAT,$

-*ONE VALUE ONLY FOR RADION BUTTONS
-SET &PARM_VALUE_SEQ = 1;
-SET &DATA_VALUE = IF &INCLUDE EQ 2 THEN 'D' ELSE 'I';
-SET &DATA_DESC = IF &INCLUDE EQ 2 THEN 'Domestic Hotel' ELSE 'Intl Hotel';

-WRITE PARMVALS NOCLOSE INST_KEY=&INSTKEY,PARM_SEQ=&PARM_SEQ,PARM_VALUE_SEQ=&PARM_VALUE_SEQ,DATA_VALUE=&DATA_VALUE,DATA_VALUE_DESCRIPTION=&DATA_DESC,$

-EndINTDOMH1
-CLOSE SAVEF
-ENDINTDOMH


-EXIT
-QUIT


-**************************************************************************************************
-* Update RPT_FLDS_PARM and RPT_FLDS_PARM_VALUES
-**************************************************************************************************

-*Update RPT_FLDS_PARM 
MODIFY FILE RPT_FLDS_PARM
FREEFORM INST_KEY PARM_SEQ DB_FIELD OPERATOR VALUE_FORMAT
MATCH * KEYS IN RPT_FLDS_PARM 
  ON NOMATCH INCLUDE
  ON MATCH REJECT
DATA ON PARMFILE
END
-RUN

-*Update RPT_FLDS_PARM_VALUES 
MODIFY FILE RPT_FLDS_PARM_VALUES
FREEFORM INST_KEY PARM_SEQ PARM_VALUE_SEQ DATA_VALUE DATA_VALUE_DESCRIPTION
MATCH * KEYS IN RPT_FLDS_PARM_VALUES 
  ON NOMATCH INCLUDE
  ON MATCH REJECT
DATA ON PARMVALS
END
-RUN


-**************************************************************************************************
-* The end of PART ONE - Update RPT_FLDS_PARM and RPT_FLDS_PARM_VALUES
-**************************************************************************************************
