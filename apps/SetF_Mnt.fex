MAINTAIN FILES ROLLSET AND STRVIW AND ROLLUP                                    
                                                                                
COMPUTE Cnt1/I4 = ;                                                             
COMPUTE Cnt2/I4 = ;                                                             
COMPUTE Cnt3/I4 = ;                                                             
COMPUTE ErrMsg / a30 ;                                                          
COMPUTE GrpType.Type/A3 = ;                                                     
                                                                                
-*INFER CONTROL.CONTROL_ID INTO Ctl_Stack                                       
INFER ROLLSET.ROLLUP_CODE INTO RS_Stack                                         
INFER ROLLSET.ROLLUP_CODE INTO DEL_STACK                                        
INFER ROLLSET.ROLLUP_CODE INTO ADD_STACK                                        
INFER STRVIW.STR_GROUP INTO S1_Stack                                            
INFER STRVIW.STR_GROUP INTO ST_Stack                                            
INFER STRVIW.STR_GROUP INTO S2_Stack                                            
INFER ROLLUP INTO R_Stack                                                       
INFER ROLLUP INTO Roll_Stack                                                    
                                                                                
                                                                                
COMPUTE GrpType(1).Type = 'AIR';                                                
COMPUTE GrpType(2).Type = 'CAR';                                                
COMPUTE GrpType(3).Type = 'HTL';                                                
COMPUTE GrpType(4).Type = 'OTH';                                                
                                                                                
REPOSITION ROLLUP.ROLLUP_CODE                                                   
FOR ALL NEXT ROLLUP.ROLLUP_CODE INTO ROLL_STACK                                 
 WHERE UPD_ENABLE EQ 'X'                                                        
                                                                                
PERFORM VIEW_SETFMAIN                                                           
WINFORM SHOW SETFMAIN                                                           
GOTO END RESET                                                                  
                                                                                
CASE View_SetFMain                                                              
-*REPOSITION CONTROL.CONTROL_ID                                                 
-*STACK CLEAR Ctl_Stack                                                         
-*NEXT CONTROL.CONTROL_ID INTO Ctl_Stack                                        
                                                                                
-*REPOSITION ROLLUP.ROLLUP_CODE                                                 
-*STACK CLEAR R_Stack                                                           
-*NEXT ROLLUP.ROLLUP_CODE INTO R_Stack WHERE                                    
-*  ROLLUP.ROLLUP_CODE EQ Ctl_Stack(1).ROLLUP_CODE                              
                                                                                
REPOSITION ROLLUP.ROLLUP_CODE                                                   
STACK CLEAR R_Stack                                                             
NEXT ROLLUP.ROLLUP_CODE INTO R_Stack WHERE                                      
  ROLLUP.ROLLUP_CODE EQ Roll_Stack(Roll_Stack.FocIndex).ROLLUP_CODE             
                                                                                
PERFORM Pop_SetF                                                                
PERFORM Pop_Init                                                                
-*WINFORM SHOW SetFMain                                                         
EndCase                                                                         
                                                                                
CASE Pop_SetF                                                                   
  REPOSITION ROLLSET.ROLLUP_CODE                                                
  STACK CLEAR RS_Stack                                                          
  FOR ALL NEXT ROLLSET.ROLLUP_CODE INTO RS_Stack WHERE                          
    ROLLSET.ROLLUP_CODE EQ ROLL_STACK(ROLL_STACK.FOCINDEX).ROLLUP_CODE          
-*    ROLLSET.ROLLUP_CODE EQ Ctl_Stack(1).ROLLUP_CODE                           
  STACK SORT RS_Stack BY GLOBAL_PARM                                            
  COMPUTE RS_Stack.FocIndex = 1;                                                
endcase                                                                         
                                                                                
CASE Pop_Init                                                                   
  PERFORM Pop_Group                                                             
  PERFORM Pop_Stream                                                            
  PERFORM Pop_View                                                              
endcase                                                                         
                                                                                
CASE Select_Group                                                               
  COMPUTE RS_Stack(RS_Stack.FocIndex).RPT_GROUP =                               
    GrpType(GrpType.FocIndex).Type;                                             
  PERFORM Pop_Stream                                                            
  PERFORM Pop_View                                                              
endcase                                                                         
                                                                                
CASE Select_Stream                                                              
  COMPUTE RS_Stack(RS_Stack.FocIndex).RPT_STREAM =                              
    S1_Stack(S1_Stack.FocIndex).STR_STREAM;                                     
  PERFORM Pop_View                                                              
endcase                                                                         
                                                                                
CASE Select_View                                                                
  COMPUTE RS_Stack(RS_Stack.FocIndex).USE_PARM =                                
    S2_Stack(S2_Stack.FocIndex).STR_VIEW;                                       
endcase                                                                         
                                                                                
CASE Pop_Group                                                                  
  IF RS_Stack(RS_Stack.FocIndex).RPT_GROUP EQ ' ' THEN                          
  BEGIN                                                                         
    COMPUTE GrpType.FocIndex = 1;                                               
    PERFORM Select_Group                                                        
  ENDBEGIN                                                                      
  IF RS_Stack(RS_Stack.FocIndex).RPT_GROUP EQ 'AIR' THEN                        
    COMPUTE GrpType.FocIndex = 1;                                               
  IF RS_Stack(RS_Stack.FocIndex).RPT_GROUP EQ 'CAR' THEN                        
    COMPUTE GrpType.FocIndex = 2;                                               
  IF RS_Stack(RS_Stack.FocIndex).RPT_GROUP EQ 'HTL' THEN                        
    COMPUTE GrpType.FocIndex = 3;                                               
  IF RS_Stack(RS_Stack.FocIndex).RPT_GROUP EQ 'OTH' THEN                        
    COMPUTE GrpType.FocIndex = 4;                                               
endcase                                                                         
                                                                                
CASE Pop_Stream                                                                 
  REPOSITION STRVIW.STR_GROUP                                                   
  STACK CLEAR S1_Stack                                                          
  IF RS_Stack(RS_Stack.FocIndex).RPT_STREAM EQ ' ' THEN                         
  BEGIN                                                                         
    FOR ALL NEXT STRVIW.STR_GROUP INTO S1_Stack WHERE                           
      STRVIW.STR_GROUP EQ GrpType(GrpType.FocIndex).Type                        
  ENDBEGIN                                                                      
  ELSE BEGIN                                                                    
    FOR ALL NEXT STRVIW.STR_GROUP INTO S1_Stack WHERE                           
      STRVIW.STR_GROUP EQ RS_Stack(RS_Stack.FocIndex).RPT_GROUP                 
  ENDBEGIN                                                                      
  STACK CLEAR ST_Stack                                                          
  STACK COPY FROM S1_Stack INTO ST_Stack                                        
  STACK CLEAR S1_Stack                                                          
  COMPUTE Cnt1 = 1;                                                             
  COMPUTE Cnt2 = 1;                                                             
  REPEAT WHILE Cnt1 LE ST_Stack.FocCount                                        
    COMPUTE Cnt3 = 1;                                                           
    REPEAT WHILE Cnt3 LE S1_Stack.FocCount                                      
      IF S1_Stack(Cnt3).STR_STREAM EQ ST_Stack(Cnt1).STR_STREAM THEN            
        GOTO EXITREPEAT                                                         
      COMPUTE Cnt3 = Cnt3 + 1;                                                  
    ENDREPEAT                                                                   
    IF Cnt3 GT S1_Stack.FocCount THEN                                           
    BEGIN                                                                       
      COPY FROM ST_Stack(Cnt1) INTO S1_Stack(Cnt2)                              
      COMPUTE Cnt2 = Cnt2 + 1;                                                  
    ENDBEGIN                                                                    
    COMPUTE Cnt1 = Cnt1 + 1;                                                    
  ENDREPEAT                                                                     
  IF RS_Stack(RS_Stack.FocIndex).RPT_STREAM EQ ' ' THEN                         
  BEGIN                                                                         
    STACK SORT S1_Stack BY STR_STREAM                                           
    COMPUTE S1_Stack.FocIndex = 1;                                              
    PERFORM Select_Stream                                                       
  ENDBEGIN                                                                      
  ELSE BEGIN                                                                    
    STACK SORT S1_Stack BY STR_STREAM                                           
    COMPUTE Cnt1 = 1;                                                           
    REPEAT WHILE Cnt1 LE S1_Stack.FocCount                                      
      IF S1_Stack(Cnt1).STR_STREAM EQ                                           
        RS_Stack(RS_Stack.FocIndex).RPT_STREAM THEN                             
      BEGIN                                                                     
          COMPUTE S1_Stack.FocIndex = Cnt1;                                     
          GOTO EXITREPEAT                                                       
      ENDBEGIN                                                                  
      COMPUTE Cnt1 = Cnt1 + 1;                                                  
    ENDREPEAT                                                                   
  ENDBEGIN                                                                      
endcase                                                                         
                                                                                
CASE Pop_View                                                                   
  REPOSITION STRVIW.STR_GROUP                                                   
  STACK CLEAR S2_Stack                                                          
  IF RS_Stack(RS_Stack.FocIndex).USE_PARM EQ ' ' THEN                           
  BEGIN                                                                         
    FOR ALL NEXT STRVIW.STR_GROUP INTO S2_Stack WHERE                           
      STRVIW.STR_STREAM EQ S1_Stack(S1_Stack.FocIndex).STR_STREAM               
    STACK SORT S2_Stack BY STR_VIEW                                             
    COMPUTE S2_Stack.FocIndex = 1;                                              
    PERFORM Select_View                                                         
  ENDBEGIN                                                                      
  ELSE BEGIN                                                                    
    FOR ALL NEXT STRVIW.STR_GROUP INTO S2_Stack WHERE                           
      STRVIW.STR_STREAM EQ RS_Stack(RS_Stack.FocIndex).RPT_STREAM               
    STACK SORT S2_Stack BY STR_VIEW                                             
    COMPUTE Cnt1 = 1;                                                           
    REPEAT WHILE Cnt1 LE S2_Stack.FocCount                                      
      IF S2_Stack(Cnt1).STR_VIEW EQ                                             
        RS_Stack(RS_Stack.FocIndex).USE_PARM THEN                               
      BEGIN                                                                     
          COMPUTE S2_Stack.FocIndex = Cnt1;                                     
          GOTO EXITREPEAT                                                       
      ENDBEGIN                                                                  
      COMPUTE Cnt1 = Cnt1 + 1;                                                  
    ENDREPEAT                                                                   
  ENDBEGIN                                                                      
endcase                                                                         
                                                                                
CASE Upd_SetLine                                                                
  	  TYPE ON LOGFILE "UPD <4 <RS_STACK(RS_STACK.FOCINDEX).ROLLUP_CODE" |        
      "<12 <RS_STACK(RS_STACK.FOCINDEX).GLOBAL_PARM" |                          
		"<20 <RS_STACK(RS_STACK.FOCINDEX).RPT_GROUP" |                                
		"<23 <RS_STACK(RS_STACK.FOCINDEX).RPT_STREAM" |                               
	   "<31 <RS_STACK(RS_STACK.FOCINDEX).USE_PARM" |                               
		"<39 X";                                                                      
  FOR ALL UPDATE ROLLSET.RPT_GROUP ROLLSET.RPT_STREAM ROLLSET.USE_PARM          
    FROM RS_Stack                                                               
  COMMIT                                                                        
endcase                                                                         
                                                                                
CASE DEL_SETFILE                                                                
  COPY FROM RS_STACK(RS_STACK.FOCINDEX) INTO DEL_STACK;                         
  TYPE ON LOGFILE "DEL <4 <DEL_STACK(1).ROLLUP_CODE" |                          
    "<12 <DEL_STACK(1).GLOBAL_PARM <39 X" ;                                     
  DELETE ROLLSET FROM DEL_STACK;                                                
  PERFORM Pop_SetF                                                              
ENDCASE                                                                         
                                                                                
CASE ADD_SETFILE                                                                
  REPOSITION ROLLSET.ROLLUP_CODE                                                
  MATCH ROLLSET FROM ADD_STACK(1);                                              
  IF FOCFETCH NE 0                                                              
   BEGIN                                                                        
	  TYPE ON LOGFILE "ADD <4 <ADD_STACK(1).ROLLUP_CODE" |                         
      "<12 <ADD_STACK(1).GLOBAL_PARM <39 X";                                    
     INCLUDE ROLLSET FROM ADD_STACK                                             
     PERFORM POP_SETF                                                           
	  WINFORM CLOSE ADD_SF;                                                        
	ENDBEGIN                                                                       
  ELSE                                                                          
   BEGIN                                                                        
     COMPUTE ERRMSG = 'SetFile already exists!';                                
     WINFORM SET ADD_SF.ERRMSGBOX.VISIBLE TO YES                                
	ENDBEGIN                                                                       
ENDCASE                                                                         
                                                                                
CASE SHOW_ADD                                                                   
STACK CLEAR ADD_STACK;                                                          
COMPUTE ADD_STACK(1).ROLLUP_CODE = ROLL_STACK(ROLL_STACK.FOCINDEX)              
.ROLLUP_CODE;                                                                   
COMPUTE ERRMSG = '';                                                            
WINFORM SET ADD_SF.ERRMSGBOX.VISIBLE TO NO                                      
Winform show Add_SF;                                                            
ENDCASE                                                                         
                                                                                
                                                                                
case Winform_SetFMain                                                           
  Winform show SetFMain                                                         
endcase                                                                         
                                                                                
                                                                                
                                                                                
                                                                                
END                                                                             
