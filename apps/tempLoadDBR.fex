-*tempLoadDBR.fex
-INCLUDE SETECHO
-*-TYPE &FOCFEXNAME Start
-***********************************************************
-* This is the driver program to start to load Dashboard
-* reporting databases.
-* file name: LoadDBR.fex
-***********************************************************
 
SET ASNAME = ON
SET ALL=PASS
 
-SET &&DRV = 'D:\';
-************************************************************
-* log load information
-************************************************************
-SET &DBLOG = '&&WEBSRV.EVAL' || '\TNT\DBR\DBRLOG.TXT';
 
 
-DOS DEL &DBLOG.EVAL
FILEDEF LOADLOG DISK &DBLOG.EVAL (APPEND
-RUN
 
-************************************************************
-*FROMMY is the starting M/Y - 2 YEARS DATA
-************************************************************
-SET &CURRYYM = EDIT(&YYMD,'999999');
-SET &FROMMY = AYM(&CURRYYM, -24, 'I6');
-SET &&FROMMY = EDIT(&FROMMY, '$$$$99') | '/' |  EDIT(&FROMMY, '9999');
-*-TYPE &&FROMMY
 
-************************************************************
-*set up Path and data source file and master files
-************************************************************
-SET &APATH    = '&&WEBSRV.EVAL' | '\TNT\DBR\DBRDATA\';
-SET &DATASRC  = '&APATH.EVAL' || 'dummy.foc';
-SET &AMASRC   = '&APATH.EVAL' || 'EAMASTER.MAS';
-SET &CMASRC   = '&APATH.EVAL' || 'ECMASTER.MAS';
-SET &LMASRC   = '&APATH.EVAL' || 'ELMASTER.MAS';
-SET &HMASRC   = '&APATH.EVAL' || 'EHMASTER.MAS';
-SET &HRMASRC  = '&APATH.EVAL' || 'EOMASTER.MAS';
-SET &EDMASRC  = '&APATH.EVAL' || 'EDMASTER.MAS';
 
 
-SkipForNow
TABLE FILE ROLLUP
PRINT COMP QTR_ENABLE LEV1 LEV2 LEV3 LEV4 LEV5 LEV6 LEV7 SECURITY
BY ROLLUP_CODE
-*IF ROLLUP_CODE EQ (XROLL)
-*WHERE ROLLUP_CODE NE 'OTHER-R';
WHERE ROLLUP_CODE EQ '&&ROLLUP.EVAL'
ON TABLE SAVE AS ROLLDATA
END
-RUN
 
-IF &LINES EQ 0 THEN GOTO NoMoreToRun;
 
-SET &CNT = &LINES;
  
-*Phase I: generate MFDs
-PhaseI
-REPEAT TOEND &CNT TIMES
-READ ROLLDATA NOCLOSE &&ROLLUP.8. &&COMP.6. &&QTRROLL.1. &LEV1.20. &LEV2.20. &LEV3.20. &LEV4.20. &LEV5.20. &LEV6.20. &LEV7.20. &&SECURITY.1.


-*backup the database to be updated to d:\lusheng\backups\data\
-SET &HTL_DB = 'EH' | '&&COMP.EVAL' ;
-SET &BACKUPPATH = 'd:\lusheng\backups\dbrdata\';
-SET &SRC = 'D:\TNT\DBR\DBRDATA\' | '&HTL_DB.EVAL' || '.FOC';
-SET &DST = '&BACKUPPATH.EVAL' | '&HTL_DB.EVAL' || '.FOC';
-DOS COPY &SRC &DST
-RUN

-************************************************************
-*FROMMY is the starting M/Y - 2 YEARS DATA
-* HERE TO RESET THE &&FROMMY BASED ON END_DATE IN EDMASTER
-************************************************************

-SET &EDDATA = 'ED' | '&&COMP.EVAL' || '';
TABLE FILE &EDDATA
PRINT END_DATE
ON TABLE SAVE
END
-RUN
-READ SAVE &ENDDATEMDYY.8.
-TYPE ENDDATEMDYY: &ENDDATEMDYY

-SET &CURRYYM = EDIT(&ENDDATEMDYY, '$$$$9999') || EDIT(&ENDDATEMDYY, '99$$$$$$');
-*-SET &CURRYYM = EDIT(&YYMD,'999999');
-SET &FROMMY = AYM(&CURRYYM, -24, 'I6');
-SET &&FROMMY = EDIT(&FROMMY, '$$$$99') | '/' |  EDIT(&FROMMY, '9999');


-SET &&SECLEVELS = 0;
 
-*CHECK LEVEL SECURITY
-IF &&SECURITY EQ 'H' THEN GOTO NOLevelSec;
 
-SET &LEV1 = UPCASE(20,&LEV1,'A20');
-SET &LEV2 = UPCASE(20,&LEV2,'A20');
-SET &LEV3 = UPCASE(20,&LEV3,'A20');
-SET &LEV4 = UPCASE(20,&LEV4,'A20');
-SET &LEV5 = UPCASE(20,&LEV5,'A20');
-SET &LEV6 = UPCASE(20,&LEV6,'A20');
-SET &LEV7 = UPCASE(20,&LEV7,'A20');
 
-SET &&SECLEVELS = IF '&LEV1.EVAL' EQ 'NOT USED' THEN &&SECLEVELS ELSE &&SECLEVELS + 1;
-SET &&SECLEVELS = IF '&LEV2.EVAL' EQ 'NOT USED' THEN &&SECLEVELS ELSE &&SECLEVELS + 1;
-SET &&SECLEVELS = IF '&LEV3.EVAL' EQ 'NOT USED' THEN &&SECLEVELS ELSE &&SECLEVELS + 1;
-SET &&SECLEVELS = IF '&LEV4.EVAL' EQ 'NOT USED' THEN &&SECLEVELS ELSE &&SECLEVELS + 1;
-SET &&SECLEVELS = IF '&LEV5.EVAL' EQ 'NOT USED' THEN &&SECLEVELS ELSE &&SECLEVELS + 1;
-SET &&SECLEVELS = IF '&LEV6.EVAL' EQ 'NOT USED' THEN &&SECLEVELS ELSE &&SECLEVELS + 1;
-SET &&SECLEVELS = IF '&LEV7.EVAL' EQ 'NOT USED' THEN &&SECLEVELS ELSE &&SECLEVELS + 1;
-*-TYPE &&ROLLUP &&SECLEVELS
 
-RUN
-NOLevelSec
 
-*specify destination master files
-SET &AIRMSTR  = '&APATH.EVAL' || 'EA' | '&&COMP.EVAL' || '.MAS';
-SET &CARMSTR  = '&APATH.EVAL' || 'EC' | '&&COMP.EVAL' || '.MAS';
-SET &LIMOMSTR = '&APATH.EVAL' || 'EL' | '&&COMP.EVAL' || '.MAS';
-SET &HTLMSTR  = '&APATH.EVAL' || 'EH' | '&&COMP.EVAL' || '.MAS';
-SET &HRTLMSTR = '&APATH.EVAL' || 'EO' | '&&COMP.EVAL' || '.MAS';
-SET &DATEMSTR = '&APATH.EVAL' || 'ED' | '&&COMP.EVAL' || '.MAS';
 
-*copy masters
-*COPY &AMASRC &AIRMSTR > NUL
-*COPY &CMASRC &CARMSTR > NUL
-*COPY &LMASRC &LIMOMSTR > NUL
-*COPY &HMASRC &HTLMSTR > NUL
 
-*COPY &HRMASRC &HRTLMSTR > NUL
-*COPY &EDMASRC &DATEMSTR > NUL
-RUN
-*Generate MFD dynamically based on hierarchy level
-*-INCLUDE DBRWRITEMFD
-*-RUN
 
-TOEND
-CLOSE ROLLDATA
 
-*phase II: load data
-PhaseII
-REPEAT TOEND2 &CNT TIMES
-READ ROLLDATA NOCLOSE &&ROLLUP.8. &&COMP.6. &&QTRROLL.1. &LEV1.20. &LEV2.20. &LEV3.20. &LEV4.20. &LEV5.20. &LEV6.20. &LEV7.20. &&SECURITY.1.
-*specify destination data files
-SET &AIRDATA = '&APATH.EVAL' || 'EA' | '&&COMP.EVAL' || '.FOC';
-SET &CARDATA = '&APATH.EVAL' || 'EC' | '&&COMP.EVAL' || '.FOC';
-SET &LIMODATA ='&APATH.EVAL' || 'EL' | '&&COMP.EVAL' || '.FOC';
-SET &HTLDATA = '&APATH.EVAL' || 'EH' | '&&COMP.EVAL' || '.FOC';
-SET &HRDATA  = '&APATH.EVAL' || 'EO' | '&&COMP.EVAL' || '.FOC';
-SET &DTDATA  = '&APATH.EVAL' || 'ED' | '&&COMP.EVAL' || '.FOC';
 
-*initialize databases
-*COPY &DATASRC &AIRDATA > NUL
-*COPY &DATASRC &CARDATA > NUL
-*COPY &DATASRC &LIMODATA > NUL
COPY &DATASRC &HTLDATA > NUL
-*COPY &DATASRC &HRDATA > NUL
-*COPY &DATASRC &DTDATA > NUL
-RUN
 
-*GET hierarchy level
TABLE FILE HIERORG
PRINT LEVEL
WHERE ROLLUP_CODE EQ '&&ROLLUP.EVAL'
ON TABLE HOLD
END
-RUN
-SET &&LEVELS = &LINES;
-************************************************************
-*Start to extract and load
-************************************************************
 
-*EX DBRLoadAir
-*-RUN
 
-*EX DBRLoadCar
-*-RUN
 
-*EX DBRLoadLimo
-*-RUN
 
EX tempDBRLoadHtl
-RUN
 
-*EX DBRLoadHR
-*-RUN
 
-*EX DBRLoadDT
-*-RUN
 
-WRITE LOADLOG NOCLOSE &&ROLLUP
 
-TOEND2
-CLOSE ROLLDATA
-CLOSE LOADLOG
 
-NoMoreToRun
 
-*-TYPE &FOCFEXNAME End
-XXXEXIT
