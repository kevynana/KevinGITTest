-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-* ADDED TRANTYPE INCLUDE - JK 12/18/14 STORY ID S-06492
-*  01/22/2016  REJ  S-13209 Changes for Available Reports.  Adding code so that the
-*                           program will run in current Review and in Available Reports.
-*04/10/17 - DLV - D-01489 - Changed FLT_LEN define to use LE instead of LT
-*05/15/17 - DLV - S-33400 - Updated to use FLIGHT_DURATION from CITYPAIR instead of TKT_MAIN
  
 
 
-INCLUDE SETECHO
 
-DEFAULT &&MFLAG ='XXX'; 
-DEFAULT &&FIELD = 'XX';
-* -DEFAULT &&LVL_DSC = 'AROLL_DSC1';
-DEFAULT &&LSEL = 'XX';
-DEFAULT &&SETF = 'XX';
-DEFAULT &&FDATE = ' ';
-DEFAULT &&TDATE = ' ';
 
 
-SET &&FIELD = &ROW_LABEL;
-* -SET &&LVL_DSC =  '&LSEL.EVAL';
-SET &&IDLEVELBREAK = &PARM2;
 
-SET &&LSEL = &LSEL;
-* -SET &&LVL_DSC = &LSEL;
-SET &&FLAG = &PARM1;
-SET &&FDATE = &FDATE;
-SET &&TDATE = &TDATE;
-SET &FMM=EDIT(&&FDATE,'$$$$$99');
-SET &FMD=EDIT(&&FDATE,'$$$$$$$$99');
-SET &FMY=EDIT(&&FDATE,'9999');
-SET &TOM=EDIT(&&TDATE,'$$$$$99');
-SET &TOD=EDIT(&&TDATE,'$$$$$$$$99');
-SET &TOY=EDIT(&&TDATE,'9999');
 
 
 
-**********************************************************************
-* EX RPTRESET TO RESET PARAMS
-**********************************************************************
-SET &&ROLLUP = &ROLUP;
-* -SET &&UNAME = &UID;
-SET &&UNAME = &user;
-**** the following two lines added 10/31/2003 ****
-DEFAULT &FPARM = ' ';
-SET &&FIPARM = &FPARM;
-SET &&DRILLED_RUN = 'Y';
 
EX RPTRESET
-RUN
EX RESET
-RUN
 
-**********************************************************************
-* CHECK FOR PRESENCE OF ORIGINAL SET FILE
-*********************************************************************
-*****  USE VALUE PASSED AS &SETFNM TO DETERMINE FILE NAME
-IF &&DEPLOY EQ 'W' GOTO SETWEB;
-SET &&LOCPATH = '&&DATASRV.EVAL' || '\TT\ '|| &&ROLLUP || '\ '||&&UNAME.EVAL||'\';
-SET &FILEXIST = &&LOCPATH || &SETFNM || '.FTM';
-GOTO CHKFILE;
 
-SETWEB
-SET &&WEBPATH = '&&WEBSRV.EVAL' || '\TTWEB\ ' || &&ROLLUP || '\ '||&&UNAME.EVAL||'\';
-SET &FILEXIST = &&WEBPATH || &SETFNM || '.FTM';
 
-GOTO CONT;
 
-CHKFILE
STATE &FILEXIST
-RUN
-IF &RETCODE NE 0 GOTO NOFILE;
-GOTO CONT;
 
-*
-*
-**********************************************************************
-*
-**********************************************************************
-CONT
 
-SET &TMPDRIL = &&WEB_PATH || 'TEMPDRIL.FEX' ;
COPY &FILEXIST &TMPDRIL
-SET &&SETF='TEMPDRIL';
-RUN
 
EX SETDBLS SETFILE=&&SETF
-RUN
 
-* REJ added for er5
-IF &&FROMAVRP NE 'Y' GOTO :DRD1;
APP PREPENDPATH REVIEW_50_SHARED REVIEW_50_AVRP ttapps_sql
-RUN
-:DRD1
 
-INCLUDE GetForDrillDown
-RUN
 
-SET &&OUTLINE1 = 'ON TABLE SET ONLINE-FMT';
-SET &&OUTLINE2 = IF &&OUTLINE2 CONTAINS 'PDF' THEN 'PDF' ELSE
-          IF &&OUTLINE2 CONTAINS 'EXCEL' THEN 'EXCEL' ELSE
-          IF &&OUTLINE2 CONTAINS 'EXL2K' THEN 'EXL2K' ELSE 'PDF';
 
-SET &LCHK= ' ';
 
 
-****
-* &&FLAG WILL EQUAL ONE OF THE FOLLOWING:
-* 0, F, B, C, D, U
-****
-* &&FIELD WILL EQUAL ONE OF THE FIELD NAMES WITHIN THE REPORT
-****
-SET &&DEPARTD = 'XDPT_DT AS DPT,DTE';
-SET &&DEPARTT = 'DPT_TIME AS TIME';
-SET &&NTCOUNT = 'NET_TKT_CNT AS NET,TKT,CNT';
-SET &&TICOUNT = 'TTKT_ISS AS TKT,ISS';
-SET &&LSTSVGS = 'LOST_TOT AS LOST,SVGS';
-SET &&LSAVECHK = ' ';
-SET &&DISCOUNT = ' ';
-SET &&DICHK = ' ';
-SET &&LOWEST = ' ';
-SET &&ATP = 'COMPUTE ATP/D12.2CS = IF ((NET_TKT_CNT LT 1) AND (NET_TKT_CNT GT (-1))) THEN 0 ELSE FARE_AMT/NET_TKT_CNT; AS AVG,TKT,PRICE';
 
 
-IF &&FLAG EQ 'F' THEN GOTO FCLASS
-  ELSE IF &&FLAG EQ 'B' THEN GOTO BUSINESS
-  ELSE IF &&FLAG EQ 'P' THEN GOTO PECONOMY
-  ELSE IF &&FLAG EQ 'E' THEN GOTO ECONOMY
-  ELSE IF &&FLAG EQ 'U' THEN GOTO UP
-  ELSE IF &&FLAG EQ 'D' THEN GOTO DEFAULT ELSE GOTO ALL;
 
 
-FCLASS
-SET &&CHK='WHERE CAT EQ ''FIRST''';
-SET &&SUBHEAD = 'First';
-GOTO ENDCAT
 
-BUSINESS
-SET &&CHK='WHERE CAT EQ ''BUSINESS''';
-SET &&SUBHEAD = 'Business';
-GOTO ENDCAT
 
-PECONOMY
-SET &&CHK='WHERE CAT EQ ''PREMIUM ECONOMY''';
-SET &&SUBHEAD = 'Premium Economy';
-GOTO ENDCAT
 
-ECONOMY
-SET &&CHK='WHERE CAT EQ ''ECONOMY''';
-SET &&SUBHEAD = 'Economy';
-GOTO ENDCAT
 
-UP
-SET &&CHK='WHERE CAT EQ ''UPGRADE''';
-SET &&SUBHEAD = 'Upgrade';
-GOTO ENDCAT
 
-DEFAULT
-SET &&CHK='WHERE CAT EQ ''DEFAULT''';
-SET &&SUBHEAD = 'Default';
-GOTO ENDCAT
 
-ALL
-SET &&CHK=' ';
-SET &&SUBHEAD = ' ';
-GOTO ENDCAT
 
 
-ENDCAT
 
-IF &&SETF EQ 'MAFLTDUR' GOTO MANI;
-IF &&SETF EQ 'MXFLTDUR' GOTO METX;
 
-FIELDS
-IF &&FIELD EQ 'NOCAT' THEN GOTO NOCAT ELSE
-IF &&FIELD EQ '< 4 HOURS'  THEN GOTO UNDER4 ELSE
-IF &&FIELD EQ '4 - 6 HOURS' THEN GOTO 4TO6 ELSE
-IF &&FIELD EQ '6 - 8 HOURS' THEN GOTO 6TO8 ELSE GOTO OVER8;
 
 
 
 
-UNDER4
-SET &&RPT_TTL1 = '                     LESS THAN 4 HOURS DETAIL     ';
-SET &&FDCHK = 'WHERE FLT_LEN EQ ''< 4 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-SET &&ONLCHK = ' ';
-GOTO OUTSIDE
 
 
-4TO6
-SET &&RPT_TTL1 = '                     4 TO 6 HOURS DETAIL     ';
-SET &&FDCHK = 'WHERE FLT_LEN EQ ''4 - 6 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDE
 
 
-6TO8
-SET &&RPT_TTL1 = '                  6 TO 8 HOURS DETAIL   ';
-SET &&FDCHK = 'WHERE FLT_LEN EQ ''6 - 8 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDE
 
-OVER8
-SET &&RPT_TTL1 = '                  OVER 8 HOURS DETAIL  ';
-SET &&FDCHK = 'WHERE FLT_LEN EQ ''> 8 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDE
 
-NOCAT
-SET &&RPT_TTL1 = '                FLIGHT DURATION DETAIL  ';
-SET &&FDCHK = ' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDE
 
 
 
 
-OUTSIDE
 
 
TABLE FILE BRPTINST
BY HIGHEST BREAK_LEVELS
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE
END
-RUN
 
 
-READ SAVE &LEVEL.2.
 
-IF &&IDLEVELBREAK EQ ' ' GOTO LEV1;
 
-SET &LCHK = 'WHERE LEVEL_DESC EQ ''&&LSEL.EVAL''';
 
 
-GOTO ARNDLEV1;
 
-LEV1;
-SET &AROLL_DSC = IF &LEVEL GT '10' THEN 'AROLL_DSC' | &LEVEL ELSE 'AROLL_DSC' | EDIT(&LEVEL,'$9');
-SET &LCHK='WHERE ' | &AROLL_DSC.EVAL | ' CONTAINS ' | '''&&LSEL.EVAL''';
 
-ARNDLEV1;
 
 
 
FILEDEF AUSEINCL DISK &&AUSEPASS
-RUN
FILEDEF CUSEINCL DISK &&CUSEPASS
-RUN
FILEDEF HUSEINCL DISK &&HUSEPASS
-RUN
FILEDEF LUSEINCL DISK &&LUSEPASS
-RUN
 
-*****************************************************************
-*DATE           NAME                 DESCRIPTION OF CHANGE
-*9/13/00      IBISTL-KR              Drill Down functionality
-*****************************************************************
-SET &&RPTTYP = ' ';
 
EX TS_JAMS
-RUN
 
-IF &&FROMAVRP NE 'Y' GOTO :DCA1;
-SET &&RPTGRP_OVERRIDE='AIR';
EX CODEGEN
-RUN
-:DCA1
 
-INCLUDE SELCATQT
-RUN
 
EX &&CATQTRPR
-RUN
 
FILEDEF AUSEINCL CLEAR
-RUN
FILEDEF CUSEINCL CLEAR
-RUN
FILEDEF HUSEINCL CLEAR
-RUN
FILEDEF LUSEINCL CLEAR
-RUN
 
-SET &&SMD = 'S';
 
EX AIRUSE
-RUN
 
-SET &&RPTGRP = 'AIR';
EX UDIDGEN
-RUN
 
-TYPE Before Extract
SET ASNAMES = ON
-SET HOLDATTR = ON;
-RUN
 
 
 
-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';
 
-INCLUDE IDLEVROLLDEF
-RUN
 
DEFINE FILE SR_50
 
-* CLS_CAT/A1 = IF ADIR_ALL CONTAINS '*F' THEN 'F' ELSE
-*                  IF ADIR_ALL CONTAINS '*B' THEN 'B' ELSE
-*                  IF FARE_BASE_CODE CONTAINS 'UP' THEN 'U' ELSE
-*                  IF ADIR_ALL CONTAINS '*U' THEN 'U' ELSE
-*                  IF ADIR_ALL CONTAINS '*C' THEN 'C' ELSE 'D';
 
-* CLS_CAT/A1 = IF FARE_BASE_CODE CONTAINS 'UP' THEN 'U' ELSE
-*                IF ADIR_ALL CONTAINS '*F' THEN 'F' ELSE
-*                IF ADIR_ALL CONTAINS '*B' THEN 'B' ELSE
-*                IF ADIR_ALL CONTAINS '*C' THEN 'C' ELSE 'D';
 
 
CLS_CAT/A1 = IF TKT_CL_CAT EQ 'F' THEN 'F' ELSE
             IF TKT_CL_CAT EQ 'U' THEN 'U' ELSE
             IF TKT_CL_CAT EQ 'B' THEN 'B' ELSE
             IF TKT_CL_CAT EQ 'P' THEN 'P' ELSE
             IF TKT_CL_CAT EQ 'E' THEN 'E' ELSE 'D';
 
 
  LEVEL_DESC1/A80 = &&LDESC;
 
  FARE_PAID/D11.2CS   = SEG_AMT + SEG_TAX;
  NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN (-1) ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  REF_EXCH_CNT/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 0 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;
  TKT_PURCH/D8CS      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE 0;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TRP_LEN/D9CS        = TRIP_LENGTH * SEG_COUNT;
  VASAVINGS/D11.2CS   = SEG_DISCOUNT - FARE_PAID;
  XARR_DOW/W           = ARR_DATE;
  XARR_DT/MDYY         = ARR_DATE;
  XDPT_DT/MDYY         = DPT_DATE;
  XPSNGR_NM/A15        =
  EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
  XTRAN_DT/MDYY        = TRN_DATE;
-* ****DEFINES ON PREVIOUS DEFINES****
-*   CAT/A8 = DECODE CLS_CAT ('F' 'FIRST'     'C' 'COACH'
-*                             'D' 'DISCOUNT'  'B' 'BUSINESS'
-*                            'U' 'UP');
CAT/A15 = DECODE CLS_CAT ('F' 'FIRST'     'P' 'PREMIUM ECONOMY'
			        'D' 'DEFAULT'   'B' 'BUSINESS'
			        'E' 'ECONOMY'   'U'  'UPGRADE'
                                ' ' 'DEFAULT');
  BUSINESS/D12.2CS    = IF CAT EQ 'BUSINESS' THEN FARE_PAID ELSE 0;
  COACH/D12.2CS       = IF CAT EQ 'COACH' THEN FARE_PAID ELSE 0;
  DISCOUNT/D12.2CS    = IF CAT EQ 'DISCOUNT' THEN FARE_PAID ELSE 0;
  FIRST/D12.2CS       = IF CAT EQ 'FIRST' THEN FARE_PAID ELSE 0;
  UP/D12.2CS       = IF CAT EQ 'UP' THEN FARE_PAID ELSE 0;
  B_NTKT/D8CS      = IF CAT EQ 'BUSINESS' THEN NET_TKT_CNT ELSE 0;
  C_NTKT/D8CS      = IF CAT EQ 'COACH' THEN NET_TKT_CNT ELSE 0;
  F_NTKT/D8CS      = IF CAT EQ 'FIRST' THEN NET_TKT_CNT ELSE 0;
  U_NTKT/D8CS      = IF CAT EQ 'UP' THEN NET_TKT_CNT ELSE 0;
  D_NTKT/D8CS      = IF CAT EQ 'DISCOUNT' THEN NET_TKT_CNT ELSE 0;
 
  DISSAVINGS/D11.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
FLIGHT_HOURS/D12.2 = FLIGHT_DURATION/60;
FLIGHT_RANGE/A25 = IF FLIGHT_HOURS LT 4 THEN '0 - less than 4 Hours' 
    ELSE IF FLIGHT_HOURS LT 6  THEN '4 - less than 6 hours' 
    ELSE IF FLIGHT_HOURS LT 8  THEN '6 - less than 8 hours' 
ELSE IF FLIGHT_HOURS LT 10 THEN '8 - less than 10 Hours' ELSE 'Ten Hours Plus';
 

-INCLUDE TRANTYPE
-INCLUDE IDLEVDEFINE
 
END
-RUN
 
 
 
TABLEF FILE SR_50
-* Report column elements
  PRINT ARR_TIME
        AIR_MAIN.INTL_DOM
        AIRLINE
        CAT
        CITYPAIR.EMBARK      AS 'EMB_APT_CD'
        CITYPAIR.ROUTE       AS 'RTE_APT_CD'
        CLASS
        CLS_CAT
        CLIENT_NAME
        CONJ_REL
        CREDIT_CARD
        DISSAVINGS
        DOC_TYPE
        DPT_TIME
        DST_APC
        EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'
        EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'
        EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'
        FARE_BAS
        FARE_PAID
        FLIGHT
        FLIGHT_DURATION
        FLIGHT_DURATIONS
        FLIGHT_HOURS
        LEVEL_DESC
        NET_TKT_CNT
        REF_EXCH_CNT
        REFUSE_CODE
        RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'
        RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'
        RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'
        SAVINGS
        SEG_AMT
        SEG_DESIG
        SEG_DISCOUNT
        SEG_LOWEST
        SEG_NBR
        SEG_STANDARD
        SEG_TAX
        STAY
        TICKET_BRANCH
        TKT_NUM
        TKT_PURCH
        TKT_SORT
        TKT_TYPE
        TRN_DATE
        TRP_LEN
        VASAVINGS
        XARR_DT
        XDPT_DT
        XPSNGR_NM
        XTRAN_DT
 
-INCLUDE &AIRDATES
 
WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10
&LCHK

-INCLUDE RPTPARMS
ON TABLE HOLD AS RPTHLD1
END
-RUN


TABLE FILE RPTHLD1
SUM FLIGHT_DURATION FLIGHT_HOURS TKT_NUM FLIGHT_DURATION TKT_SORT SEG_NBR
BY XPSNGR_NM 
BY TKT_NUM
BY HIGHEST FLIGHT_DURATION 
BY TKT_SORT NOPRINT
BY SEG_NBR NOPRINT
ON TABLE HOLD AS AIRHOLD2
END
-RUN

TABLE FILE AIRHOLD2
SUM FST.FLIGHT_DURATION AS 'MAX_FLT'
BY XPSNGR_NM
BY TKT_NUM
ON TABLE HOLD AS AIRHOLD3
END
-RUN

MATCH FILE RPTHLD1
  PRINT ARR_TIME
        INTL_DOM
        AIRLINE
        CAT
        EMB_APT_CD
        RTE_APT_CD
        CLASS
        CLS_CAT
        CLIENT_NAME
        CONJ_REL
        CREDIT_CARD
        DISSAVINGS
        DOC_TYPE
        DPT_TIME
        DST_APC
        EMB_APT_NM
        EMB_CTY_NM
        EMB_CTY_CD
        FARE_BAS
        FARE_PAID
        FLIGHT
        FLIGHT_DURATION
        FLIGHT_DURATIONS
        FLIGHT_HOURS
        LEVEL_DESC
        NET_TKT_CNT
        REF_EXCH_CNT
        REFUSE_CODE
        RTE_APT_NM
        RTE_CTY_NM
        RTE_CTY_CD
        SAVINGS
        SEG_AMT
        SEG_DESIG
        SEG_DISCOUNT
        SEG_LOWEST
        SEG_NBR
        SEG_STANDARD
        SEG_TAX
        STAY
        TICKET_BRANCH
        TKT_NUM
        TKT_PURCH
        TKT_SORT
        TKT_TYPE
        TRN_DATE
        TRP_LEN
        VASAVINGS
        XARR_DT
        XDPT_DT
        XTRAN_DT
BY XPSNGR_NM
BY TKT_NUM
ON TABLE HOLD
RUN
FILE AIRHOLD3
SUM MAX_FLT
BY XPSNGR_NM
BY TKT_NUM
AFTER MATCH HOLD AS AIRHLD4 OLD-OR-NEW
END
-RUN


DEFINE FILE AIRHLD4
 FLT_LEN/A16 = IF MAX_FLT LE 239 THEN '< 4 HOURS' ELSE
               IF MAX_FLT GE 240 AND MAX_FLT LE 359 THEN '4 - 6 HOURS' ELSE
               IF MAX_FLT GE 360 AND MAX_FLT LE 479 THEN '6 - 8 HOURS' ELSE '> 8 HOURS';
 FLT_LENA/A16 = IF MAX_FLT LE 239 THEN '< 4 HOURS' ELSE
                IF MAX_FLT GE 240 AND MAX_FLT LE 359 THEN '4 - 6 HOURS' ELSE
                IF MAX_FLT GE 360 AND MAX_FLT LE 601 THEN '6 - 10 HOURS' ELSE '> 10 HOURS';     
 MXFLT_LEN/A16 = IF MAX_FLT LE 239 THEN '< 4 HOURS' ELSE
               IF MAX_FLT GE 240 AND MAX_FLT LE 359 THEN '4 - 6 HOURS' ELSE
               IF MAX_FLT GE 360 AND MAX_FLT LE 479 THEN '6 - 8 HOURS' ELSE 
               IF MAX_FLT GE 480 AND MAX_FLT LE 601 THEN '8 - 10 HOURS' ELSE '> 10 HOURS';               
 KEY/A1 = IF FLT_LEN EQ '< 4 HOURS' THEN 'A' ELSE
          IF FLT_LEN EQ '4 - 6 HOURS' THEN 'B' ELSE
          IF FLT_LEN EQ '6 - 8 HOURS' THEN 'C' ELSE 'D';
 KEYA/A1 = IF FLT_LENA EQ '< 4 HOURS' THEN 'A' ELSE
          IF FLT_LENA EQ '4 - 6 HOURS' THEN 'B' ELSE
          IF FLT_LENA EQ '6 - 10 HOURS' THEN 'C' ELSE 'D'; 
 MXKEY/A1 = IF MXFLT_LEN EQ '< 4 HOURS' THEN 'A' ELSE
          IF MXFLT_LEN EQ '4 - 6 HOURS' THEN 'B' ELSE
          IF MXFLT_LEN EQ '6 - 8 HOURS' THEN 'C' ELSE 
          IF MXFLT_LEN EQ '8 - 10 HOURS' THEN 'D' ELSE 'E';      
KEY1/A1 = IF CLS_CAT EQ 'F' THEN 'A' ELSE
          IF CLS_CAT EQ 'B' THEN 'B' ELSE
          IF CLS_CAT EQ 'U' THEN 'C' ELSE
          IF CLS_CAT EQ 'C' THEN 'D' ELSE 'E';   
END
TABLE FILE AIRHLD4
PRINT ARR_TIME
        INTL_DOM
        AIRLINE
        CAT
        EMB_APT_CD
        RTE_APT_CD
        CLASS
        CLS_CAT
        CLIENT_NAME
        CONJ_REL
        CREDIT_CARD
        DISSAVINGS
        DOC_TYPE
        DPT_TIME
        DST_APC
        EMB_APT_NM
        EMB_CTY_NM
        EMB_CTY_CD
        FARE_BAS
        FARE_PAID
        FLIGHT
        FLIGHT_DURATION
        FLIGHT_DURATIONS
        FLIGHT_HOURS
        FLT_LEN
        FLT_LENA
        LEVEL_DESC
        KEY
        KEYA
        KEY1
        MAX_FLT
        MXFLT_LEN
        MXKEY
        NET_TKT_CNT
        REF_EXCH_CNT
        REFUSE_CODE
        RTE_APT_NM
        RTE_CTY_NM
        RTE_CTY_CD
        SAVINGS
        SEG_AMT
        SEG_DESIG
        SEG_DISCOUNT
        SEG_LOWEST
        SEG_NBR
        SEG_STANDARD
        SEG_TAX
        STAY
        TICKET_BRANCH
        TKT_NUM
        TKT_PURCH
        TKT_SORT
        TKT_TYPE
        TRN_DATE
        TRP_LEN
        VASAVINGS
        XARR_DT
        XDPT_DT
        XTRAN_DT
BY XPSNGR_NM
BY TKT_NUM
&&CHK
&&FDCHK
ON TABLE HOLD AS RPTHLD
END
-RUN
 
-IF &RECORDS EQ 0 THEN GOTO NORECORDS;
-RUN
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF0;
-INCLUDE AVRP_SUBFOOT
-:AVSF0
 
TABLE FILE RPTHLD
SUM DISSAVINGS AS 'TDSV'
NET_TKT_CNT AS 'TTKT'
FARE_PAID AS 'TFARE'
SEG_AMT AS 'TSEG'
SEG_STANDARD AS 'TSTD'
SEG_LOWEST AS 'TLOW'
SEG_DISCOUNT AS 'TDIS'
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
ON TABLE HOLD AS AIRHOLD1
END
-RUN
 
TABLE FILE RPTHLD
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      FLT_LEN
      KEY
      KEY1
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      REFUSE_CODE
      RTE_APT_NM
      TKT_NUM
      TKT_TYPE
      DPT_TIME
      XDPT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD AS XTWO
END
-RUN
 
MATCH FILE XTWO
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      FLT_LEN
      KEY
      KEY1
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      REFUSE_CODE
      RTE_APT_NM
      TKT_NUM
      TKT_TYPE
      DPT_TIME
      XDPT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD
RUN
FILE AIRHOLD1
PRINT TDSV
      TFARE
      TTKT
      TSEG
      TSTD
      TLOW
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
AFTER MATCH HOLD AS AIRHOLD2 OLD-OR-NEW
END
-RUN
 
TABLE FILE AIRHOLD2
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      FLT_LEN
      KEY
      KEY1
      EMB_APT_NM
      LEVEL_DESC
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      XPSNGR_NM
      REFUSE_CODE
      RTE_APT_NM
      TDSV
      TFARE
      TSEG
      TSTD
      TLOW
      TKT_NUM
      TKT_TYPE
      TRN_DATE
      TTKT
      XDPT_DT
      DPT_TIME
      XTRAN_DT
BY TKT_SORT
BY SEG_NBR
ON TABLE HOLD AS AIRHOLD3
END
-RUN
 
 
 
 
JOIN ROLL WITH TKT_SORT IN AIRHOLD3 TO ROLLUP_CODE IN ROLLUP AS J1.
-RUN
 
 
DEFINE FILE AIRHOLD3
NET_TKT_CNT/D9S = IF (SEG_NBR EQ '01') THEN  TTKT ELSE 0;
PASNGR_NAME/A33 = IF TKT_NUM NE LAST TKT_NUM THEN XPSNGR_NM ELSE ' ';
REASON_CD/A2 =  IF TKT_NUM NE LAST TKT_NUM THEN REFUSE_CODE ELSE ' ';
TICKET_NMBR/A10 = IF TKT_NUM NE LAST TKT_NUM THEN TKT_NUM ELSE ' ';
XT_DTE/A8 = EDIT(TRN_DATE);
XTKT_SRT/A10 = EDIT(TKT_SORT,'9999999999$');
XTRAN_DTE/MDYY = IF TKT_NUM NE LAST TKT_NUM THEN XTRAN_DT ELSE 0;
 
-* ****DEFINES ON PREVIOUS DEFINES****
SRT_DT/A100 = TKT_SORT||XT_DTE||XPSNGR_NM;
-* SRT_DT/A100 = TKT_SORT||XT_DTE||LEVEL_DESC||XPSNGR_NM;
 
FARE_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TFARE ELSE 0;
 
SEG_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TSEG ELSE 0;
LOST_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TDSV ELSE 0;
LOW_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TLOW ELSE 0;
NOWTOD/A8 WITH TKT_SORT = HHMMSS (NOWTOD);
ROLL/A8='&&ROLLUP.EVAL';
LVL/A60='&&LVL_DSC.EVAL';
RPHONE/A15=EDIT(ROLL_PHONE,'9-999-999-9999');
RN/A60=TRIM('B', '&&RPT_TTL1.EVAL', 60, ' ', 1, 'A60');
TDATE1/A8MDYY='&MDYY';
TDATE2/A10=EDIT(TDATE1,'99/99/9999');
TIME1/A8=HHMMSS('A8');
TIME2/A8=EDIT(TIME1,'99$:99$:99');
RD/A10 = 'Run Date:';
RT/A10 = 'Run Time:';
XTS_FLAG/A1 = IF XTKT_SRT NE LAST XTKT_SRT THEN 'Y' ELSE 'N';
 
END
-RUN
 
-SET &&PAHDR = IF '&&OUTFMT.EVAL' EQ 'PDF' OR 'PPT' OR 'COM' THEN 'HEADAIR' ELSE 'HDREXLS';
-SET &&PASTYD = IF '&&OUTFMT.EVAL' NE 'PDF' OR 'PPT' OR 'COM' THEN 'DTEXL' ELSE &&DTSTY;
-RUN
 
 
TABLE FILE AIRHOLD3
HEADING
-INCLUDE &&PAHDR
"&&SUBHEAD"
-IF &&PAHDR EQ 'HDREXLS' GOTO NOSPC;
"</2"
-NOSPC;
-*
-*******************************************************************
-* Print statement with fields passed from the user profile database
-*******************************************************************
-*
PRINT
REASON_CD AS 'RSN,CDE'
&&DEPARTD
&&DEPARTT
EMB_APT_NM AS 'ORIGIN'
RTE_APT_NM AS 'DESTINATION'
AIRLINE AS 'CR'
CLASS AS 'CLS,OF,SVC'
FARE_BAS AS 'FARE,BASIS'
-*FLIGHT_DURATIONS AS 'FLT,DURATIONS'
&&FAREAMT
&&NTCOUNT
-* &&LOWEST
-*&&LSTSVGS
-*&&VSVAMT
-*&&ATP
 
-******************************************************************
-* By statements (one per field)
-******************************************************************
-*
BY LEVEL_DESC NOPRINT
BY KEY1 NOPRINT
BY FLT_LEN NOPRINT
BY CAT NOPRINT
BY XPSNGR_NM AS 'PASSENGER,NAME'
BY XTKT_SRT NOPRINT
BY TKT_SORT NOPRINT BY TRN_DATE NOPRINT
BY SEG_NBR NOPRINT
BY XDPT_DT NOPRINT BY DPT_TIME NOPRINT
BY TICKET_NMBR AS 'TKT,NUM'
BY TKT_TYPE AS 'TKT,TYPE'
-* BY XTS_FLAG NOPRINT
 
-*
-******************************************************************
-* On Table statements for code appropriate to On Table commands
-******************************************************************
-*
-* ON TABLE COLUMN-TOTAL;
-* ON XPSNGR_NM RECOMPUTE MULTILINES AS 'TOTAL FOR'
 
 
ON LEVEL_DESC RECOMPUTE AS 'Total For'
ON CAT RECOMPUTE MULTILINES AS 'Total For'
 
-* ON XTKT_SRT SKIP-LINE
ON TABLE SET PAGE-NUM OFF
 
 
FOOTING BOTTOM
-INCLUDE CRIGHT_FOOTER
"</4"
"<75 &M1.EVAL"
ON TABLE PAGE-BREAK AND SUBFOOT
" "
-INCLUDE SBFOOT
-**************************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT
-*                                  WITH AN INCLUDE
-**************************************************************************
ON TABLE SET STYLE *
-INCLUDE &&PASTYD
ENDSTYLE
 
 
-*
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN
-*
-TYPE After Report
-GOTO XXIT;
 
 
-MANI;
-FIELDS
-IF &&FIELD EQ 'NOCAT' THEN GOTO NOCATM ELSE
-IF &&FIELD EQ '< 4 HOURS'  THEN GOTO UNDER4M ELSE
-IF &&FIELD EQ '4 - 6 HOURS' THEN GOTO 4TO6M ELSE
-IF &&FIELD EQ '6 - 10 HOURS' THEN GOTO 6TO10 ELSE GOTO OVER10;
-
 
-GOTO OUTSIDEM
 
-UNDER4M
-SET &&RPT_TTL1 = '                     LESS THAN 4 HOURS DETAIL     ';
-SET &&FDCHK = 'WHERE FLT_LENA EQ ''< 4 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-SET &&ONLCHK = ' ';
-GOTO OUTSIDEM
 
 
-4TO6M
-SET &&RPT_TTL1 = '                     4 TO 6 HOURS DETAIL     ';
-SET &&FDCHK = 'WHERE FLT_LENA EQ ''4 - 6 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
 
-6TO10
-SET &&RPT_TTL1 = '                  6 TO 10 HOURS DETAIL   ';
-SET &&FDCHK = 'WHERE FLT_LENA EQ ''6 - 10 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
-OVER10
-SET &&RPT_TTL1 = '                  OVER 10 HOURS DETAIL  ';
-SET &&FDCHK = 'WHERE FLT_LENA EQ ''> 10 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
-NOCATM
-SET &&RPT_TTL1 = '                FLIGHT DURATION DETAIL  ';
-SET &&FDCHK = ' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
 
 
 
-OUTSIDEM
 
 
TABLE FILE BRPTINST
BY HIGHEST BREAK_LEVELS
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE
END
-RUN
 
 
-READ SAVE &LEVEL.2.
 
-IF &&IDLEVELBREAK EQ ' ' GOTO LEV1MA;
 
-SET &LCHK = 'WHERE LEVEL_DESC EQ ''&&LSEL.EVAL''';
 
-GOTO ARNDLEV1MA;
 
-LEV1MA;
-SET &AROLL_DSC = IF &LEVEL GT '10' THEN 'AROLL_DSC' | &LEVEL ELSE 'AROLL_DSC' | EDIT(&LEVEL,'$9');
-SET &LCHK='WHERE ' | &AROLL_DSC.EVAL | ' CONTAINS ' | '''&&LSEL.EVAL''';
 
-ARNDLEV1MA;
 
 
FILEDEF AUSEINCL DISK &&AUSEPASS
-RUN
FILEDEF CUSEINCL DISK &&CUSEPASS
-RUN
FILEDEF HUSEINCL DISK &&HUSEPASS
-RUN
FILEDEF LUSEINCL DISK &&LUSEPASS
-RUN
 
-*****************************************************************
-*DATE           NAME                 DESCRIPTION OF CHANGE
-*9/13/00      IBISTL-KR              Drill Down functionality
-*****************************************************************
-SET &&RPTTYP = ' ';
 
EX TS_JAMS
-RUN
 
-IF &&FROMAVRP NE 'Y' GOTO :DCA2;
-SET &&RPTGRP_OVERRIDE='AIR';
EX CODEGEN
-RUN
-:DCA2
 
-INCLUDE SELCATQT
-RUN
 
EX &&CATQTRPR
-RUN
 
FILEDEF AUSEINCL CLEAR
-RUN
FILEDEF CUSEINCL CLEAR
-RUN
FILEDEF HUSEINCL CLEAR
-RUN
FILEDEF LUSEINCL CLEAR
-RUN
 
-SET &&SMD = 'S';
 
EX AIRUSE
-RUN
 
-SET &&RPTGRP = 'AIR';
EX UDIDGEN
-RUN
 
-TYPE Before Extract
SET ASNAMES = ON
-SET HOLDATTR = ON;
-RUN
 
-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';
 
-INCLUDE IDLEVROLLDEF
-RUN
 
DEFINE FILE SR_50
  CLS_CAT/A1 = IF TKT_CL_CAT EQ 'F' THEN 'F' ELSE
               IF TKT_CL_CAT EQ 'U' THEN 'U' ELSE
               IF TKT_CL_CAT EQ 'B' THEN 'B' ELSE
               IF TKT_CL_CAT EQ 'P' THEN 'P' ELSE
               IF TKT_CL_CAT EQ 'E' THEN 'E' ELSE 'D';
 
 
  LEVEL_DESC1/A80 = &&LDESC;
 
  FARE_PAID/D11.2CS   = SEG_AMT + SEG_TAX;
  NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN (-1) ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  REF_EXCH_CNT/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 0 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;
  TKT_PURCH/D8CS      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE 0;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TRP_LEN/D9CS        = TRIP_LENGTH * SEG_COUNT;
  VASAVINGS/D11.2CS   = SEG_DISCOUNT - FARE_PAID;
  XARR_DOW/W           = ARR_DATE;
  XARR_DT/MDYY         = ARR_DATE;
  XDPT_DT/MDYY         = DPT_DATE;
  XPSNGR_NM/A15        =
  EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
  XTRAN_DT/MDYY        = TRN_DATE;
-* ****DEFINES ON PREVIOUS DEFINES****
 CAT/A15 = DECODE CLS_CAT ('F' 'FIRST'     'P' 'PREMIUM ECONOMY'
 			        'D' 'DEFAULT'   'B' 'BUSINESS'
 			        'E' 'ECONOMY'   'U'  'UPGRADE'
                                ' ' 'DEFAULT');
  BUSINESS/D12.2CS    = IF CAT EQ 'BUSINESS' THEN FARE_PAID ELSE 0;
  COACH/D12.2CS       = IF CAT EQ 'COACH' THEN FARE_PAID ELSE 0;
  DISCOUNT/D12.2CS    = IF CAT EQ 'DISCOUNT' THEN FARE_PAID ELSE 0;
  FIRST/D12.2CS       = IF CAT EQ 'FIRST' THEN FARE_PAID ELSE 0;
  UP/D12.2CS       = IF CAT EQ 'UP' THEN FARE_PAID ELSE 0;
  B_NTKT/D8CS      = IF CAT EQ 'BUSINESS' THEN NET_TKT_CNT ELSE 0;
  C_NTKT/D8CS      = IF CAT EQ 'COACH' THEN NET_TKT_CNT ELSE 0;
  F_NTKT/D8CS      = IF CAT EQ 'FIRST' THEN NET_TKT_CNT ELSE 0;
  U_NTKT/D8CS      = IF CAT EQ 'UP' THEN NET_TKT_CNT ELSE 0;
  D_NTKT/D8CS      = IF CAT EQ 'DISCOUNT' THEN NET_TKT_CNT ELSE 0;
 
  DISSAVINGS/D11.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
  FLT_LEN1A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 1, '-', 5, FLT_LEN1A);
    FLT_LEN2A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 2, '-', 5, FLT_LEN2A);
    FLT_LEN3A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 3, '-', 5, FLT_LEN3A);
    FLT_LEN4A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 4, '-', 5, FLT_LEN4A);
    FLT_LEN5A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 5, '-', 5, FLT_LEN5A);
    FLT_LEN6A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 6, '-', 5, FLT_LEN6A);
    FLT_LEN7A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 7, '-', 5, FLT_LEN7A);
    FLT_LEN8A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 8, '-', 5, FLT_LEN8A);
    FLT_LEN9A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 9, '-', 5, FLT_LEN9A);
    FLT_LEN10A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 10, '-', 5, FLT_LEN10A);
 
 
    FLEN1D/D9.2 = ATODBL(FLT_LEN1A,  '5', FLEN1D);
    FLEN2D/D9.2 = ATODBL(FLT_LEN2A,  '5', FLEN2D);
    FLEN3D/D9.2 = ATODBL(FLT_LEN3A,  '5', FLEN3D);
    FLEN4D/D9.2 = ATODBL(FLT_LEN4A,  '5', FLEN4D);
    FLEN5D/D9.2 = ATODBL(FLT_LEN5A,  '5', FLEN5D);
    FLEN6D/D9.2 = ATODBL(FLT_LEN6A,  '5', FLEN6D);
    FLEN7D/D9.2 = ATODBL(FLT_LEN7A,  '5', FLEN7D);
    FLEN8D/D9.2 = ATODBL(FLT_LEN8A,  '5', FLEN8D);
    FLEN9D/D9.2 = ATODBL(FLT_LEN9A,  '5', FLEN9D);
    FLEN10D/D9.2 = ATODBL(FLT_LEN10A,  '5', FLEN10D);
 
    FLT_LEN1/D5 = FLEN1D;
    FLT_LEN2/D5 = FLEN2D;
    FLT_LEN3/D5 = FLEN3D;
    FLT_LEN4/D5 = FLEN4D;
    FLT_LEN5/D5 = FLEN5D;
    FLT_LEN6/D5 = FLEN6D;
    FLT_LEN7/D5 = FLEN7D;
    FLT_LEN8/D5 = FLEN8D;
    FLT_LEN9/D5 = FLEN9D;
  FLT_LEN10/D5 = FLEN10D;
MAX_FLA/D5 = IF FLT_LEN1 GE FLT_LEN2 AND FLT_LEN1 GE FLT_LEN3 AND FLT_LEN1 GE FLT_LEN4 AND FLT_LEN1 GE FLT_LEN5 AND FLT_LEN1 GE FLT_LEN6 AND
                 FLT_LEN1 GE FLT_LEN7 AND FLT_LEN1 GE FLT_LEN8 THEN FLT_LEN1 ELSE
              IF FLT_LEN2 GE FLT_LEN1 AND FLT_LEN2 GE FLT_LEN3 AND FLT_LEN2 GE FLT_LEN4 AND FLT_LEN2 GE FLT_LEN5 AND FLT_LEN2 GE FLT_LEN6 AND
                 FLT_LEN2 GE FLT_LEN7 AND FLT_LEN2 GE FLT_LEN8 THEN FLT_LEN2 ELSE
              IF FLT_LEN3 GE FLT_LEN1 AND FLT_LEN3 GE FLT_LEN2 AND FLT_LEN3 GE FLT_LEN4 AND FLT_LEN3 GE FLT_LEN5 AND FLT_LEN3 GE FLT_LEN6 AND
                 FLT_LEN3 GE FLT_LEN7 AND FLT_LEN3 GE FLT_LEN8 THEN FLT_LEN3 ELSE
              IF FLT_LEN4 GE FLT_LEN1 AND FLT_LEN4 GE FLT_LEN2 AND FLT_LEN4 GE FLT_LEN3 AND FLT_LEN4 GE FLT_LEN5 AND FLT_LEN4 GE FLT_LEN6 AND
                 FLT_LEN4 GE FLT_LEN7 AND FLT_LEN4 GE FLT_LEN8 THEN FLT_LEN4 ELSE
              IF FLT_LEN5 GE FLT_LEN1 AND FLT_LEN5 GE FLT_LEN2 AND FLT_LEN5 GE FLT_LEN3 AND FLT_LEN5 GE FLT_LEN4 AND FLT_LEN5 GE FLT_LEN6 AND
                 FLT_LEN5 GE FLT_LEN7 AND FLT_LEN5 GE FLT_LEN8 THEN FLT_LEN5 ELSE
              IF FLT_LEN6 GE FLT_LEN1 AND FLT_LEN6 GE FLT_LEN2 AND FLT_LEN6 GE FLT_LEN3 AND FLT_LEN6 GE FLT_LEN4 AND FLT_LEN6 GE FLT_LEN6 AND
                 FLT_LEN6 GE FLT_LEN7 AND FLT_LEN6 GE FLT_LEN8 THEN FLT_LEN6 ELSE
              IF FLT_LEN7 GE FLT_LEN1 AND FLT_LEN7 GE FLT_LEN2 AND FLT_LEN7 GE FLT_LEN3 AND FLT_LEN7 GE FLT_LEN4 AND FLT_LEN7 GE FLT_LEN7 AND
                 FLT_LEN7 GE FLT_LEN6 AND FLT_LEN7 GE FLT_LEN8 THEN FLT_LEN7 ELSE
              IF FLT_LEN8 GE FLT_LEN1 AND FLT_LEN8 GE FLT_LEN2 AND FLT_LEN8 GE FLT_LEN3 AND FLT_LEN8 GE FLT_LEN4 AND FLT_LEN8 GE FLT_LEN8 AND
                 FLT_LEN8 GE FLT_LEN6 AND FLT_LEN8 GE FLT_LEN7 THEN FLT_LEN8 ELSE
              IF FLT_LEN9 GE FLT_LEN1 AND FLT_LEN9 GE FLT_LEN2 AND FLT_LEN9 GE FLT_LEN3 AND FLT_LEN9 GE FLT_LEN4 AND FLT_LEN9 GE FLT_LEN8 AND
                 FLT_LEN9 GE FLT_LEN6 AND FLT_LEN7 GE FLT_LEN9 AND FLT_LEN8 GE FLT_LEN9 THEN FLT_LEN9 ELSE FLT_LEN10;
-*DEFINES ON PREVIOUS DEFINES
FLT_LENA/A16 = IF MAX_FLA LT 239 THEN '< 4 HOURS' ELSE
               IF MAX_FLA GE 240 AND MAX_FLA LT 359 THEN '4 - 6 HOURS' ELSE
               IF MAX_FLA GE 360 AND MAX_FLA LT 601 THEN '6 - 10 HOURS' ELSE '> 10 HOURS';
 
 
KEYA/A1 = IF FLT_LENA EQ '< 4 HOURS' THEN 'A' ELSE
         IF FLT_LENA EQ '4 - 6 HOURS' THEN 'B' ELSE
         IF FLT_LENA EQ '6 - 10 HOURS' THEN 'C' ELSE 'D';
 
KEY1/A1 = IF CLS_CAT EQ 'F' THEN 'A' ELSE
          IF CLS_CAT EQ 'B' THEN 'B' ELSE
          IF CLS_CAT EQ 'U' THEN 'C' ELSE
          IF CLS_CAT EQ 'C' THEN 'D' ELSE 'E';
-INCLUDE TRANTYPE
-INCLUDE IDLEVDEFINE
END
-RUN
 
 
 
TABLEF FILE SR_50
-* Report column elements
  PRINT ARR_TIME
        AIR_MAIN.INTL_DOM
        AIRLINE
        CAT
        CITYPAIR.EMBARK      AS 'EMB_APT_CD'
        CITYPAIR.ROUTE       AS 'RTE_APT_CD'
        CLASS
        CLS_CAT
        CLIENT_NAME
        CONJ_REL
        CREDIT_CARD
        DISSAVINGS
        DOC_TYPE
        DPT_TIME
        DST_APC
        EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'
        EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'
        EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'
        FARE_BAS
        FARE_PAID
        FLIGHT
        FLIGHT_DURATIONS
        FLT_LENA
        FLT_LEN1
        FLT_LEN2
        FLT_LEN3
        FLT_LEN4
        FLT_LEN5
        FLT_LEN6
        FLT_LEN7
        FLT_LEN8
        KEYA
        KEY1
        LEVEL_DESC
        NET_TKT_CNT
        REF_EXCH_CNT
        REFUSE_CODE
        RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'
        RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'
        RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'
        SAVINGS
        SEG_AMT
        SEG_DESIG
        SEG_DISCOUNT
        SEG_LOWEST
        SEG_NBR
        SEG_STANDARD
        SEG_TAX
        STAY
        TICKET_BRANCH
        TKT_NUM
        TKT_PURCH
        TKT_SORT
        TKT_TYPE
        TRN_DATE
        TRP_LEN
        VASAVINGS
        XARR_DT
        XDPT_DT
        XPSNGR_NM
        XTRAN_DT
 
-INCLUDE &AIRDATES
 
WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10
&&CHK
&&FDCHK
&LCHK
-INCLUDE RPTPARMS
ON TABLE HOLD AS RPTHLD
END
-RUN
 
-IF &RECORDS EQ 0 THEN GOTO NORECORDS;
-RUN
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF1;
-INCLUDE AVRP_SUBFOOT
-:AVSF1
 
 
TABLE FILE RPTHLD
SUM DISSAVINGS AS 'TDSV'
NET_TKT_CNT AS 'TTKT'
FARE_PAID AS 'TFARE'
SEG_AMT AS 'TSEG'
SEG_STANDARD AS 'TSTD'
SEG_LOWEST AS 'TLOW'
SEG_DISCOUNT AS 'TDIS'
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
ON TABLE HOLD AS AIRHOLD1
END
-RUN
 
TABLE FILE RPTHLD
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      FLT_LENA
      KEYA
      KEY1
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      REFUSE_CODE
      RTE_APT_NM
      TKT_NUM
      TKT_TYPE
      DPT_TIME
      XDPT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD AS XTWO
END
-RUN
 
MATCH FILE XTWO
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      FLT_LENA
      KEYA
      KEY1
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      REFUSE_CODE
      RTE_APT_NM
      TKT_NUM
      TKT_TYPE
      DPT_TIME
      XDPT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD
RUN
FILE AIRHOLD1
PRINT TDSV
      TFARE
      TTKT
      TSEG
      TSTD
      TLOW
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
AFTER MATCH HOLD AS AIRHOLD2 OLD-OR-NEW
END
-RUN
 
TABLE FILE AIRHOLD2
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      FLT_LENA
      KEYA
      KEY1
      EMB_APT_NM
      LEVEL_DESC
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      XPSNGR_NM
      REFUSE_CODE
      RTE_APT_NM
      TDSV
      TFARE
      TSEG
      TSTD
      TLOW
      TKT_NUM
      TKT_TYPE
      TRN_DATE
      TTKT
      XDPT_DT
      DPT_TIME
      XTRAN_DT
BY TKT_SORT
BY SEG_NBR
ON TABLE HOLD AS AIRHOLD3
END
-RUN
 
 
 
 
JOIN ROLL WITH TKT_SORT IN AIRHOLD3 TO ROLLUP_CODE IN ROLLUP AS J1.
-RUN
 
 
DEFINE FILE AIRHOLD3
NET_TKT_CNT/D9S = IF (SEG_NBR EQ '01') THEN  TTKT ELSE 0;
PASNGR_NAME/A33 = IF TKT_NUM NE LAST TKT_NUM THEN XPSNGR_NM ELSE ' ';
REASON_CD/A2 =  IF TKT_NUM NE LAST TKT_NUM THEN REFUSE_CODE ELSE ' ';
TICKET_NMBR/A10 = IF TKT_NUM NE LAST TKT_NUM THEN TKT_NUM ELSE ' ';
XT_DTE/A8 = EDIT(TRN_DATE);
XTKT_SRT/A10 = EDIT(TKT_SORT,'9999999999$');
XTRAN_DTE/MDYY = IF TKT_NUM NE LAST TKT_NUM THEN XTRAN_DT ELSE 0;
 
-* ****DEFINES ON PREVIOUS DEFINES****
SRT_DT/A100 = TKT_SORT||XT_DTE||XPSNGR_NM;
FARE_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TFARE ELSE 0;
 
SEG_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TSEG ELSE 0;
LOST_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TDSV ELSE 0;
LOW_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TLOW ELSE 0;
NOWTOD/A8 WITH TKT_SORT = HHMMSS (NOWTOD);
ROLL/A8='&&ROLLUP.EVAL';
LVL/A60='&&LVL_DSC.EVAL';
RPHONE/A15=EDIT(ROLL_PHONE,'9-999-999-9999');
RN/A60=TRIM('B', '&&RPT_TTL1.EVAL', 60, ' ', 1, 'A60');
TDATE1/A8MDYY='&MDYY';
TDATE2/A10=EDIT(TDATE1,'99/99/9999');
TIME1/A8=HHMMSS('A8');
TIME2/A8=EDIT(TIME1,'99$:99$:99');
RD/A10 = 'Run Date:';
RT/A10 = 'Run Time:';
END
-RUN
 
-SET &&PAHDR = IF '&&OUTFMT.EVAL' EQ 'PDF' OR 'PPT' OR 'COM' THEN 'HEADAIR' ELSE 'HDREXLS';
-SET &&PASTYD = IF '&&OUTFMT.EVAL' NE 'PDF' OR 'PPT' OR 'COM' THEN 'DTEXL' ELSE &&DTSTY;
-RUN
 
 
TABLE FILE AIRHOLD3
HEADING
-INCLUDE &&PAHDR
"&&SUBHEAD"
-IF &&PAHDR EQ 'HDREXLS' GOTO NOSPC;
"</2"
-NOSPC;
-*
-*******************************************************************
-* Print statement with fields passed from the user profile database
-*******************************************************************
-*
PRINT
REASON_CD AS 'RSN,CDE'
&&DEPARTD
&&DEPARTT
EMB_APT_NM AS 'ORIGIN'
RTE_APT_NM AS 'DESTINATION'
AIRLINE AS 'CR'
CLASS AS 'CLS,OF,SVC'
FARE_BAS AS 'FARE,BASIS'
-*FLIGHT_DURATIONS AS 'FLT,DURATIONS'
&&FAREAMT
&&NTCOUNT
-* &&LOWEST
-*&&LSTSVGS
-*&&VSVAMT
-*&&ATP
 
-******************************************************************
-* By statements (one per field)
-******************************************************************
-*
BY LEVEL_DESC NOPRINT
BY KEY1 NOPRINT
BY FLT_LEN NOPRINT
BY CAT NOPRINT
BY XPSNGR_NM AS 'PASSENGER,NAME'
BY XTKT_SRT NOPRINT
BY TKT_SORT NOPRINT BY TRN_DATE NOPRINT
BY SEG_NBR NOPRINT
BY XDPT_DT NOPRINT BY DPT_TIME NOPRINT
BY TICKET_NMBR AS 'TKT,NUM'
BY TKT_TYPE AS 'TKT,TYPE'
 
-*
-******************************************************************
-* On Table statements for code appropriate to On Table commands
-******************************************************************
-*
-* ON TABLE COLUMN-TOTAL;
-* ON XPSNGR_NM RECOMPUTE MULTILINES AS 'TOTAL FOR'
 
 
ON LEVEL_DESC RECOMPUTE AS 'Total For'
ON CAT RECOMPUTE MULTILINES AS 'Total For'
 
-* ON XTKT_SRT SKIP-LINE
ON TABLE SET PAGE-NUM OFF
 
 
FOOTING BOTTOM
-INCLUDE CRIGHT_FOOTER
"</4"
"<15 &M1.EVAL <45 &M2.EVAL <75 &M3.EVAL"
ON TABLE PAGE-BREAK AND SUBFOOT
" "
-INCLUDE SBFOOT
-**************************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT
-*                                  WITH AN INCLUDE
-**************************************************************************
ON TABLE SET STYLE *
-INCLUDE &&PASTYD
 
ENDSTYLE
 
 
-*
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN
-*
-TYPE After Report
-GOTO XXIT;
 
-METX;
 
 
 
-FIELDS
-IF &&FIELD EQ 'NOCAT' THEN GOTO NOCATM ELSE
-IF &&FIELD EQ '< 4 HOURS'  THEN GOTO UNDER4M ELSE
-IF &&FIELD EQ '4 - 6 HOURS' THEN GOTO 4TO6M ELSE
-IF &&FIELD EQ '6 - 8 HOURS' THEN GOTO 6TO8 ELSE
-IF &&FIELD EQ '8 - 10 HOURS' THEN GOTO 8TO10 ELSE GOTO OVER10;
-
 
-GOTO OUTSIDEM
 
-UNDER4M
-SET &&RPT_TTL1 = '                     LESS THAN 4 HOURS DETAIL     ';
-SET &&FDCHK = 'WHERE MXFLT_LEN EQ ''< 4 HOURS''';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-SET &&ONLCHK = ' ';
-GOTO OUTSIDEM
 
 
-4TO6M
-SET &&RPT_TTL1 = '                     4 TO 6 HOURS DETAIL     ';
-SET &&FDCHK = 'WHERE MXFLT_LEN EQ ''4 - 6 HOURS''';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
 
-6TO8
-SET &&RPT_TTL1 = '                  6 TO 10 HOURS DETAIL   ';
-SET &&FDCHK = 'WHERE MXFLT_LEN EQ ''6 - 8 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
-8TO10
-SET &&RPT_TTL1 = '                  8 TO 10 HOURS DETAIL   ';
-SET &&FDCHK = 'WHERE MXFLT_LEN EQ ''8 - 10 HOURS'' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
-OVER10
-SET &&RPT_TTL1 = '                  OVER 10 HOURS DETAIL  ';
-SET &&FDCHK = 'WHERE MXFLT_LEN EQ ''> 10 HOURS''';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
-NOCATM
-SET &&RPT_TTL1 = '                FLIGHT DURATION DETAIL  ';
-SET &&FDCHK = ' ';
-SET &&LSTSVGS= ' ';
-SET &&FAREAMT = 'FARE_AMT AS FARE,PAID';
-GOTO OUTSIDEM
 
 
 
 
-OUTSIDEM
 
 
TABLE FILE BRPTINST
BY HIGHEST BREAK_LEVELS
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE
END
-RUN
 
 
-READ SAVE &LEVEL.2.
 
-IF &&IDLEVELBREAK EQ ' ' GOTO LEV1MX;
 
-SET &LCHK = 'WHERE LEVEL_DESC EQ ''&&LSEL.EVAL''';
 
-GOTO ARNDLEV1MX;
 
-LEV1MX;
-SET &AROLL_DSC = IF &LEVEL GT '10' THEN 'AROLL_DSC' | &LEVEL ELSE 'AROLL_DSC' | EDIT(&LEVEL,'$9');
-SET &LCHK='WHERE ' | &AROLL_DSC.EVAL | ' CONTAINS ' | '''&&LSEL.EVAL''';
 
-ARNDLEV1MX;
 
 
 
FILEDEF AUSEINCL DISK &&AUSEPASS
-RUN
FILEDEF CUSEINCL DISK &&CUSEPASS
-RUN
FILEDEF HUSEINCL DISK &&HUSEPASS
-RUN
FILEDEF LUSEINCL DISK &&LUSEPASS
-RUN
 
-*****************************************************************
-*DATE           NAME                 DESCRIPTION OF CHANGE
-*9/13/00      IBISTL-KR              Drill Down functionality
-*****************************************************************
-SET &&RPTTYP = ' ';
 
EX TS_JAMS
-RUN
 
-IF &&FROMAVRP NE 'Y' GOTO :DCA3;
-SET &&RPTGRP_OVERRIDE='AIR';
EX CODEGEN
-RUN
-:DCA3
 
-INCLUDE SELCATQT
-RUN
 
EX &&CATQTRPR
-RUN
 
FILEDEF AUSEINCL CLEAR
-RUN
FILEDEF CUSEINCL CLEAR
-RUN
FILEDEF HUSEINCL CLEAR
-RUN
FILEDEF LUSEINCL CLEAR
-RUN
 
-SET &&SMD = 'S';
 
EX AIRUSE
-RUN
 
-SET &&RPTGRP = 'AIR';
EX UDIDGEN
-RUN
 
-TYPE Before Extract
SET ASNAMES = ON
-SET HOLDATTR = ON;
-RUN
 
-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';
 
-INCLUDE IDLEVROLLDEF
-RUN
 
DEFINE FILE SR_50
  CLS_CAT/A1 = IF TKT_CL_CAT EQ 'F' THEN 'F' ELSE
               IF TKT_CL_CAT EQ 'U' THEN 'U' ELSE
               IF TKT_CL_CAT EQ 'B' THEN 'B' ELSE
               IF TKT_CL_CAT EQ 'P' THEN 'P' ELSE
               IF TKT_CL_CAT EQ 'E' THEN 'E' ELSE 'D';
 
  LEVEL_DESC1/A80 = &&LDESC;
 
  FARE_PAID/D11.2CS   = SEG_AMT + SEG_TAX;
  NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN (-1) ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN (-1) ELSE 0;
  REF_EXCH_CNT/D8CS   = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 0 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (EX_FLAG EQ 'F') THEN 1 ELSE
                        IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (RF_FLAG EQ 'F') THEN 1 ELSE 0;
  SAVINGS/D11.2CS     = SEG_STANDARD - FARE_PAID;
  TKT_PURCH/D8CS      = IF (TICKET_CODE EQ '1') AND
                           (SEG_NBR EQ '01') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND
                           (CONJ_REL EQ 1) THEN 1 ELSE 0;
  TKT_TYPE/A4          = IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'P') THEN 'P-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (RF_FLAG EQ 'F') THEN 'F-RF' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'P') THEN 'P-EX' ELSE
                        IF (SEG_COUNT LE 0) AND
                          (EX_FLAG EQ 'F') THEN 'F-EX' ELSE ' ';
  TRP_LEN/D9CS        = TRIP_LENGTH * SEG_COUNT;
  VASAVINGS/D11.2CS   = SEG_DISCOUNT - FARE_PAID;
  XARR_DOW/W           = ARR_DATE;
  XARR_DT/MDYY         = ARR_DATE;
  XDPT_DT/MDYY         = DPT_DATE;
  XPSNGR_NM/A15        =
  EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
  XTRAN_DT/MDYY        = TRN_DATE;
-* ****DEFINES ON PREVIOUS DEFINES****
  CAT/A15 = DECODE CLS_CAT ('F' 'FIRST'     'P' 'PREMIUM ECONOMY'
			        'D' 'DEFAULT'   'B' 'BUSINESS'
			        'E' 'ECONOMY'   'U'  'UPGRADE'
                                ' ' 'DEFAULT');
  BUSINESS/D12.2CS    = IF CAT EQ 'BUSINESS' THEN FARE_PAID ELSE 0;
  COACH/D12.2CS       = IF CAT EQ 'COACH' THEN FARE_PAID ELSE 0;
  DISCOUNT/D12.2CS    = IF CAT EQ 'DISCOUNT' THEN FARE_PAID ELSE 0;
  FIRST/D12.2CS       = IF CAT EQ 'FIRST' THEN FARE_PAID ELSE 0;
  UP/D12.2CS       = IF CAT EQ 'UP' THEN FARE_PAID ELSE 0;
  B_NTKT/D8CS      = IF CAT EQ 'BUSINESS' THEN NET_TKT_CNT ELSE 0;
  C_NTKT/D8CS      = IF CAT EQ 'COACH' THEN NET_TKT_CNT ELSE 0;
  F_NTKT/D8CS      = IF CAT EQ 'FIRST' THEN NET_TKT_CNT ELSE 0;
  U_NTKT/D8CS      = IF CAT EQ 'UP' THEN NET_TKT_CNT ELSE 0;
  D_NTKT/D8CS      = IF CAT EQ 'DISCOUNT' THEN NET_TKT_CNT ELSE 0;
 
  DISSAVINGS/D11.2CS  = IF EMBARK EQ 'DT1' THEN 0 ELSE
                         FARE_PAID - SEG_LOWEST;
  FLT_LEN1A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 1, '-', 5, FLT_LEN1A);
    FLT_LEN2A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 2, '-', 5, FLT_LEN2A);
    FLT_LEN3A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 3, '-', 5, FLT_LEN3A);
    FLT_LEN4A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 4, '-', 5, FLT_LEN4A);
    FLT_LEN5A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 5, '-', 5, FLT_LEN5A);
    FLT_LEN6A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 6, '-', 5, FLT_LEN6A);
    FLT_LEN7A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 7, '-', 5, FLT_LEN7A);
    FLT_LEN8A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 8, '-', 5, FLT_LEN8A);
    FLT_LEN9A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 9, '-', 5, FLT_LEN9A);
    FLT_LEN10A/A5 = GETTOK(FLIGHT_DURATIONS, 72 , 10, '-', 5, FLT_LEN10A);
 
 
    FLEN1D/D9.2 = ATODBL(FLT_LEN1A,  '5', FLEN1D);
    FLEN2D/D9.2 = ATODBL(FLT_LEN2A,  '5', FLEN2D);
    FLEN3D/D9.2 = ATODBL(FLT_LEN3A,  '5', FLEN3D);
    FLEN4D/D9.2 = ATODBL(FLT_LEN4A,  '5', FLEN4D);
    FLEN5D/D9.2 = ATODBL(FLT_LEN5A,  '5', FLEN5D);
    FLEN6D/D9.2 = ATODBL(FLT_LEN6A,  '5', FLEN6D);
    FLEN7D/D9.2 = ATODBL(FLT_LEN7A,  '5', FLEN7D);
    FLEN8D/D9.2 = ATODBL(FLT_LEN8A,  '5', FLEN8D);
    FLEN9D/D9.2 = ATODBL(FLT_LEN9A,  '5', FLEN9D);
    FLEN10D/D9.2 = ATODBL(FLT_LEN10A,  '5', FLEN10D);
 
    FLT_LEN1/D5 = FLEN1D;
    FLT_LEN2/D5 = FLEN2D;
    FLT_LEN3/D5 = FLEN3D;
    FLT_LEN4/D5 = FLEN4D;
    FLT_LEN5/D5 = FLEN5D;
    FLT_LEN6/D5 = FLEN6D;
    FLT_LEN7/D5 = FLEN7D;
    FLT_LEN8/D5 = FLEN8D;
    FLT_LEN9/D5 = FLEN9D;
  FLT_LEN10/D5 = FLEN10D;
MAX_FLA/D5 = IF FLT_LEN1 GE FLT_LEN2 AND FLT_LEN1 GE FLT_LEN3 AND FLT_LEN1 GE FLT_LEN4 AND FLT_LEN1 GE FLT_LEN5 AND FLT_LEN1 GE FLT_LEN6 AND
                 FLT_LEN1 GE FLT_LEN7 AND FLT_LEN1 GE FLT_LEN8 THEN FLT_LEN1 ELSE
              IF FLT_LEN2 GE FLT_LEN1 AND FLT_LEN2 GE FLT_LEN3 AND FLT_LEN2 GE FLT_LEN4 AND FLT_LEN2 GE FLT_LEN5 AND FLT_LEN2 GE FLT_LEN6 AND
                 FLT_LEN2 GE FLT_LEN7 AND FLT_LEN2 GE FLT_LEN8 THEN FLT_LEN2 ELSE
              IF FLT_LEN3 GE FLT_LEN1 AND FLT_LEN3 GE FLT_LEN2 AND FLT_LEN3 GE FLT_LEN4 AND FLT_LEN3 GE FLT_LEN5 AND FLT_LEN3 GE FLT_LEN6 AND
                 FLT_LEN3 GE FLT_LEN7 AND FLT_LEN3 GE FLT_LEN8 THEN FLT_LEN3 ELSE
              IF FLT_LEN4 GE FLT_LEN1 AND FLT_LEN4 GE FLT_LEN2 AND FLT_LEN4 GE FLT_LEN3 AND FLT_LEN4 GE FLT_LEN5 AND FLT_LEN4 GE FLT_LEN6 AND
                 FLT_LEN4 GE FLT_LEN7 AND FLT_LEN4 GE FLT_LEN8 THEN FLT_LEN4 ELSE
              IF FLT_LEN5 GE FLT_LEN1 AND FLT_LEN5 GE FLT_LEN2 AND FLT_LEN5 GE FLT_LEN3 AND FLT_LEN5 GE FLT_LEN4 AND FLT_LEN5 GE FLT_LEN6 AND
                 FLT_LEN5 GE FLT_LEN7 AND FLT_LEN5 GE FLT_LEN8 THEN FLT_LEN5 ELSE
              IF FLT_LEN6 GE FLT_LEN1 AND FLT_LEN6 GE FLT_LEN2 AND FLT_LEN6 GE FLT_LEN3 AND FLT_LEN6 GE FLT_LEN4 AND FLT_LEN6 GE FLT_LEN6 AND
                 FLT_LEN6 GE FLT_LEN7 AND FLT_LEN6 GE FLT_LEN8 THEN FLT_LEN6 ELSE
              IF FLT_LEN7 GE FLT_LEN1 AND FLT_LEN7 GE FLT_LEN2 AND FLT_LEN7 GE FLT_LEN3 AND FLT_LEN7 GE FLT_LEN4 AND FLT_LEN7 GE FLT_LEN7 AND
                 FLT_LEN7 GE FLT_LEN6 AND FLT_LEN7 GE FLT_LEN8 THEN FLT_LEN7 ELSE
              IF FLT_LEN8 GE FLT_LEN1 AND FLT_LEN8 GE FLT_LEN2 AND FLT_LEN8 GE FLT_LEN3 AND FLT_LEN8 GE FLT_LEN4 AND FLT_LEN8 GE FLT_LEN8 AND
                 FLT_LEN8 GE FLT_LEN6 AND FLT_LEN8 GE FLT_LEN7 THEN FLT_LEN8 ELSE
              IF FLT_LEN9 GE FLT_LEN1 AND FLT_LEN9 GE FLT_LEN2 AND FLT_LEN9 GE FLT_LEN3 AND FLT_LEN9 GE FLT_LEN4 AND FLT_LEN9 GE FLT_LEN8 AND
                 FLT_LEN9 GE FLT_LEN6 AND FLT_LEN7 GE FLT_LEN9 AND FLT_LEN8 GE FLT_LEN9 THEN FLT_LEN9 ELSE FLT_LEN10;
-*DEFINES ON PREVIOUS DEFINES
FLT_LENA/A16 = IF MAX_FLA LT 239 THEN '< 4 HOURS' ELSE
               IF MAX_FLA GE 240 AND MAX_FLA LT 359 THEN '4 - 6 HOURS' ELSE
               IF MAX_FLA GE 360 AND MAX_FLA LT 601 THEN '6 - 10 HOURS' ELSE '> 10 HOURS';
 
MXFLT_LEN/A16 = IF MAX_FLA LT 239 THEN '< 4 HOURS' ELSE
              IF MAX_FLA GE 240 AND MAX_FLA LT 359 THEN '4 - 6 HOURS' ELSE
              IF MAX_FLA GE 360 AND MAX_FLA LT 479 THEN '6 - 8 HOURS' ELSE
              IF MAX_FLA GE 480 AND MAX_FLA LT 601 THEN '8 - 10 HOURS' ELSE '> 10 HOURS';
 
 
MXKEY/A1 = IF MXFLT_LEN EQ '< 4 HOURS' THEN 'A' ELSE
         IF MXFLT_LEN EQ '4 - 6 HOURS' THEN 'B' ELSE
         IF MXFLT_LEN EQ '6 - 8 HOURS' THEN 'C' ELSE
         IF MXFLT_LEN EQ '8 - 10 HOURS' THEN 'D' ELSE 'E';
-INCLUDE TRANTYPE
-INCLUDE IDLEVDEFINE
END
-RUN
 
 
 
TABLEF FILE SR_50
-* Report column elements
  PRINT ARR_TIME
        AIR_MAIN.INTL_DOM
        AIRLINE
        CAT
        CITYPAIR.EMBARK      AS 'EMB_APT_CD'
        CITYPAIR.ROUTE       AS 'RTE_APT_CD'
        CLASS
        CLS_CAT
        CLIENT_NAME
        CONJ_REL
        CREDIT_CARD
        DISSAVINGS
        DOC_TYPE
        DPT_TIME
        DST_APC
        EMB_APT.AIRPORT_NAME AS 'EMB_APT_NM'
        EMB_CTY.CITY_NAME    AS 'EMB_CTY_NM'
        EMB_CTY.EMB_CITY     AS 'EMB_CTY_CD'
        FARE_BAS
        FARE_PAID
        FLIGHT
        FLIGHT_DURATIONS
        FLT_LENA
        FLT_LEN1
        FLT_LEN2
        FLT_LEN3
        FLT_LEN4
        FLT_LEN5
        FLT_LEN6
        FLT_LEN7
        FLT_LEN8
        LEVEL_DESC
        NET_TKT_CNT
        REF_EXCH_CNT
        REFUSE_CODE
        RTE_APT.AIRPORT_NAME AS 'RTE_APT_NM'
        RTE_CTY.CITY_NAME    AS 'RTE_CTY_NM'
        RTE_CTY.RTE_CITY     AS 'RTE_CTY_CD'
        SAVINGS
        SEG_AMT
        SEG_DESIG
        SEG_DISCOUNT
        SEG_LOWEST
        SEG_NBR
        SEG_STANDARD
        SEG_TAX
        STAY
        TICKET_BRANCH
        TKT_NUM
        TKT_PURCH
        TKT_SORT
        TKT_TYPE
        TRN_DATE
        TRP_LEN
        VASAVINGS
        XARR_DT
        XDPT_DT
        XPSNGR_NM
        XTRAN_DT
        MXFLT_LEN
        MXKEY
 
-INCLUDE &AIRDATES
 
WHERE VOID_DATE EQ 0
-********************************************************************
-* Where statements to select data specified in user profile
-********************************************************************
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10
&&CHK
&&FDCHK
&LCHK
-INCLUDE RPTPARMS
ON TABLE HOLD AS RPTHLD
END
-RUN
 
-IF &RECORDS EQ 0 THEN GOTO NORECORDS;
-RUN
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF2;
-INCLUDE AVRP_SUBFOOT
-:AVSF2
 
 
TABLE FILE RPTHLD
SUM DISSAVINGS AS 'TDSV'
NET_TKT_CNT AS 'TTKT'
FARE_PAID AS 'TFARE'
SEG_AMT AS 'TSEG'
SEG_STANDARD AS 'TSTD'
SEG_LOWEST AS 'TLOW'
SEG_DISCOUNT AS 'TDIS'
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
ON TABLE HOLD AS AIRHOLD1
END
-RUN
 
TABLE FILE RPTHLD
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      MXFLT_LEN
      MXKEY
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      REFUSE_CODE
      RTE_APT_NM
      TKT_NUM
      TKT_TYPE
      DPT_TIME
      XDPT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD AS XTWO
END
-RUN
 
MATCH FILE XTWO
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      MXFLT_LEN
      MXKEY
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      REFUSE_CODE
      RTE_APT_NM
      TKT_NUM
      TKT_TYPE
      DPT_TIME
      XDPT_DT
      XTRAN_DT
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
BY SEG_NBR
ON TABLE HOLD
RUN
FILE AIRHOLD1
PRINT TDSV
      TFARE
      TTKT
      TSEG
      TSTD
      TLOW
BY LEVEL_DESC
BY XPSNGR_NM
BY TKT_SORT
BY TRN_DATE
AFTER MATCH HOLD AS AIRHOLD2 OLD-OR-NEW
END
-RUN
 
TABLE FILE AIRHOLD2
PRINT AIRLINE
      CAT
      CLASS
      EMB_APT_NM
      FLIGHT_DURATIONS
      MXFLT_LEN
      MXKEY
      EMB_APT_NM
      LEVEL_DESC
      SEG_AMT
      SEG_STANDARD
      SEG_LOWEST
      SEG_DISCOUNT
      FARE_BAS
      FARE_PAID
      XPSNGR_NM
      REFUSE_CODE
      RTE_APT_NM
      TDSV
      TFARE
      TSEG
      TSTD
      TLOW
      TKT_NUM
      TKT_TYPE
      TRN_DATE
      TTKT
      XDPT_DT
      DPT_TIME
      XTRAN_DT
BY TKT_SORT
BY SEG_NBR
ON TABLE HOLD AS AIRHOLD3
END
-RUN
 
 
 
 
JOIN ROLL WITH TKT_SORT IN AIRHOLD3 TO ROLLUP_CODE IN ROLLUP AS J1.
-RUN
 
 
DEFINE FILE AIRHOLD3
NET_TKT_CNT/D9S = IF (SEG_NBR EQ '01') THEN  TTKT ELSE 0;
PASNGR_NAME/A33 = IF TKT_NUM NE LAST TKT_NUM THEN XPSNGR_NM ELSE ' ';
REASON_CD/A2 =  IF TKT_NUM NE LAST TKT_NUM THEN REFUSE_CODE ELSE ' ';
TICKET_NMBR/A10 = IF TKT_NUM NE LAST TKT_NUM THEN TKT_NUM ELSE ' ';
XT_DTE/A8 = EDIT(TRN_DATE);
XTKT_SRT/A10 = EDIT(TKT_SORT,'9999999999$');
XTRAN_DTE/MDYY = IF TKT_NUM NE LAST TKT_NUM THEN XTRAN_DT ELSE 0;
 
-* ****DEFINES ON PREVIOUS DEFINES****
SRT_DT/A100 = TKT_SORT||XT_DTE||XPSNGR_NM;
FARE_AMT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TFARE ELSE 0;
 
SEG_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TSEG ELSE 0;
LOST_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TDSV ELSE 0;
LOW_TOT/D12.2CS = IF SRT_DT NE LAST SRT_DT THEN TLOW ELSE 0;
NOWTOD/A8 WITH TKT_SORT = HHMMSS (NOWTOD);
ROLL/A8='&&ROLLUP.EVAL';
LVL/A60='&&LVL_DSC.EVAL';
RPHONE/A15=EDIT(ROLL_PHONE,'9-999-999-9999');
RN/A60=TRIM('B', '&&RPT_TTL1.EVAL', 60, ' ', 1, 'A60');
TDATE1/A8MDYY='&MDYY';
TDATE2/A10=EDIT(TDATE1,'99/99/9999');
TIME1/A8=HHMMSS('A8');
TIME2/A8=EDIT(TIME1,'99$:99$:99');
RD/A10 = 'Run Date:';
RT/A10 = 'Run Time:';
END
-RUN
 
-SET &&PAHDR = IF '&&OUTFMT.EVAL' EQ 'PDF' OR 'PPT' OR 'COM' THEN 'HEADAIR' ELSE 'HDREXLS';
-SET &&PASTYD = IF '&&OUTFMT.EVAL' NE 'PDF' OR 'PPT' OR 'COM' THEN 'DTEXL' ELSE &&DTSTY;
-RUN
 
TABLE FILE AIRHOLD3
HEADING
-INCLUDE &&PAHDR
"&&SUBHEAD"
-IF &&PAHDR EQ 'HDREXLS' GOTO NOSPC;
"</2"
-NOSPC;
-*
-*******************************************************************
-* Print statement with fields passed from the user profile database
-*******************************************************************
-*
PRINT
REASON_CD AS 'RSN,CDE'
&&DEPARTD
&&DEPARTT
EMB_APT_NM AS 'ORIGIN'
RTE_APT_NM AS 'DESTINATION'
AIRLINE AS 'CR'
CLASS AS 'CLS,OF,SVC'
FARE_BAS AS 'FARE,BASIS'
-*FLIGHT_DURATIONS AS 'FLT,DURATIONS'
&&FAREAMT
&&NTCOUNT
-* &&LOWEST
-*&&LSTSVGS
-*&&VSVAMT
-*&&ATP
 
-******************************************************************
-* By statements (one per field)
-******************************************************************
-*
BY LEVEL_DESC NOPRINT
BY MXKEY NOPRINT
BY MXFLT_LEN NOPRINT
BY CAT NOPRINT
BY XPSNGR_NM AS 'PASSENGER,NAME'
BY XTKT_SRT NOPRINT
BY TKT_SORT NOPRINT BY TRN_DATE NOPRINT
BY SEG_NBR NOPRINT
BY XDPT_DT NOPRINT BY DPT_TIME NOPRINT
BY TICKET_NMBR AS 'TKT,NUM'
BY TKT_TYPE AS 'TKT,TYPE'
 
-*
-******************************************************************
-* On Table statements for code appropriate to On Table commands
-******************************************************************
-*
-* ON TABLE COLUMN-TOTAL;
-* ON XPSNGR_NM RECOMPUTE MULTILINES AS 'TOTAL FOR'
 
 
ON LEVEL_DESC RECOMPUTE AS 'Total For'
ON CAT RECOMPUTE MULTILINES AS 'Total For'
 
-* ON XTKT_SRT SKIP-LINE
ON TABLE SET PAGE-NUM OFF
 
 
FOOTING BOTTOM
-INCLUDE CRIGHT_FOOTER
"</4"
"<15 &M1.EVAL <45 &M2.EVAL <75 &M3.EVAL"
ON TABLE PAGE-BREAK AND SUBFOOT
" "
-INCLUDE SBFOOT
-**************************************************************************
-*DATE           NAME               DESCRIPTION OF CHANGE
-*----           ----               ---------------------
-*8/11/00      IBISTL-SB            CHANGED THE SET STYLE STATEMENT
-*                                  WITH AN INCLUDE
-**************************************************************************
ON TABLE SET STYLE *
-INCLUDE &&PASTYD
 
ENDSTYLE
 
 
-*
&&OUTLINE1
&&OUTPUTDEST
&&OUTLINE2
END
-RUN
-*
-TYPE After Report
-GOTO XXIT;
 
 
 
-FIRST
-HTMLFORM BEGIN
<HTML>
<HEAD>
 
</HEAD>
<BODY>
 
 
<TITLE> TRAVEL & TRANSPORT</TITLE>
<CENTER><H2>THIS FIELD IS NOT DRILLABLE!!!</H2></CENTER>
 
<CENTER><H4>PLEASE GO BACK TO THE PREVIOUS PAGE USING </H4></CENTER>
<CENTER><H3>BACK BUTTON OF THE BROWSER</H3></CENTER>
 
</BODY>
</HTML>
-HTMLFORM END
-GOTO XXIT;
 
-NOFILE
-HTMLFORM BEGIN
<HTML>
<HEAD>
 
</HEAD>
<BODY>
 
 
<TITLE> TRAVEL & TRANSPORT</TITLE>
<CENTER><H2>THE REPORT IS NO LONGER DRILLABLE!!!</H2></CENTER>
 
<CENTER><H4>PLEASE GO BACK TO THE PREVIOUS PAGE USING </H4></CENTER>
<CENTER><H3>BACK BUTTON OF THE BROWSER</H3></CENTER>
 
</BODY>
</HTML>
-HTMLFORM END
 
-GOTO XXIT;
 
-NORECORDS
 
-QUIT
 
-HTMLFORM BEGIN
<HTML>
<HEAD>
 
</HEAD>
<BODY>
 
 
<TITLE> TRAVEL & TRANSPORT</TITLE>
<CENTER><H2>NO RECORDS FOUND FOR THIS SELECTION!!!</H2></CENTER>
 
<CENTER><H4>PLEASE GO BACK TO THE PREVIOUS PAGE USING </H4></CENTER>
<CENTER><H3>BACK BUTTON OF THE BROWSER</H3></CENTER>
 
</BODY>
</HTML>
-HTMLFORM END
 
-XXIT;
