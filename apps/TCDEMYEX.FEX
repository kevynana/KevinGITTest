-*****************THIS HEADER REPRESENTS THE 80 CHARACTER MAXIUM FOR PROGRAMS**
-*1/30/14 UPDATED ONLINE/TRADITIONAL DEFINES TO USE ONLINE_TRADITIONAL FIELD INSTEAD OF DOD_TYPE
-*09/26/2017 - DLV - S-37268 - UPDATED defines for ND_CP_CD ND_APT_CDO ND_APT_CDD

-INCLUDE SETECHO
-TYPE EXTRACT1
SET ASNAMES = ON
-SET HOLDATTR = ON;
-RUN

DEFINE FILE &&EXTRACT
COMM_SEG/D12.2S   = SEG_COM;
CP_CL_CAT/A8 = DECODE CL_CAT ('F' 'FIRST'     'C' 'COACH'   
                              'D' 'DISCOUNT'  'B' 'BUSINESS');
DEMB_APT/A21=EDIT(EMB_APT.AIRPORT_NAME,'999999999999999999999$$$$');
DIR_CITY_CD/A50 = EMB_CTY.EMB_CITY || '-' || RTE_CTY.RTE_CITY;
DIR_CITY_NM/A50 = EMB_CTY.CITY_NAME | RTE_CTY.CITY_NAME; 
DIR_CP_CD/A50 = CITYPAIR.EMBARK || '-' || CITYPAIR.ROUTE;
DIR_CP_NM/A50 = EMB_APT.AIRPORT_NAME | RTE_APT.AIRPORT_NAME;
DRTE_APT/A21=EDIT(RTE_APT.AIRPORT_NAME,'999999999999999999999$$$$');
EMB_APT/A21=EDIT(NDO_APT.AIRPORT_NAME,'999999999999999999999$$$$');
FARE_PAID/D12.2S  = SEG_AMT;
-*ADDED FOR CONAGRA CITYPAIR REPORT FOR ICG COMMERCE
FARE_BAS1/A1 = EDIT (CLASS, '9');
-* ADDED FOR INTERNET BOOKINGS
IBOOK/A33 = IF ONLINE_TRADITIONAL EQ 'ONLINE' THEN 'ONLINE BOOKINGS' ELSE
     IF DOD_DESC CONTAINS 'EXCHANGE FROM' THEN 'EXCHANGE FROM AN INTERNET BOOKING' ELSE
     IF DOD_DESC CONTAINS 'WEB' THEN 'WEB BOOKINGS' ELSE 'TRADITIONAL BOOKINGS'; 
KILO/D9      = CITYPAIR.SEG_MILES * 1.60934 ;  
-* LEVEL_DESC/A60 = &&LDESC;
MILES/P9CS = CITYPAIR.SEG_MILES;
ND_CITY_CD/A50 = NDO_CTY.NDO_CITY || '-' || NDD_CTY.NDD_CITY;
ND_CITY_NM/A50 = NDO_CTY.CITY_NAME | NDD_CTY.CITY_NAME;
-*ND_CP_CD/A50  = NDO_APT.ND_ORG || '-' || NDD_APT.ND_DST;
ND_CP_CD/A50  = ND_ORG || '-' || ND_DST;

NET_COMM/D12.2S   = (SEG_AMT - SEG_COM);
NET_TKT_CNT/D8CS    = IF (TICKET_CODE EQ '1') AND
                           (FARE_PAID GE 0) AND
                           (SEG_COUNT EQ 1) AND 
                           (CONJ_REL EQ 1) THEN 1 ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (EX_FLAG NE ' ') THEN (-1) ELSE 
                        IF (TICKET_CODE EQ '1') AND
                           (RF_FLAG NE ' ') THEN (-1) ELSE 0;
NET_FARE/D12.2S  = IF (EX_FLAG EQ ' ') AND (RF_FLAG EQ ' ')
                         THEN SEG_AMT ELSE 0;
NEW_SEG_COUNT/D8CS = SEG_COUNT;
RTE_APT/A21=EDIT(NDD_APT.AIRPORT_NAME,'999999999999999999999$$$$');
TOTAL_FARE/D12.2S = SEG_AMT + SEG_TAX;
VASAVINGS/D11.2CS = SEG_DISCOUNT - TOTAL_FARE;
XPSNGR_NM/A15 = EDIT(PASSNGR_NAME,'999999999999999$$$$$$$$$$$$$$$$$$');
XTRAN_DT/MDYY = TRN_DATE;

-* ****DEFINES ON PREVIOUS DEFINES****

DISSAVINGS/D11.2CS= IF EMBARK EQ 'DT1' THEN 0 ELSE
                         TOTAL_FARE - SEG_LOWEST;

ND_CP_NM/A50 = EMB_APT|'        '|RTE_APT;
ORGDST/A55 = &&ORGDST;

SAVINGS/D11.2CS   = SEG_STANDARD - TOTAL_FARE;  
 P1/A1 = IF (TRN_DATE GE &&FROMDT.EVAL) AND 
            (TRN_DATE LE &&TODT.EVAL) THEN 'Y' ELSE 'N';
 P2/A1 = IF (TRN_DATE GE &&FXDATE.EVAL) AND 
            (TRN_DATE LE &&TXDATE.EVAL) THEN 'Y' ELSE 'N';

 P1FARE/D15.2CS = IF P1 EQ 'Y' THEN FARE_PAID ELSE 0;
 P1CNT/P9CS = IF P1 EQ 'Y' THEN NET_TKT_CNT ELSE 0;
 P1KILO/D9 = IF P1 EQ 'Y' THEN KILO ELSE 0;
 P2KILO/D9 = IF P2 EQ 'Y' THEN KILO ELSE 0;
 P1MILES/P9CS = IF P1 EQ 'Y' THEN MILES ELSE 0;
 P2FARE/D15.2CS = IF P2 EQ 'Y' THEN FARE_PAID ELSE 0;
 P2CNT/P9CS = IF P2 EQ 'Y' THEN NET_TKT_CNT ELSE 0;
 P2MILES/P9CS = IF P2 EQ 'Y' THEN MILES ELSE 0;
 
-******** NEW DEFINES TO CORRECT CITY/AIRPORT NAME/CODE ISSUE JK ******

-******* PRODUCES DIRECTIONAL CITY CODES ***************
DIR_CTY_CDO/A25 = EMB_CTY.EMB_CITY;
DIR_CTY_CDD/A25 = RTE_CTY.RTE_CITY;

-******* PRODUCES DIRECTIONAL CITY NAMES ***************
DIR_CTY_NMO/A25 = EMB_CTY.CITY_NAME;
DIR_CTY_NMD/A25 = RTE_CTY.CITY_NAME;

-********* PRODUCES DIRECTIONAL AIRPORT CODES ********
DIR_APT_CDO/A25 = CITYPAIR.EMBARK;
DIR_APT_CDD/A25 = CITYPAIR.ROUTE;

-********* PRODUCES DIRECTIONAL AIRPORT NAMES ********
DIR_APT_NMO/A25 = EMB_APT.AIRPORT_NAME;
DIR_APT_NMD/A25 = RTE_APT.AIRPORT_NAME;

-********* PRODUCES NON-DIRECTIONAL CITY CODES ********
ND_CTY_CDO/A25 = NDO_CTY.NDO_CITY;
ND_CTY_CDD/A25 = NDD_CTY.NDD_CITY;

-********* PRODUCES NON-DIRECTIONAL CITY NAMES ********
ND_CTY_NMO/A25 = NDO_CTY.CITY_NAME;
ND_CTY_NMD/A25 = NDD_CTY.CITY_NAME;

-******** PRODUCES NON-DIRECTIONAL AIRPORT CODES ****
-*ND_APT_CDO/A25 = NDO_APT.ND_ORG;
-*ND_APT_CDD/A25 = NDD_APT.ND_DST;
ND_APT_CDO/A25 = ND_ORG;
ND_APT_CDD/A25 = ND_DST;

-******** PRODUCES NON-DIRECTIONAL AIRPORT NAMES ****
ND_APT_NMO/A25 = EDIT(NDO_APT.AIRPORT_NAME, '999999999999999999999$$$$');
ND_APT_NMD/A25 = EDIT(NDD_APT.AIRPORT_NAME, '999999999999999999999$$$$');

-* 
-* NDAPT/A51 = ND_APT_CDO||'-'||ND_APT_CDD;
-* ORGDST/A55 = NDAPT;
END
-RUN

TABLEF FILE &&EXTRACT
PRINT 
  CITYPAIR.AIRLINE AS 'CP_AIRLINE'	
  CITYPAIR.INTL_DOM AS 'INTL_DOM'	
  ORGDST	
  P1CNT
  P2CNT
  P1FARE
  P2FARE
  P1MILES
  P2MILES
-******* NEW FIELDS *********
  DIR_CTY_CDO
  DIR_CTY_CDD
  DIR_CTY_NMO
  DIR_CTY_NMD
  DIR_APT_CDO
  DIR_APT_CDD
  DIR_APT_NMO
  DIR_APT_NMD
  ND_CTY_CDO
  ND_CTY_CDD
  ND_CTY_NMO
  ND_CTY_NMD
  ND_APT_CDO
  ND_APT_CDD
  ND_APT_NMO
  ND_APT_NMD        	    	
WHERE (((TRN_DATE GE &&FROMDT.EVAL) AND (TRN_DATE LE &&TODT.EVAL)) OR
      ((TRN_DATE GE &&FXDATE.EVAL) AND (TRN_DATE LE &&TXDATE.EVAL)))
WHERE VOID_DATE EQ 0
   
&&WHERE1
&&WHERE2
&&WHERE3
&&WHERE4
&&WHERE5
&&WHERE6
&&WHERE7
&&WHERE8
&&WHERE9
&&WHERE10
-INCLUDE RPTPARMS
ON TABLE HOLD AS TC_MYTD
END
-RUN
-IF &LINES EQ 0 THEN GOTO NEXTONE;
-*========================================================================
-*   PROCESS EXTRACT DATA FROM STEP4 - HOLD TO FOCUS DATABASE TCRANK        
-*========================================================================
DEFINE FILE TC_MYTD
ROLLCD/A8 = '&&ROLL';
END

TABLE FILE TC_MYTD
SUM P1CNT
    P2CNT
    P1FARE
    P2FARE
    P1MILES
    P2MILES
BY ROLLCD
BY ORGDST
BY CP_AIRLINE
ON TABLE HOLD AS HOLD2
END
-RUN

DEFINE FILE HOLD2
NMB/I5    = NMB + 1;
END
TABLE FILE HOLD2
SUM P1CNT
    P2CNT
    P1FARE
    P2FARE
    P1MILES
    P2MILES
BY ROLLCD
BY NMB
BY ORGDST
BY CP_AIRLINE
ON TABLE HOLD AS TCM1
END
-RUN
-TYPE &&EXTRACT


MODIFY FILE TCMYTD
FIXFORM FROM TCM1
DATA ON TCM1
END
-RUN
-NEXTONE
