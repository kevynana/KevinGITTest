-*************************************************************************
-* DVUNUSED.FEX - unused ticket listing 
-*************************************************************************
-*SET TEMPERASE=OFF
-* CHANGED TO OBTAIN LEVEL1 LEVEL2 LEVEL3 LEVEL4 INFO
-* FROM AIR DATABASE - Deb 5/10/10
-* CHANGED TO ALWAYS SHOW LEVEL1 LEVEL2 LEVEL3 FROM AMN_DATA BASE
-* DEB 4/16/14
-* DEB 4/18/14 - UPDATED &NOHIERAMN
-* DEB 4/22/14 - MADE CHANGES TO INCLUDE ALL TICKETS FROM AMN_ITEM
-*               WHEN DVRUTPARMS SELECTIONS ARE MADE
-*DEB 5/23/14 - ADDED EX5 TO EX_RF_FLAG DEFINE
-* DEB 6/18/14 - ADDED NEW CODE SO ALL AUX_TKT FROM SR_50 WERE 
-*               INCLUDED IF FOUND IN AMN_ITEM DATA
-* DEB 6/19/14 - ADDED DEFINE FOR STATUS_CODE S AND U PER RANDY PSOTA IN DC
-*               THIS CHANGE WAS IMPLEMENTED IN ABC_CANW ON 1/24/14 BUT
-*               WASN'T ADDED TO THIS REPORT
-*DEB 6/20/14 -  UPDATED DEFINE FOR DATEEXPIRES PER JESSICA FRIZELL
-* DEB 8/21/14 - CHANGED TKT_AMT DEFINE BACK TO ORIGINAL DEFINE DUE
-*               TO BALANCING ISSUES WITH EBANKX REPORT AND SPG QTR2 2014
-*               ADDED ROUTINE TO EXTRACT SPECIFIC BR_CL_IDX FROM AMN_ITEM
-*               UPDATED DEFINE FOR BR_CL_IDX TO USE CLIENT_BRANCH
-* 3/19/15 -  S-06584 - CHANGED TO USE EXTRACT ROUTINE PROVIDED BY RANDY PSOTA - DEB
 
-*  02/05/2015  REJ  S-05681 Changes for Available Reports.  Adding code so that the
-*                           program will run in current Review and in Available Reports.
-*  06/26/2015  REJ  S-08389 Latest changes for ER5 Available Reports.
-*  10/06/2015  REJ  S-10081 Changes for Available Reports.  Adding code so the dates are
-*                                in a valid format for ER5.
-*  10/20/2015  REJ  S-10081 Changes for Available Reports.  Adding code so the subfoot
-*                           shows the parameters.
-*7/11/16 -DLV -  S-20630  Carried through EMP_ID  
-*03/09/17 - DLV - S-22486 - Updated IMAGE define to use server report is being ran from
-*10/20/17 - DLV - S-41070 - Corrected issue with EMP_ID not appearing in all cases

-INCLUDE SETECHO
SET ASNAMES = ON
-SET &AIRDATES = &&WEB_PATH || 'AIRDATES.fex';
 
 
 
-SET &WHATDATE = IF '&&DATETYPE.EVAL' EQ 'I' THEN 'TRN_DATE' ELSE 'FST_DPT_DATE';
 
-DEFAULT &WHATSTATUS = 'WHERE STATUS_CODE EQ ''A'' OR ''S'' OR ''U'' OR ''X'' ';
-*-DEFAULT &WHATSTATUS = 'WHERE STATUS_CODE EQ ''S'' OR ''U'' OR ''X'' ';
-DEFAULT &MEM = ' ';
 
FILEDEF AUSEINCL DISK &&AUSEPASS
-RUN
FILEDEF CUSEINCL DISK &&CUSEPASS
-RUN
FILEDEF HUSEINCL DISK &&HUSEPASS
-RUN
FILEDEF LUSEINCL DISK &&LUSEPASS
-RUN
 
-IF &&FROMAVRP NE 'Y' GOTO :DVU0;
-SET &&RPTGRP_OVERRIDE='AIR';
EX CODEGEN
-RUN
-:DVU0
 
-INCLUDE SELCATQT
-RUN
 
EX &&CATQTRPR
-RUN
 
FILEDEF AUSEINCL CLEAR
-RUN
FILEDEF CUSEINCL CLEAR
-RUN
FILEDEF HUSEINCL CLEAR
-RUN
FILEDEF LUSEINCL CLEAR
-RUN
 
-IF &&FROMAVRP EQ 'Y' GOTO :DVU1;
 
TABLE FILE BRPTFLDS
PRINT SEG HIEORG1.ID
IF INST_KEY EQ &&IKEY
ON TABLE SAVE AS CHKHIER
END
-RUN
 
-READ CHKHIER &ID.1. &INCL1.1. &INCL2.1. &INCL3.1. &LEVEL.A2.
-GOTO :DVU1_CONT;
 
-:DVU1
TABLE FILE BRPT_FLDS_HIERARCHY
PRINT HIER_LEVEL
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE AS CHKHIER
END
-RUN
-READ CHKHIER &LEVEL.A2.
 
-:DVU1_CONT
 
-CLOSE CHKHIER
 
-SET &CKHIER =  EDIT(&LEVEL, '99');
 
-*TABLE FILE BRPTFLDS
-*PRINT SEG HIEORG1.ID
-*IF INST_KEY EQ &&IKEY
-*ON TABLE SAVE AS CHKHIER
-*END
-*-RUN
 
-IF &&FROMAVRP EQ 'Y' GOTO :DVU2;
 
TABLE FILE BRPTFLDS
PRINT SEG HIEORG2.SEQ_NO
IF INST_KEY EQ &&IKEY
ON TABLE SAVE AS CHKMEM
END
-RUN
-READ CHKMEM &SEQNO.2. &CLIENT.A8. &CATG.A15. &MEM.A15. &LEVEL.A2.
 
-GOTO :DVU2_CONT;
 
-:DVU2
DEFINE FILE BRPT_FLDS_HIERARCHY
HMEMBER/A15=HIER_MEMBER;
END
TABLE FILE BRPT_FLDS_HIERARCHY
PRINT HMEMBER
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE AS CHKMEM
END
-RUN
-READ CHKMEM &MEM.A15.
 
-:DVU2_CONT
 
-CLOSE CHKMEM
 
-SET &CKMEM = IF '&MEM.EVAL' EQ '&&ROLLUP.EVAL' THEN 'Y' ELSE 'N';
 
-*-SET &NOHIERAMN = IF '&CKMEM.EVAL' EQ 'Y' AND '&CKHIER.EVAL' EQ '01' THEN 'Y' ELSE 'N';
-SET &NOHIERAMN = IF '&CKMEM.EVAL' EQ 'Y' OR '&CKHIER.EVAL' EQ '01' THEN 'Y' ELSE 'N';
 
 
-SET &&SMD = 'S';
EX EXAUSE
-RUN
 
DEFINE FILE SR_50
EX_RF_FLAG/A1 = IF VOID_DATE NE 0 THEN ' ' ELSE
                IF (((RF_FLAG EQ 'F' OR 'P') AND (EMBARK NE 'EX1' OR 'FP2' OR 'EX5') AND (SEG_COUNT LE 0)) OR (EMBARK EQ 'RF1'))  THEN 'R' ELSE
                IF (((EXSALE NE ' ') AND (SEG_COUNT GE 0)) OR ((EX_FLAG EQ 'F' OR 'P') AND (SEG_COUNT LE 0) AND (RF_FLAG EQ ' ')))  THEN 'E' ELSE ' ';
SALES_FLAG/A1 = IF RF_FLAG EQ ' ' AND EX_FLAG EQ ' '  AND VOID_DATE EQ 0 THEN 'S' ELSE
                IF RF_FLAG EQ ' ' AND EX_FLAG EQ ' '  AND VOID_DATE NE 0  THEN 'V' ELSE ' ';
AIRLN_PNR/A16 = EDIT(AUX_TKTLS_PNR, '9999999999999999');
AUX_TKT/A10 = AUX_TKTLS_NUM;
END
-RUN
 
 
TABLE FILE SR_50
SUM  LEVEL1 LEVEL2 LEVEL3 LEVEL4  AUX_TKT AIRLN_PNR AS 'AUX_PNR' SALES_FLAG EMP_ID
BY TKT_NUM
-*WHERE VOID_DATE EQ 0
-INCLUDE RPTPARMS
ON TABLE HOLD AS AIRHOLD FORMAT FOCUS INDEX TKT_NUM
END
-RUN
 
DEFINE FILE AIRHOLD
TKTN/A12 = ''''||TKT_NUM||'''';
END
TABLE FILE AIRHOLD
SUM TKTN
BY TKTN NOPRINT
ON TABLE SAVE AS AIRCHECK
END
-RUN
 
-GOTO NewAux
TABLE FILE SR_50
SUM LEVEL1 AS 'L1' LEVEL2 AS 'L2' LEVEL3 AS 'L3' LEVEL4 AS 'L4'
BY AUX_TKTLS_NUM AS 'AUX_NUM'
WHERE AUX_TKTLS_NUM NE ' ' OR '0000000000'
-INCLUDE RPTPARMS
ON TABLE HOLD AS AUXHLD
END
-RUN
 
-NewAux
TABLE FILE SR_50
SUM LEVEL1 AS 'L1' LEVEL2 AS 'L2' LEVEL3 AS 'L3' LEVEL4 AS 'L4'
  LEVEL1 LEVEL2 LEVEL3 LEVEL4 AIRLN_PNR AS 'AUX_PNR' SALES_FLAG EMP_ID
BY AUX_TKT
WHERE AUX_TKTLS_NUM NE ' ' OR '0000000000'
-INCLUDE RPTPARMS
ON TABLE HOLD AS AUXHLD FORMAT FOCUS INDEX AUX_TKT
END
-RUN
 
 
 
 
DEFINE FILE SR_50
CL_CODE/A10 = ''''||BR_CL_IDX||'''';
END
TABLE FILE SR_50
SUM CL_CODE
BY CL_CODE NOPRINT
-INCLUDE RPTPARMS
ON TABLE SAVE AS CLICODE
END
-RUN
 
 
 
 
-SET &CHKCLIENT = IF &RECORDS EQ 0 THEN '     ' ELSE IF '&NOHIERAMN.EVAL' EQ 'Y' THEN '     ' ELSE 'WHERE BR_CL_IDX IN FILE CLICODE';
 
-****** Excluding travel/Tran date so id- levels will match up regardless of time period
 
 
-INCLUDE getUnusedTktsByStatus
-RUN
 
-GOTO DEB;
UNUSEDT1 - ALL
UNUSEDT2 - AVAILABLE
UNUSEDT3 - EXPIRED
UNUSEDT4 - USED
 
 
 
 
-IF &&FROMAVRP EQ 'Y' GOTO :DVU3;
TABLE FILE BRPTFLDS
PRINT UNUSEDT1 UNUSEDT2 UNUSEDT3 UNUSEDT4
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE AS UNUSEDT
END
-RUN
-IF &LINES EQ 0 THEN GOTO :NOREAD;
-READ UNUSEDT &UNUSEDT1.1.  &UNUSEDT2.1.  &UNUSEDT3.1.  &UNUSEDT4.1.
-GOTO :DVU3_CONT;
 
-:DVU3
TABLE FILE BRPT_FLDS_DVR
PRINT ALL_UNUSEDTKT APPLIED_UNUSEDTKT EXPIRED_UNUSEDTKT USED_UNUSEDTKT
WHERE INST_KEY EQ &&IKEY
ON TABLE SAVE AS UNUSEDT
END
-RUN
-IF &LINES EQ 0 THEN GOTO :NOREAD;
-READ UNUSEDT &UNUSEDT1.6.  &UNUSEDT2.6.  &UNUSEDT3.6.  &UNUSEDT4.6.
 
-:DVU3_CONT
 
-SET &WHATSTATUS = IF &UNUSEDT1 EQ 1 THEN 'WHERE STATUS_CODE EQ ''A'' OR ''S'' OR ''U'' OR ''X'' '
- ELSE IF &UNUSEDT2 EQ 1 AND &UNUSEDT3 EQ 1 AND &UNUSEDT4 EQ 1 THEN 'WHERE STATUS_CODE EQ ''A'' OR ''S'' OR ''U'' OR ''X'' '
- ELSE IF &UNUSEDT2 EQ 0 AND &UNUSEDT3 EQ 0 AND &UNUSEDT4 EQ 0 THEN 'WHERE STATUS_CODE EQ ''A'' OR ''S'' OR ''U'' OR ''X'' '
- ELSE IF &UNUSEDT2 EQ 1 AND &UNUSEDT3 EQ 1 AND &UNUSEDT4 EQ 0 THEN 'WHERE STATUS_CODE EQ ''A'' OR ''X'' '
- ELSE IF &UNUSEDT2 EQ 1 AND &UNUSEDT3 EQ 0 AND &UNUSEDT4 EQ 0 THEN 'WHERE STATUS_CODE EQ ''A'' '
- ELSE IF &UNUSEDT2 EQ 1 AND &UNUSEDT3 EQ 0 AND &UNUSEDT4 EQ 1 THEN 'WHERE STATUS_CODE EQ ''A'' OR ''S'' OR ''U'' '
- ELSE IF &UNUSEDT2 EQ 0 AND &UNUSEDT3 EQ 1 AND &UNUSEDT4 EQ 1 THEN 'WHERE STATUS_CODE EQ ''S'' OR ''U'' OR ''X'' '
- ELSE IF &UNUSEDT2 EQ 0 AND &UNUSEDT3 EQ 1 AND &UNUSEDT4 EQ 0 THEN 'WHERE STATUS_CODE EQ ''X'' '
- ELSE IF &UNUSEDT2 EQ 0 AND &UNUSEDT3 EQ 0 AND &UNUSEDT4 EQ 1 THEN 'WHERE STATUS_CODE EQ ''S'' OR ''U'' ';
-:NOREAD
-DEB
 
-DEFAULT &OPT1 = ' ';
-DEFAULT &OPT2 = ' ';
-DEFAULT &OPT3 = ' ';
-DEFAULT &OPT4 = ' ';
-DEFAULT &OPT5 = ' ';
-DEFAULT &OPT6 = ' ';
-DEFAULT &OPT7 = ' ';
-DEFAULT &UNUSEDT1 = ' ';
-DEFAULT &UNUSEDT2 = ' ';
-DEFAULT &UNUSEDT3 = ' ';
-DEFAULT &UNUSEDT4 = ' ';
 
 
 
-SET &OPT1 = 'WHERE STATUS_CODE EQ ''S'' OR ''U'' OR ''X'' OR ''A'' ';
-SET &OPT2 = 'WHERE STATUS_CODE EQ ''A'' ';
-SET &OPT3 = 'WHERE STATUS_CODE EQ ''X'' ';
-SET &OPT4 = 'WHERE STAUTS CODE EQ ''U'' OR ''S'' ' ;
-SET &OPT5 = 'WHERE STATUS_CODE EQ ''S'' OR ''U'' OR ''X'' ';
-SET &OPT6 = 'WHERE STATUS_CODE EQ ''A'' OR ''X'' ';
-SET &OPT7 = 'WHERE STATUS_CODE EQ ''A'' OR ''S'' OR ''U'' ';
-RUN
 
 
-TYPE '&OPT1.EVAL';
-TYPE '&OPT2.EVAL';
-TYPE '&OPT3.EVAL';
-TYPE '&OPT4.EVAL';
-TYPE '&OPT5.EVAL';
-TYPE '&OPT6.EVAL';
-TYPE '&OPT7.EVAL';
 
 
-SET &WHATDTRNG = IF &UNUSEDT1 EQ 1 THEN &OPT1 ELSE
-  IF &UNUSEDT2 EQ 0 AND &UNUSEDT3 EQ 0 AND &UNUSEDT4 EQ 1 THEN &OPT4 ELSE
-  IF &UNUSEDT2 EQ 0 AND &UNUSEDT3 EQ 1 AND &UNUSEDT4 EQ 0 THEN &OPT3 ELSE
-  IF &UNUSEDT2 EQ 1 AND &UNUSEDT3 EQ 1 AND &UNUSEDT4 EQ 0 THEN &OPT6 ELSE
-  IF &UNUSEDT2 EQ 1 AND &UNUSEDT3 EQ 0 AND &UNUSEDT4 EQ 1 THEN &OPT7 ELSE
-  IF &UNUSEDT2 EQ 0 AND &UNUSEDT3 EQ 1 AND &UNUSEDT4 EQ 1 THEN &OPT5 ELSE
-  IF &UNUSEDT2 EQ 1 AND &UNUSEDT3 EQ 0 AND &UNUSEDT4 EQ 0 THEN &OPT2 ELSE &OPT1;
-:NOREAD;
-DEFAULT &WHATDTRNG = ' ';
 
-* -TYPE &WHATSTATUS
-TYPE &WHATDTRNG
 
-TYPE &&OUTTO
 
-GOTO NewAMNextract;
 
 
DEFINE FILE AMN_ITEM
 CLIENT/A8 = '&&ROLLUP.EVAL';
 ISSUEDATE/YYMD = HDATE(DATE_ISSUED, 'YYMD');
 EXPIREDATE/YYMD = HDATE(DATE_EXPIRES, 'YYMD');
-* EXPIREDATE/YYMD = HDATE(STATUS_DATE, 'YYMD');
 APPLYDATE/YYMD = HDATE(DATE_SELECTED, 'YYMD');
 DEPART_DT/YYMD = HDATE(DEPART_DATE, 'YYMD');
 PASSNGR_NM/A33 = EDIT(PAX, '999999999999999999999999999999999');
 TRN_DATE/YYMD = ISSUEDATE;
 FST_DPT_DATE/YYMD = DEPART_DT;
 NW_LEV1/A15 = EDIT(LEVEL1, '999999999999999');
 NW_LEV2/A15 = EDIT(LEVEL2, '999999999999999');
 NW_LEV3/A15 = EDIT(LEVEL3, '999999999999999');
-*Selections passed from GUI
-* BR_CL_IDX/A8 = AGENT_BRANCH | CLIENT_CODE;
 BR_CL_IDX/A8 = CLIENT_BRANCH | CLIENT_CODE;
 
 PASSNGR_NAME/A33 = EDIT(PAX, '999999999999999999999999999999999');
 TKT_NUM/A10 = TICKET_NUM;
 VAL_AIRLINE/A3 = AIRLINE_CODE;
-* AUX_TKT/A14 = AIRLINE_PNR;
 AUX_PNR/A14 = AIRLINE_PNR;
 AUX_TKT/A10 = IF EDIT(TKT_NUM, '9') EQ '2' THEN TKT_NUM ELSE ' ';
 
END
TABLE FILE AMN_ITEM
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE CLIENT AUX_TKT
      AUX_PNR
      NW_LEV1 NW_LEV2 NW_LEV3
 
BY TKT_NUM
-IF &&HMEMEBERSELECTED EQ 'N' THEN GOTO NoHierMember;
-NoHierMember
-IF '&&ROLLUP.EVAL' EQ 'OTHER-R' THEN GOTO ChkClinetNUM;
WHERE ROLLUP EQ '&&ROLLUP.EVAL'
-ChkClinetNUM
&WHATSTATUS
&WHATDTRNG
&CHKCLIENT
WHERE TYPE_CODE NE 'R'
-INCLUDE DVRUTPARMS
ON TABLE HOLD AS AMNHLD FORMAT FOCUS INDEX TKT_NUM
END
-RUN
 
 
-NewAMNextract
 
 
-IF &&FROMAVRP EQ 'Y' GOTO :DV1;
-SET &FMM=EDIT(&&FROMDT,'$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'$$99');
-SET &TOM=EDIT(&&TODT,'$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'$$99');
-GOTO :DV1_CONT;
 
-:DV1
-SET &FMM=EDIT(&&FROMDT,'$$$$$$99');
-SET &FMD=EDIT(&&FROMDT,'$$$$$$$$$99');
-SET &FMY=EDIT(&&FROMDT,'$$$99');
-SET &TOM=EDIT(&&TODT,'$$$$$$99');
-SET &TOD=EDIT(&&TODT,'$$$$$$$$$99');
-SET &TOY=EDIT(&&TODT,'$$$99');
-:DV1_CONT
 
-SET &FROMDATE = &FMM || '/' || &FMD || '/' || &FMY;
-SET &TODATE = &TOM || '/' || &TOD || '/' || &TOY;
-TYPE '&FROMDATE.EVAL'
-TYPE '&TODATE.EVAL'
 
 
 
 
 
ENGINE SQLMSS SET DEFAULT_CONNECTION AMNData
SQL SQLMSS EX USP_REVIEW_ETTEK_BANX  '&FROMDATE.EVAL', '&TODATE.EVAL', '&&ROLLUP.EVAL';
TABLE FILE SQLOUT
PRINT *
ON TABLE HOLD AS AMNHLD2 FORMAT FOCUS
END
-RUN
 
 
 
 
 
DEFINE FILE AMNHLD2
CLIENT/A8 = EDIT(rollup, '99999999');
TYPE_CODE/A1 = type_code;
STATUS_CODE/A1 = status_code;
PASSNGR_NAME/A33 = EDIT(pax, '999999999999999999999999999999999');
APPLYDATE/YYMD = HDATE(date_selected, 'YYMD');
AIRLINE_CODE/A2 = airline_code;
TICKET_VALUE/D12.2 = ticket_value;
DEPART_DT/YYMD = HDATE(depart_date, 'YYMD');
EXPIREDATE/YYMD = HDATE(date_expires, 'YYMD');
NEW_TICKET_NUM/A10 = new_ticket_num;
NEW_TICKET_VALUE/D12.2 = new_ticket_value;
ISSUEDATE/YYMD = HDATE(date_issued, 'YYMD');
ROLLUP/A8 = CLIENT;
BR_CL_IDX/A8 = client_branch | client_code;
TKT_NUM/A10 = ticket_num;
 AUX_TKT/A10 = IF EDIT(TKT_NUM, '9') EQ '2' THEN TKT_NUM ELSE ' ';
 AUX_PNR/A16 = airline_pnr;
 CUSED_TOT/D12.2 = IF STATUS_CODE EQ 'S' OR 'U'  THEN TICKET_VALUE ELSE 0;
 XUNUSED_TOT/D12.2 = IF STATUS_CODE EQ 'X'  THEN TICKET_VALUE ELSE 0;
 
 
NEW_LEVEL1/A15 = EDIT(new_level1, '999999999999999');
NEW_LEVEL2/A15 = EDIT(new_level2, '999999999999999');
NEW_LEVEL3/A15 = EDIT(new_level3, '999999999999999');
TNUM/A16 = IF STATUS_CODE EQ 'X' OR 'U' AND TKT_NUM EQ ' ' THEN AUX_PNR ELSE TKT_NUM;
LEVEL1/A15 = EDIT(new_level1, '999999999999999');
LEVEL2/A15 = EDIT(new_level2, '999999999999999');
LEVEL3/A15 = EDIT(new_level3, '999999999999999');
END
TABLE FILE AMNHLD2
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE CLIENT AUX_TKT AUX_PNR
      NEW_LEVEL1 AS 'NW_LEV1' NEW_LEVEL2 AS 'NW_LEV2' NEW_LEVEL3 AS 'NW_LEV3' CUSED_TOT XUNUSED_TOT  TNUM
      LEVEL1 LEVEL2 LEVEL3
BY CLIENT
BY STATUS_CODE
BY TKT_NUM
&CHKCLIENT
&WHATDTRNG
-INCLUDE DVRUTPARMS
ON TABLE HOLD AS AMNHLD2
END
-RUN
 
 
TABLE FILE AMNHLD2
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE CLIENT
      AUX_TKT AUX_PNR NW_LEV1 NW_LEV2 NW_LEV3 CUSED_TOT XUNUSED_TOT  TNUM
 
BY TKT_NUM
ON TABLE HOLD AS AMNHLD FORMAT FOCUS INDEX TKT_NUM
END
-RUN
 
 
-*-IF &&DVRLINES NE 0 THEN GOTO ALLrecords;
 
-IF '&NOHIERAMN.EVAL' EQ 'Y' THEN GOTO ALLrecords;
 
-SET &&WHERE1 = ' ';
 
-* Ticket in AMN_ITEM for Status S, U, or X
DEFINE FILE AMNHLD
TKTN/A12 = ''''||TKT_NUM||'''';
NONTNTTKT/A1 = EDIT(TKT_NUM, '9');
END
TABLE FILE AMNHLD
PRINT TKTN
BY TKTN NOPRINT
WHERE TKT_NUM NE ' '
IF NONTNTTKT NE '2'
ON TABLE SAVE AS USEDTKT
END
-RUN
 
DEFINE FILE AMNHLD
ATKTN/A12 = ''''||TKT_NUM||'''';
NONTNTTKT/A1 = EDIT(TKT_NUM, '9');
END
TABLE FILE AMNHLD
PRINT ATKTN
BY ATKTN NOPRINT
WHERE NONTNTTKT EQ '2'
ON TABLE SAVE AS USED2
END
-RUN
 
DEFINE FILE AMNHLD
-*AUXTKT/A16 = ''''||AUX_TKT||'''';
AUXPNR/A18 = ''''||AUX_PNR||'''';
END
TABLE FILE AMNHLD
 
SUM AUXPNR
BY AUX_PNR NOPRINT
WHERE AUX_PNR NE ' '
ON TABLE SAVE AS USEDAUX
END
-RUN
 
DEFINE FILE AMNHLD
TKTNEW/A12 = ''''||NEW_TICKET_NUM||'''';
NONNEWTKT/A1 = EDIT(NEW_TICKET_NUM, '9');
ATKTN/A12 = ''''||TKT_NUM||'''';
NONTNTTKT/A1 = EDIT(TKT_NUM, '9');
END
-RUN
TABLE FILE AMNHLD
PRINT TKTNEW
BY TKTNEW NOPRINT
WHERE TKT_NUM EQ ' '
WHERE NONNEWTKT NE '2'
WHERE NONTNTTKT NE '2'
WHERE NEW_TICKET_NUM NE ' '
ON TABLE SAVE AS USEDNEW
END
-RUN
 
 
 
 
JOIN CLEAR *
JOIN TKT_NUM IN AMNHLD TO TKT_NUM IN AIRHOLD AS J1
-RUN
 
 
TABLE FILE AMNHLD
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4  CLIENT TKT_NUM AUX_PNR  AUX_TKT
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY TKT_NUM
WHERE AIRHOLD.TKT_NUM IN FILE USEDTKT
ON TABLE HOLD AS AMNTKT FORMAT FOCUS
END
-RUN
-SET &AMNTKTNR = IF &RECORDS EQ 0 THEN 'Y' ELSE 'N';
 
 
TABLE FILE AIRHOLD
SUM LEVEL1 LEVEL2 LEVEL3 LEVEL4 AUX_TKT TKT_NUM EMP_ID
BY AUX_PNR
ON TABLE HOLD AS AIRHOLD2 FORMAT FOCUS INDEX AUX_PNR
END
-RUN
 
JOIN CLEAR *
JOIN AUX_PNR IN AMNHLD TO AUX_PNR IN AIRHOLD2 AS J2
-RUN
 
 
TABLE FILE AMNHLD
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4  CLIENT TKT_NUM AUX_PNR  AUX_TKT
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY AUX_PNR
WHERE AIRHOLD2.AUX_PNR IN FILE USEDAUX
ON TABLE HOLD AS AMNAUX
END
-RUN
 
 
TABLE FILE AMNAUX
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4  CLIENT TKT_NUM AUX_PNR  AUX_TKT
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY TKT_NUM
WHERE NOT TKT_NUM  IN FILE AIRCHECK
ON TABLE HOLD AS AMNAUX1 FORMAT FOCUS
END
-RUN

-SET &AMNAUX1NR = IF &RECORDS EQ 0 THEN 'Y' ELSE 'N';

 
DEFINE FILE AMNAUX
TKTN/A12 = ''''||TKT_NUM||'''';
END
TABLE FILE AMNAUX
SUM TKTN
BY TKTN NOPRINT
ON TABLE SAVE AS AUXCHECK
END
-RUN
 
 
 
 
-*TABLE FILE AIRHOLD
TABLE FILE AUXHLD
SUM LEVEL1 LEVEL2 LEVEL3 LEVEL4 AUX_PNR TKT_NUM EMP_ID
BY AUX_TKT
-*ON TABLE HOLD AS AIRHOLD3 FORMAT FOCUS INDEX AUX_TKT
ON TABLE HOLD AS AUXHLD2 FORMAT FOCUS INDEX AUX_TKT
END
-RUN
 
JOIN CLEAR *
-*JOIN TKT_NUM IN AMNHLD TO AUX_TKT IN AUXHLD AS J3
JOIN TKT_NUM IN AMNHLD TO AUX_TKT IN AUXHLD2 AS J3
-RUN
 
 
TABLE FILE AMNHLD
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4  CLIENT TKT_NUM AUX_PNR  AUX_TKT
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY AUX_TKT
-*WHERE AUXHLD.AUX_TKT IN FILE USED2
WHERE AUXHLD2.AUX_TKT IN FILE USED2
ON TABLE HOLD AS AMNTKT2
END
-RUN
 
 
 
TABLE FILE AMNTKT2
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4  CLIENT TKT_NUM AUX_PNR  AUX_TKT
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY TKT_NUM
WHERE NOT TKT_NUM IN FILE AUXCHECK
ON TABLE HOLD AS AMNTKT3 FORMAT FOCUS
END
-RUN

-SET &AMNTKT3NR = IF &RECORDS EQ 0 THEN 'Y' ELSE 'N'; 
 
JOIN CLEAR *
JOIN AUX_TKT IN AUXHLD TO TKT_NUM IN AMNHLD AS J4
-RUN
 
TABLE FILE AUXHLD
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4  CLIENT TKT_NUM AUX_PNR  AUX_TKT
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY AUX_TKT
WHERE AUX_TKT IN FILE USEDTKT
ON TABLE HOLD AS AMNTKT4
END
-RUN
 
TABLE FILE AMNTKT4
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4  CLIENT TKT_NUM AUX_PNR  AUX_TKT
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY TKT_NUM
ON TABLE HOLD AS AMNTKT5 FORMAT FOCUS
END
-RUN

-SET &AMNTKT5NR = IF &RECORDS EQ 0 THEN 'Y' ELSE 'N';


-SET &HLDPATH=TEMPPATH(50,'A50');
-SET &HNKA=&HLDPATH || 'AMNTKT.FOC';
-SET &HNKB=&HLDPATH || 'AMNAUX1.FOC';
-SET &HNKC=&HLDPATH || 'AMNTKT3.FOC';
-SET &HNKD=&HLDPATH || 'AMNTKT5.FOC';
-SET &FILENAME = 'AMNTKT';
-RUN
 
 
 
 
-SET &HOLDFILEA = IF '&AMNTKTNR.EVAL' EQ 'N' THEN &HNKA | ' AS ' | &FILENAME ELSE ' ';
-SET &HOLDFILEB = IF '&AMNAUX1NR.EVAL' EQ 'N' THEN &HNKB | ' AS ' | &FILENAME ELSE ' ';
-SET &HOLDFILEC = IF '&AMNTKT3NR.EVAL' EQ 'N' THEN &HNKC | ' AS ' | &FILENAME ELSE ' ';
-SET &HOLDFILED = IF '&AMNTKT5NR.EVAL' EQ 'N' THEN &HNKD | ' AS ' | &FILENAME ELSE ' ';
  
  
 
 
USE ADD
&HOLDFILEA
&HOLDFILEB
&HOLDFILEC
&HOLDFILED
END
 
 
 
DEFINE FILE AMNTKT
AUX_NUM/A10 = IF TKT_NUM EQ ' ' THEN NEW_TICKET_NUM ELSE TKT_NUM;
END
TABLE FILE AMNTKT
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4 TKT_NUM AUX_TKT AUX_PNR AUX_NUM
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
 
BY AUX_NUM
ON TABLE HOLD AS AMNHOLD1
END
-RUN
 
TABLE FILE AUXHLD
SUM L1 L2 L3 L4 EMP_ID AS 'NWEMP_ID'
BY AUX_TKT AS 'AUX_NUM'
WHERE AUX_TKT NE ' '
ON TABLE HOLD AS AUXHLD2
END
-RUN
 
 
MATCH FILE AMNHOLD1
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4 TKT_NUM AUX_TKT AUX_PNR AUX_NUM
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY AUX_NUM
ON TABLE HOLD
RUN
FILE AUXHLD2
SUM L1 L2 L3 L4 NWEMP_ID  
BY AUX_NUM
-*BY AUX_TKT
AFTER MATCH HOLD AS AMNHOLD3 OLD
END
-RUN
 
 
 
-GOTO Finish;
 
-ALLrecords
-*-SET &&WHERE1 = 'WHERE TKT_NUM NE '' '' ';
 
 
JOIN CLEAR *
JOIN TKT_NUM IN AMNHLD TO TKT_NUM IN AIRHOLD AS J1
-RUN
DEFINE FILE AMNHLD
AUX_NUM/A10 = IF TKT_NUM EQ ' ' THEN NEW_TICKET_NUM ELSE TKT_NUM;
END
TABLE FILE AMNHLD
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4 TKT_NUM AUX_TKT AUX_PNR AUX_NUM
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID  
 
BY TKT_NUM
ON TABLE HOLD AS AMNHOLD1
END
-RUN
 

TABLE FILE AUXHLD
SUM L1 L2 L3 L4 EMP_ID AS 'NWEMP_ID' 
BY AUX_TKT AS 'AUX_NUM'
WHERE AUX_TKT NE ' '
ON TABLE HOLD AS AUXHLD2
END
-RUN


 
MATCH FILE AMNHOLD1
PRINT ROLLUP PASSNGR_NAME TYPE_CODE STATUS_CODE APPLYDATE
      AIRLINE_CODE TICKET_VALUE DEPART_DT
      EXPIREDATE NEW_TICKET_NUM NEW_TICKET_VALUE ISSUEDATE
      LEVEL1 LEVEL2 LEVEL3 LEVEL4 TKT_NUM AUX_TKT AUX_PNR AUX_NUM
      NW_LEV1 NW_LEV2 NW_LEV3 EMP_ID
BY AUX_NUM
ON TABLE HOLD
RUN
FILE AUXHLD2
SUM L1 L2 L3 L4 NWEMP_ID
BY AUX_NUM
-*BY AUX_TKT
AFTER MATCH HOLD AS AMNHOLD3 OLD
END
-RUN







-Finish


 
-SET &RPTTITLE = IF '&&ROLLUP.EVAL' NE 'OTHER-R' THEN 'Travel and Transport Unused Ticket Report for &&ROLLUP.EVAL Account'
- ELSE 'Travel and Transport Unused Ticket Report for Client &&CLIENT.EVAL Account';
 
 
-IF &LINES EQ 0 THEN GOTO NOUNUSED2;
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF1;
-INCLUDE AVRP_SUBFOOT
-:AVSF1
 
DEFINE FILE AMNHOLD3
-* STS_RSN/A8 = IF STATUS_CODE EQ 'A' THEN 'OPEN' ELSE
-*       IF STATUS_CODE EQ 'U' THEN 'USED' ELSE 'EXPIRED';
 STS_RSN/A9 = IF STATUS_CODE EQ 'A' THEN 'AVAILABLE' ELSE
       IF STATUS_CODE EQ 'S' OR 'U' THEN 'USED' ELSE 'EXPIRED';
 EXP_DATE/MDYY = EXPIREDATE;
 ISD_DATE/MDYY= ISSUEDATE;
 APPLY_DT/MDYY= APPLYDATE;
 DPT_DT/MDYY = DEPART_DT;
 XLV1/A15 = IF TKT_NUM EQ ' ' AND AUX_NUM NE ' ' THEN L1 ELSE
            IF TKT_NUM EQ ' ' AND AUX_NUM EQ ' ' THEN NW_LEV1 ELSE LEVEL1;
 XLV2/A15 = IF TKT_NUM EQ ' ' AND AUX_NUM NE ' ' THEN L2 ELSE
            IF TKT_NUM EQ ' ' AND AUX_NUM EQ ' ' THEN NW_LEV2 ELSE LEVEL2;
 XLV3/A15 = IF TKT_NUM EQ ' ' AND AUX_NUM NE ' ' THEN L3 ELSE
            IF TKT_NUM EQ ' ' AND AUX_NUM EQ ' ' THEN NW_LEV3 ELSE LEVEL3;
 XLV4/A60 = IF TKT_NUM EQ ' ' AND AUX_NUM NE ' ' THEN L4 ELSE LEVEL4;
-* XTKT_NUM/A14 = IF TKT_NUM EQ ' ' THEN AUX_TKT ELSE TKT_NUM;
-* TKT_AMT/D12.2 = IF STATUS_CODE EQ 'S' OR 'U' AND   EQ 0 THEN TICKET_VALUE ELSE
-*                    IF STATUS_CODE EQ 'S' OR 'U' AND   GT 0 THEN NEW_TICKET_VALUE ELSE TICKET_VALUE;
TKT_AMT/D12.2 = TICKET_VALUE;
 XTKT_NUM/A16 = IF STATUS_CODE EQ 'X' OR 'U' AND TKT_NUM EQ ' ' THEN AUX_PNR ELSE TKT_NUM;
EMP_IDX/A15 = IF EMP_ID EQ ' ' THEN NWEMP_ID ELSE EMP_ID;
NOWTOD/A8 = HHMMSS (NOWTOD);
-*IMAGE/A80 = '<img src=HTTPS://www.ettekreview.com/asp/NEW_HDR.jpg>';
IMAGE/A80 = '<img src=' || '&&SRVR.EVAL' || '/asp/NEW_HDR.PNG>';
END
TABLE FILE AMNHOLD3
HEADING
"<IMAGE>"
"</5"
"&RPTTITLE.EVAL"
"&&DTDESC.EVAL &&FROMDT - &&TODT "
 
PRINT STS_RSN AS 'STATUS'
      ISD_DATE AS 'ISSUED'
      EXP_DATE AS 'EXPIRATION'
      PASSNGR_NAME AS 'TRAVELER'
      EMP_IDX &EMPID 
      XTKT_NUM AS 'TICKET NUMBER'
      AIRLINE_CODE AS 'A/L'
      NEW_TICKET_NUM AS 'APPLIED TO'
      APPLY_DT AS 'APPLIED DATE'
-*      TICKET_VALUE AS 'AMOUNT'
      TKT_AMT AS 'AMOUNT'
      NW_LEV1 &&LV1
      NW_LEV2 &&LV2
      NW_LEV3 &&LV3
-*      XLV1  &&LV1
-*      XLV2 &&LV2
-*      XLV3 &&LV3
      XLV4 &&LV4
BY STS_RSN NOPRINT
ON STS_RSN RECOMPUTE MULTILINES AS 'TOTAL FOR'
ON TABLE COLUMN-TOTAL
 
 
 
&&OUTLINE1
&&OUTLINE2
 
 
ON TABLE SUBFOOT
-INCLUDE SBFOOT
 
ON TABLE SET STYLE *
UNITS=IN, PAGESIZE='Letter', LEFTMARGIN=0.200000, RIGHTMARGIN=0.200000,
    TOPMARGIN=0.500000, BOTTOMMARGIN=0.250000, SQUEEZE=ON,
    ORIENTATION=LANDSCAPE, $
TYPE=REPORT,FONT=TIMES NEW ROMAN, SIZE=8, COLOR=BLACK, GRID=ON, STYLE=NORMAL,WRAP= OFF, $
TYPE=TITLE, SIZE=9, STYLE=BOLD+UNDERLINE,  $
TYPE=HEADING, SIZE=10, STYLE=BOLD, FONT=TIMES NEW ROMAN,$
TYPE=HEADING, SIZE=14, LINE=8, STYLE=BOLD, FONT=TIMES NEW ROMAN,$
TYPE=HEADING, SIZE=10, LINE=9, STYLE=BOLD, FONT=TIMES NEW ROMAN,$
 
TYPE=FOOTING, SIZE=7, STYLE=BOLD, COLOR=GREY, $
TYPE=TITLE, STYLE=BOLD, $
TYPE=SUBFOOT, SIZE=14, STYLE=BOLD, $
TYPE=SUBTOTAL, SIZE=9, STYLE=BOLD, $
TYPE=GRANDTOTAL, SIZE=9, STYLE=BOLD, $
TYPE=REPORT, TITLETEXT=&DSC,$
 
ENDSTYLE
 
END
-RUN
 
-IF &FOCERRNUM EQ 205  OR &LINES EQ 0 THEN GOTO NOUNUSED2;
-GOTO XXUNUSED2;
-NOUNUSED2
 
-IF &&FROMAVRP NE 'Y' GOTO :AVSF2;
-INCLUDE AVRP_SUBFOOT
-:AVSF2
 
-SET &TITLETEXT = 'Unused Tickets  ';
-INCLUDE DVRNoRecord
-GOTO XXIT;
-XXUNUSED2
-GOTO XXIT;
 
 
 
 
 
 
 
 
-XXIT;
